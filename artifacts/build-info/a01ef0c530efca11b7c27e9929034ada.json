{
	"id": "a01ef0c530efca11b7c27e9929034ada",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title AutoStaking\n * @dev Contract for staking tokens with fixed lock periods and auto-compounding rewards.\n */\ncontract AutoStaking is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public immutable stakingToken;\n    IERC20 public rewardToken;\n\n    uint256 public constant SECONDS_PER_YEAR = 365 days;\n    uint256 public constant AUTO_COMPOUND_FEE = 50; // 0.5%\n    address public feeReceiver;\n\n    uint256[3] public lockPeriods = [30 days, 60 days, 90 days];\n    uint256[3] public apyRates = [500, 1000, 1500]; // basis points\n\n    struct StakeInfo {\n        uint256 amount;\n        uint256 stakeTime;\n        uint256 unlockTime;\n        bool claimed;\n        bool autoStaking;\n        uint256 compoundedAmount;\n    }\n\n    mapping(address => StakeInfo[]) public stakes;\n    mapping(address => uint256) public pendingRewardWithdrawals;\n\n    uint256 public totalStaked;\n    uint256 public rewardPoolBalance;\n\n    event Staked(address indexed user, uint256 amount, uint256 periodIndex, bool autoStake);\n    event Claimed(address indexed user, uint256 amount, uint256 stakeIndex);\n    event AutoCompounded(address indexed user, uint256 stakeIndex, uint256 compoundedAmount);\n    event AutoStakeToggled(address indexed user, uint256 stakeIndex, bool status);\n    event RewardTokenUpdated(address indexed newRewardToken);\n    event FeeReceiverUpdated(address indexed newFeeReceiver);\n    event APYUpdated(uint256 periodIndex, uint256 newAPY);\n    event RewardPoolFundsAdded(uint256 amount);\n    event WithdrawnRewards(address indexed account, uint256 amount);\n\n    /**\n     * @notice Restricts function to externally owned accounts (EOAs)\n     */\n    modifier onlyEOA() {\n        require(tx.origin == msg.sender, \"Caller must be EOA\");\n        _;\n    }\n\n    constructor(\n        address _stakingTokenAddress,\n        address _rewardTokenAddress,\n        address _feeReceiver\n    ) Ownable(msg.sender) {\n        require(_stakingTokenAddress != address(0), \"Invalid staking token\");\n        require(_rewardTokenAddress != address(0), \"Invalid reward token\");\n        require(_feeReceiver != address(0), \"Invalid fee receiver\");\n\n        stakingToken = IERC20(_stakingTokenAddress);\n        rewardToken = IERC20(_rewardTokenAddress);\n        feeReceiver = _feeReceiver;\n    }\n\n    /**\n     * @notice Stake tokens for a fixed period\n     * @param amount Amount of tokens to stake\n     * @param periodIndex Index of the lock period (0, 1, or 2)\n     * @param autoStake Whether to enable auto-staking after unlock\n     */\n    function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA {\n        require(periodIndex < lockPeriods.length, \"Invalid period index\");\n        require(amount > 0, \"Zero amount\");\n\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n\n        uint256 unlockTime = block.timestamp + lockPeriods[periodIndex];\n\n        stakes[msg.sender].push(StakeInfo({\n            amount: amount,\n            stakeTime: block.timestamp,\n            unlockTime: unlockTime,\n            claimed: false,\n            autoStaking: autoStake,\n            compoundedAmount: 0\n        }));\n\n        totalStaked += amount;\n\n        emit Staked(msg.sender, amount, periodIndex, autoStake);\n    }\n\n    /**\n     * @notice Calculate accrued reward for a stake\n     * @param account Address of staker\n     * @param stakeIndex Index of stake\n     */\n    function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {\n        require(account != address(0), \"Invalid account\");\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo memory info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n\n        uint256 endTime = info.unlockTime;\n        if (info.autoStaking && block.timestamp > endTime) {\n            endTime = block.timestamp;\n        }\n\n        uint256 timeHeld = endTime - info.stakeTime;\n        uint256 periodIndex = getPeriodIndex(info.unlockTime - info.stakeTime);\n        uint256 apy = apyRates[periodIndex];\n\n        uint256 principal = info.amount + info.compoundedAmount;\n        return (principal * apy * timeHeld) / (10000 * SECONDS_PER_YEAR);\n    }\n\n    /**\n     * @notice Get period index from duration\n     */\n    function getPeriodIndex(uint256 duration) internal view returns (uint256) {\n        for (uint256 i = 0; i < lockPeriods.length; i++) {\n            if (duration == lockPeriods[i]) {\n                return i;\n            }\n        }\n        revert(\"Unsupported lock period\");\n    }\n\n    /**\n     * @notice Claim reward for a specific stake\n     * @param stakeIndex Index of stake\n     */\n    function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {\n        address account = msg.sender;\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo storage info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n        require(block.timestamp >= info.unlockTime, \"Still locked\");\n\n        uint256 reward = calculateReward(account, stakeIndex);\n        require(rewardPoolBalance >= reward, \"Insufficient reward pool\");\n\n        info.claimed = true;\n\n        if (info.autoStaking && info.compoundedAmount > 0) {\n            uint256 totalToTransfer = info.compoundedAmount + reward;\n            uint256 fee = (totalToTransfer * AUTO_COMPOUND_FEE) / 10000;\n            uint256 userAmount = totalToTransfer - fee;\n\n            pendingRewardWithdrawals[account] += userAmount;\n            pendingRewardWithdrawals[feeReceiver] += fee;\n            rewardPoolBalance -= totalToTransfer;\n        } else {\n            pendingRewardWithdrawals[account] += reward;\n            rewardPoolBalance -= reward;\n        }\n\n        emit Claimed(account, reward, stakeIndex);\n    }\n\n    /**\n     * @notice Withdraw pending rewards\n     */\n    function withdrawRewards() external nonReentrant {\n        uint256 amount = pendingRewardWithdrawals[msg.sender];\n        require(amount > 0, \"No rewards to withdraw\");\n\n        pendingRewardWithdrawals[msg.sender] = 0;\n        rewardToken.safeTransfer(msg.sender, amount);\n        emit WithdrawnRewards(msg.sender, amount);\n    }\n\n    /**\n     * @notice Toggle auto-staking for a stake\n     * @param stakeIndex Index of stake\n     */\n    function toggleAutoStake(uint256 stakeIndex) external {\n        address account = msg.sender;\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo storage info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n\n        info.autoStaking = !info.autoStaking;\n        emit AutoStakeToggled(account, stakeIndex, info.autoStaking);\n    }\n\n    /**\n     * @notice Compound reward into new stake\n     * @param stakeIndex Index of stake\n     */\n    function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA {\n        address account = msg.sender;\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo storage info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n        require(info.autoStaking, \"Auto-staking disabled\");\n        require(block.timestamp >= info.unlockTime, \"Still locked\");\n\n        uint256 reward = calculateReward(account, stakeIndex);\n        require(rewardPoolBalance >= reward, \"Insufficient reward pool\");\n\n        info.stakeTime = block.timestamp;\n        info.unlockTime = block.timestamp + (info.unlockTime - info.stakeTime); // same period\n        info.compoundedAmount += reward;\n        rewardPoolBalance -= reward;\n\n        emit AutoCompounded(account, stakeIndex, info.compoundedAmount);\n    }\n\n    /**\n     * @notice Add funds to reward pool\n     * @param amount Amount to add\n     */\n    function addRewardPoolFunds(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Zero amount\");\n        rewardToken.safeTransferFrom(msg.sender, address(this), amount);\n        rewardPoolBalance += amount;\n        emit RewardPoolFundsAdded(amount);\n    }\n\n    /**\n     * @notice Update APY rate for a period\n     * @param periodIndex Index of period\n     * @param newAPY New APY in basis points\n     */\n    function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {\n        require(periodIndex < lockPeriods.length, \"Invalid period index\");\n        require(newAPY <= 10000, \"APY too high\"); // Max 100%\n        apyRates[periodIndex] = newAPY;\n        emit APYUpdated(periodIndex, newAPY);\n    }\n\n    /**\n     * @notice Update reward token address\n     * @param newRewardToken New reward token address\n     */\n    function updateRewardToken(address newRewardToken) external onlyOwner {\n        require(newRewardToken != address(0), \"Invalid reward token\");\n        rewardToken = IERC20(newRewardToken);\n        emit RewardTokenUpdated(newRewardToken);\n    }\n\n    /**\n     * @notice Update fee receiver address\n     * @param newFeeReceiver New fee receiver address\n     */\n    function updateFeeReceiver(address newFeeReceiver) external onlyOwner {\n        require(newFeeReceiver != address(0), \"Invalid fee receiver\");\n        feeReceiver = newFeeReceiver;\n        emit FeeReceiverUpdated(newFeeReceiver);\n    }\n\n    /**\n     * @notice Get active stakes for an account\n     */\n    function getActiveStakes(address user) external view returns (StakeInfo[] memory) {\n        return stakes[user];\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking.sol": {
				"AutoStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeReceiver",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "APYUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "compoundedAmount",
									"type": "uint256"
								}
							],
							"name": "AutoCompounded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "AutoStakeToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeReceiver",
									"type": "address"
								}
							],
							"name": "FeeReceiverUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPoolFundsAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRewardToken",
									"type": "address"
								}
							],
							"name": "RewardTokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoStake",
									"type": "bool"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawnRewards",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AUTO_COMPOUND_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SECONDS_PER_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewardPoolFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "apyRates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "compoundReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getActiveStakes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "claimed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "autoStaking",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "compoundedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct AutoStaking.StakeInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lockPeriods",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pendingRewardWithdrawals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "setAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "autoStake",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakeTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "claimed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "autoStaking",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "compoundedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "toggleAutoStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeReceiver",
									"type": "address"
								}
							],
							"name": "updateFeeReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRewardToken",
									"type": "address"
								}
							],
							"name": "updateRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract for staking tokens with fixed lock periods and auto-compounding rewards.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addRewardPoolFunds(uint256)": {
								"params": {
									"amount": "Amount to add"
								}
							},
							"calculateReward(address,uint256)": {
								"params": {
									"account": "Address of staker",
									"stakeIndex": "Index of stake"
								}
							},
							"claimReward(uint256)": {
								"params": {
									"stakeIndex": "Index of stake"
								}
							},
							"compoundReward(uint256)": {
								"params": {
									"stakeIndex": "Index of stake"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAPY(uint256,uint256)": {
								"params": {
									"newAPY": "New APY in basis points",
									"periodIndex": "Index of period"
								}
							},
							"stake(uint256,uint256,bool)": {
								"params": {
									"amount": "Amount of tokens to stake",
									"autoStake": "Whether to enable auto-staking after unlock",
									"periodIndex": "Index of the lock period (0, 1, or 2)"
								}
							},
							"toggleAutoStake(uint256)": {
								"params": {
									"stakeIndex": "Index of stake"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateFeeReceiver(address)": {
								"params": {
									"newFeeReceiver": "New fee receiver address"
								}
							},
							"updateRewardToken(address)": {
								"params": {
									"newRewardToken": "New reward token address"
								}
							}
						},
						"title": "AutoStaking",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking.sol\":418:9768  contract AutoStaking is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"Staking.sol\":730:789  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Staking.sol\":763:770  30 days */\n  0x278d00\n    /* \"Staking.sol\":730:789  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":772:779  60 days */\n  0x4f1a00\n    /* \"Staking.sol\":730:789  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":781:788  90 days */\n  0x76a700\n    /* \"Staking.sol\":730:789  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  0xffffff\n  and\n  dup2\n  mstore\n  pop\n  0x04\n  swap1\n  0x03\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Staking.sol\":795:841  uint256[3] public apyRates = [500, 1000, 1500] */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Staking.sol\":825:828  500 */\n  0x01f4\n    /* \"Staking.sol\":795:841  uint256[3] public apyRates = [500, 1000, 1500] */\n  0xffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":830:834  1000 */\n  0x03e8\n    /* \"Staking.sol\":795:841  uint256[3] public apyRates = [500, 1000, 1500] */\n  0xffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":836:840  1500 */\n  0x05dc\n    /* \"Staking.sol\":795:841  uint256[3] public apyRates = [500, 1000, 1500] */\n  0xffff\n  and\n  dup2\n  mstore\n  pop\n  0x07\n  swap1\n  0x03\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"Staking.sol\":2084:2598  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  revert(0x00, 0x00)\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"Staking.sol\":2215:2225  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":2277:2278  0 */\n  0x00\n    /* \"Staking.sol\":2245:2279  _stakingTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking.sol\":2245:2265  _stakingTokenAddress */\n  dup4\n    /* \"Staking.sol\":2245:2279  _stakingTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Staking.sol\":2237:2305  require(_stakingTokenAddress != address(0), \"Invalid staking token\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"Staking.sol\":2354:2355  0 */\n  0x00\n    /* \"Staking.sol\":2323:2356  _rewardTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking.sol\":2323:2342  _rewardTokenAddress */\n  dup3\n    /* \"Staking.sol\":2323:2356  _rewardTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Staking.sol\":2315:2381  require(_rewardTokenAddress != address(0), \"Invalid reward token\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"Staking.sol\":2423:2424  0 */\n  0x00\n    /* \"Staking.sol\":2399:2425  _feeReceiver != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking.sol\":2399:2411  _feeReceiver */\n  dup2\n    /* \"Staking.sol\":2399:2425  _feeReceiver != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Staking.sol\":2391:2450  require(_feeReceiver != address(0), \"Invalid fee receiver\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"Staking.sol\":2483:2503  _stakingTokenAddress */\n  dup3\n    /* \"Staking.sol\":2461:2504  stakingToken = IERC20(_stakingTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Staking.sol\":2535:2554  _rewardTokenAddress */\n  dup2\n    /* \"Staking.sol\":2514:2525  rewardToken */\n  0x02\n  0x00\n    /* \"Staking.sol\":2514:2555  rewardToken = IERC20(_rewardTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":2579:2591  _feeReceiver */\n  dup1\n    /* \"Staking.sol\":2565:2576  feeReceiver */\n  0x03\n  0x00\n    /* \"Staking.sol\":2565:2591  feeReceiver = _feeReceiver */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":2084:2598  constructor(... */\n  pop\n  pop\n  pop\n    /* \"Staking.sol\":418:9768  contract AutoStaking is Ownable, ReentrancyGuard {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Staking.sol\":418:9768  contract AutoStaking is Ownable, ReentrancyGuard {... */\ntag_2:\n  dup3\n  0x03\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_31:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_32\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_31)\ntag_32:\ntag_30:\n  pop\n  swap1\n  pop\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  pop\n  swap1\n  jump\t// out\ntag_4:\n  dup3\n  0x03\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_36:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_36)\ntag_37:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_38\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_38:\n  pop\n  swap1\n  jump\t// out\ntag_34:\ntag_39:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_40\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_39)\ntag_40:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_44:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_45:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_62\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_44\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_46:\n    /* \"#utility.yul\":641:665   */\n  tag_64\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_45\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_65:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_47:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_67\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_46\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_7:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  0x00\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_70\n  tag_42\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":966:1085   */\ntag_69:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_71\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_47\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_72\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_47\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_73\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_47\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_48:\n    /* \"#utility.yul\":1601:1625   */\n  tag_75\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_45\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_14:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_77\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_48\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1866:2035   */\ntag_49:\n    /* \"#utility.yul\":1950:1961   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  dup3\n    /* \"#utility.yul\":1979:1982   */\n  dup3\n    /* \"#utility.yul\":1972:1991   */\n  mstore\n    /* \"#utility.yul\":2024:2028   */\n  0x20\n    /* \"#utility.yul\":2019:2022   */\n  dup3\n    /* \"#utility.yul\":2015:2029   */\n  add\n    /* \"#utility.yul\":2000:2029   */\n  swap1\n  pop\n    /* \"#utility.yul\":1866:2035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2041:2212   */\ntag_50:\n    /* \"#utility.yul\":2181:2204   */\n  0x496e76616c6964207374616b696e6720746f6b656e0000000000000000000000\n    /* \"#utility.yul\":2177:2178   */\n  0x00\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2165:2179   */\n  add\n    /* \"#utility.yul\":2158:2205   */\n  mstore\n    /* \"#utility.yul\":2041:2212   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2218:2584   */\ntag_51:\n    /* \"#utility.yul\":2360:2363   */\n  0x00\n    /* \"#utility.yul\":2381:2448   */\n  tag_81\n    /* \"#utility.yul\":2445:2447   */\n  0x15\n    /* \"#utility.yul\":2440:2443   */\n  dup4\n    /* \"#utility.yul\":2381:2448   */\n  tag_49\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2374:2448   */\n  swap2\n  pop\n    /* \"#utility.yul\":2457:2550   */\n  tag_82\n    /* \"#utility.yul\":2546:2549   */\n  dup3\n    /* \"#utility.yul\":2457:2550   */\n  tag_50\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2575:2577   */\n  0x20\n    /* \"#utility.yul\":2570:2573   */\n  dup3\n    /* \"#utility.yul\":2566:2578   */\n  add\n    /* \"#utility.yul\":2559:2578   */\n  swap1\n  pop\n    /* \"#utility.yul\":2218:2584   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2590:3009   */\ntag_21:\n    /* \"#utility.yul\":2756:2760   */\n  0x00\n    /* \"#utility.yul\":2794:2796   */\n  0x20\n    /* \"#utility.yul\":2783:2792   */\n  dup3\n    /* \"#utility.yul\":2779:2797   */\n  add\n    /* \"#utility.yul\":2771:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2843:2852   */\n  dup2\n    /* \"#utility.yul\":2837:2841   */\n  dup2\n    /* \"#utility.yul\":2833:2853   */\n  sub\n    /* \"#utility.yul\":2829:2830   */\n  0x00\n    /* \"#utility.yul\":2818:2827   */\n  dup4\n    /* \"#utility.yul\":2814:2831   */\n  add\n    /* \"#utility.yul\":2807:2854   */\n  mstore\n    /* \"#utility.yul\":2871:3002   */\n  tag_84\n    /* \"#utility.yul\":2997:3001   */\n  dup2\n    /* \"#utility.yul\":2871:3002   */\n  tag_51\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2863:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2590:3009   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3015:3185   */\ntag_52:\n    /* \"#utility.yul\":3155:3177   */\n  0x496e76616c69642072657761726420746f6b656e000000000000000000000000\n    /* \"#utility.yul\":3151:3152   */\n  0x00\n    /* \"#utility.yul\":3143:3149   */\n  dup3\n    /* \"#utility.yul\":3139:3153   */\n  add\n    /* \"#utility.yul\":3132:3178   */\n  mstore\n    /* \"#utility.yul\":3015:3185   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3191:3557   */\ntag_53:\n    /* \"#utility.yul\":3333:3336   */\n  0x00\n    /* \"#utility.yul\":3354:3421   */\n  tag_87\n    /* \"#utility.yul\":3418:3420   */\n  0x14\n    /* \"#utility.yul\":3413:3416   */\n  dup4\n    /* \"#utility.yul\":3354:3421   */\n  tag_49\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3421   */\n  swap2\n  pop\n    /* \"#utility.yul\":3430:3523   */\n  tag_88\n    /* \"#utility.yul\":3519:3522   */\n  dup3\n    /* \"#utility.yul\":3430:3523   */\n  tag_52\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3548:3550   */\n  0x20\n    /* \"#utility.yul\":3543:3546   */\n  dup3\n    /* \"#utility.yul\":3539:3551   */\n  add\n    /* \"#utility.yul\":3532:3551   */\n  swap1\n  pop\n    /* \"#utility.yul\":3191:3557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3563:3982   */\ntag_24:\n    /* \"#utility.yul\":3729:3733   */\n  0x00\n    /* \"#utility.yul\":3767:3769   */\n  0x20\n    /* \"#utility.yul\":3756:3765   */\n  dup3\n    /* \"#utility.yul\":3752:3770   */\n  add\n    /* \"#utility.yul\":3744:3770   */\n  swap1\n  pop\n    /* \"#utility.yul\":3816:3825   */\n  dup2\n    /* \"#utility.yul\":3810:3814   */\n  dup2\n    /* \"#utility.yul\":3806:3826   */\n  sub\n    /* \"#utility.yul\":3802:3803   */\n  0x00\n    /* \"#utility.yul\":3791:3800   */\n  dup4\n    /* \"#utility.yul\":3787:3804   */\n  add\n    /* \"#utility.yul\":3780:3827   */\n  mstore\n    /* \"#utility.yul\":3844:3975   */\n  tag_90\n    /* \"#utility.yul\":3970:3974   */\n  dup2\n    /* \"#utility.yul\":3844:3975   */\n  tag_53\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3836:3975   */\n  swap1\n  pop\n    /* \"#utility.yul\":3563:3982   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3988:4158   */\ntag_54:\n    /* \"#utility.yul\":4128:4150   */\n  0x496e76616c696420666565207265636569766572000000000000000000000000\n    /* \"#utility.yul\":4124:4125   */\n  0x00\n    /* \"#utility.yul\":4116:4122   */\n  dup3\n    /* \"#utility.yul\":4112:4126   */\n  add\n    /* \"#utility.yul\":4105:4151   */\n  mstore\n    /* \"#utility.yul\":3988:4158   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4164:4530   */\ntag_55:\n    /* \"#utility.yul\":4306:4309   */\n  0x00\n    /* \"#utility.yul\":4327:4394   */\n  tag_93\n    /* \"#utility.yul\":4391:4393   */\n  0x14\n    /* \"#utility.yul\":4386:4389   */\n  dup4\n    /* \"#utility.yul\":4327:4394   */\n  tag_49\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4320:4394   */\n  swap2\n  pop\n    /* \"#utility.yul\":4403:4496   */\n  tag_94\n    /* \"#utility.yul\":4492:4495   */\n  dup3\n    /* \"#utility.yul\":4403:4496   */\n  tag_54\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4521:4523   */\n  0x20\n    /* \"#utility.yul\":4516:4519   */\n  dup3\n    /* \"#utility.yul\":4512:4524   */\n  add\n    /* \"#utility.yul\":4505:4524   */\n  swap1\n  pop\n    /* \"#utility.yul\":4164:4530   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4536:4955   */\ntag_27:\n    /* \"#utility.yul\":4702:4706   */\n  0x00\n    /* \"#utility.yul\":4740:4742   */\n  0x20\n    /* \"#utility.yul\":4729:4738   */\n  dup3\n    /* \"#utility.yul\":4725:4743   */\n  add\n    /* \"#utility.yul\":4717:4743   */\n  swap1\n  pop\n    /* \"#utility.yul\":4789:4798   */\n  dup2\n    /* \"#utility.yul\":4783:4787   */\n  dup2\n    /* \"#utility.yul\":4779:4799   */\n  sub\n    /* \"#utility.yul\":4775:4776   */\n  0x00\n    /* \"#utility.yul\":4764:4773   */\n  dup4\n    /* \"#utility.yul\":4760:4777   */\n  add\n    /* \"#utility.yul\":4753:4800   */\n  mstore\n    /* \"#utility.yul\":4817:4948   */\n  tag_96\n    /* \"#utility.yul\":4943:4947   */\n  dup2\n    /* \"#utility.yul\":4817:4948   */\n  tag_55\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4809:4948   */\n  swap1\n  pop\n    /* \"#utility.yul\":4536:4955   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Staking.sol\":418:9768  contract AutoStaking is Ownable, ReentrancyGuard {... */\ntag_28:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x05f14bbde4435ecbe5273cf423314527515a37e93321dc3a13f762431443ebf5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Staking.sol\":418:9768  contract AutoStaking is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a5c08ae\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xbbd36b61\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe6a69ab8\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe6a69ab8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf8cf31cb\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xbbd36b61\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc69bebe4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc7b8981c\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x7a5c08ae\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95a29060\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb3f00674\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x561b2463\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x561b2463\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x584b62a1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5acd2e4c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6b494def\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x0630e463\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1747e0b0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1852e8d9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38bceaac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4060e257\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4c8f2a78\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Staking.sol\":1106:1165  mapping(address => uint256) public pendingRewardWithdrawals */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":9648:9766  function getActiveStakes(address user) external view returns (StakeInfo[] memory) {... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":3729:4550  function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_5:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":637:683  uint256 public constant AUTO_COMPOUND_FEE = 50 */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":7176:8043  function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_7:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Staking.sol\":730:789  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":2846:3575  function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Staking.sol\":1055:1100  mapping(address => StakeInfo[]) public stakes */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":8560:8862  function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {... */\n    tag_11:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"Staking.sol\":795:841  uint256[3] public apyRates = [500, 1000, 1500] */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"Staking.sol\":506:542  IERC20 public immutable stakingToken */\n    tag_14:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1204:1236  uint256 public rewardPoolBalance */\n    tag_15:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1172:1198  uint256 public totalStaked */\n    tag_16:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":6661:7068  function toggleAutoStake(uint256 stakeIndex) external {... */\n    tag_18:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"Staking.sol\":5008:6160  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_19:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"Staking.sol\":697:723  address public feeReceiver */\n    tag_20:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":8140:8407  function addRewardPoolFunds(uint256 amount) external onlyOwner {... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"Staking.sol\":9343:9578  function updateFeeReceiver(address newFeeReceiver) external onlyOwner {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"Staking.sol\":6222:6552  function withdrawRewards() external nonReentrant {... */\n    tag_23:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      stop\n        /* \"Staking.sol\":580:631  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_24:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"Staking.sol\":548:573  IERC20 public rewardToken */\n    tag_26:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":8981:9224  function updateRewardToken(address newRewardToken) external onlyOwner {... */\n    tag_27:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"Staking.sol\":1106:1165  mapping(address => uint256) public pendingRewardWithdrawals */\n    tag_35:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":9648:9766  function getActiveStakes(address user) external view returns (StakeInfo[] memory) {... */\n    tag_40:\n        /* \"Staking.sol\":9710:9728  StakeInfo[] memory */\n      0x60\n        /* \"Staking.sol\":9747:9753  stakes */\n      0x0a\n        /* \"Staking.sol\":9747:9759  stakes[user] */\n      0x00\n        /* \"Staking.sol\":9754:9758  user */\n      dup4\n        /* \"Staking.sol\":9747:9759  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":9740:9759  return stakes[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_122:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_123\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_122)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":9648:9766  function getActiveStakes(address user) external view returns (StakeInfo[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking.sol\":3729:4550  function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_46:\n        /* \"Staking.sol\":3812:3819  uint256 */\n      0x00\n        /* \"Staking.sol\":3858:3859  0 */\n      0x00\n        /* \"Staking.sol\":3839:3860  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":3839:3846  account */\n      dup4\n        /* \"Staking.sol\":3839:3860  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":3831:3880  require(account != address(0), \"Invalid account\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"Staking.sol\":3911:3917  stakes */\n      0x0a\n        /* \"Staking.sol\":3911:3926  stakes[account] */\n      0x00\n        /* \"Staking.sol\":3918:3925  account */\n      dup5\n        /* \"Staking.sol\":3911:3926  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":3911:3933  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":3898:3908  stakeIndex */\n      dup3\n        /* \"Staking.sol\":3898:3933  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":3890:3957  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"Staking.sol\":3968:3989  StakeInfo memory info */\n      0x00\n        /* \"Staking.sol\":3992:3998  stakes */\n      0x0a\n        /* \"Staking.sol\":3992:4007  stakes[account] */\n      0x00\n        /* \"Staking.sol\":3999:4006  account */\n      dup6\n        /* \"Staking.sol\":3992:4007  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":4008:4018  stakeIndex */\n      dup4\n        /* \"Staking.sol\":3992:4019  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n    tag_132:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":3968:4019  StakeInfo memory info = stakes[account][stakeIndex] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":4038:4042  info */\n      dup1\n        /* \"Staking.sol\":4038:4050  info.claimed */\n      0x60\n      add\n      mload\n        /* \"Staking.sol\":4037:4050  !info.claimed */\n      iszero\n        /* \"Staking.sol\":4029:4070  require(!info.claimed, \"Already claimed\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"Staking.sol\":4081:4096  uint256 endTime */\n      0x00\n        /* \"Staking.sol\":4099:4103  info */\n      dup2\n        /* \"Staking.sol\":4099:4114  info.unlockTime */\n      0x40\n      add\n      mload\n        /* \"Staking.sol\":4081:4114  uint256 endTime = info.unlockTime */\n      swap1\n      pop\n        /* \"Staking.sol\":4128:4132  info */\n      dup2\n        /* \"Staking.sol\":4128:4144  info.autoStaking */\n      0x80\n      add\n      mload\n        /* \"Staking.sol\":4128:4173  info.autoStaking && block.timestamp > endTime */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"Staking.sol\":4166:4173  endTime */\n      dup1\n        /* \"Staking.sol\":4148:4163  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":4148:4173  block.timestamp > endTime */\n      gt\n        /* \"Staking.sol\":4128:4173  info.autoStaking && block.timestamp > endTime */\n    tag_139:\n        /* \"Staking.sol\":4124:4225  if (info.autoStaking && block.timestamp > endTime) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"Staking.sol\":4199:4214  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":4189:4214  endTime = block.timestamp */\n      swap1\n      pop\n        /* \"Staking.sol\":4124:4225  if (info.autoStaking && block.timestamp > endTime) {... */\n    tag_140:\n        /* \"Staking.sol\":4235:4251  uint256 timeHeld */\n      0x00\n        /* \"Staking.sol\":4264:4268  info */\n      dup3\n        /* \"Staking.sol\":4264:4278  info.stakeTime */\n      0x20\n      add\n      mload\n        /* \"Staking.sol\":4254:4261  endTime */\n      dup3\n        /* \"Staking.sol\":4254:4278  endTime - info.stakeTime */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"Staking.sol\":4235:4278  uint256 timeHeld = endTime - info.stakeTime */\n      swap1\n      pop\n        /* \"Staking.sol\":4288:4307  uint256 periodIndex */\n      0x00\n        /* \"Staking.sol\":4310:4358  getPeriodIndex(info.unlockTime - info.stakeTime) */\n      tag_143\n        /* \"Staking.sol\":4343:4347  info */\n      dup5\n        /* \"Staking.sol\":4343:4357  info.stakeTime */\n      0x20\n      add\n      mload\n        /* \"Staking.sol\":4325:4329  info */\n      dup6\n        /* \"Staking.sol\":4325:4340  info.unlockTime */\n      0x40\n      add\n      mload\n        /* \"Staking.sol\":4325:4357  info.unlockTime - info.stakeTime */\n      tag_144\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_144:\n        /* \"Staking.sol\":4310:4324  getPeriodIndex */\n      tag_145\n        /* \"Staking.sol\":4310:4358  getPeriodIndex(info.unlockTime - info.stakeTime) */\n      jump\t// in\n    tag_143:\n        /* \"Staking.sol\":4288:4358  uint256 periodIndex = getPeriodIndex(info.unlockTime - info.stakeTime) */\n      swap1\n      pop\n        /* \"Staking.sol\":4368:4379  uint256 apy */\n      0x00\n        /* \"Staking.sol\":4382:4390  apyRates */\n      0x07\n        /* \"Staking.sol\":4391:4402  periodIndex */\n      dup3\n        /* \"Staking.sol\":4382:4403  apyRates[periodIndex] */\n      0x03\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_147\n      tag_134\n      jump\t// in\n    tag_147:\n    tag_146:\n      add\n      sload\n        /* \"Staking.sol\":4368:4403  uint256 apy = apyRates[periodIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":4414:4431  uint256 principal */\n      0x00\n        /* \"Staking.sol\":4448:4452  info */\n      dup6\n        /* \"Staking.sol\":4448:4469  info.compoundedAmount */\n      0xa0\n      add\n      mload\n        /* \"Staking.sol\":4434:4438  info */\n      dup7\n        /* \"Staking.sol\":4434:4445  info.amount */\n      0x00\n      add\n      mload\n        /* \"Staking.sol\":4434:4469  info.amount + info.compoundedAmount */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"Staking.sol\":4414:4469  uint256 principal = info.amount + info.compoundedAmount */\n      swap1\n      pop\n        /* \"Staking.sol\":623:631  365 days */\n      0x01e13380\n        /* \"Staking.sol\":4518:4523  10000 */\n      0x2710\n        /* \"Staking.sol\":4518:4542  10000 * SECONDS_PER_YEAR */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"Staking.sol\":4505:4513  timeHeld */\n      dup5\n        /* \"Staking.sol\":4499:4502  apy */\n      dup4\n        /* \"Staking.sol\":4487:4496  principal */\n      dup4\n        /* \"Staking.sol\":4487:4502  principal * apy */\n      tag_153\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_153:\n        /* \"Staking.sol\":4487:4513  principal * apy * timeHeld */\n      tag_154\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_154:\n        /* \"Staking.sol\":4486:4543  (principal * apy * timeHeld) / (10000 * SECONDS_PER_YEAR) */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"Staking.sol\":4479:4543  return (principal * apy * timeHeld) / (10000 * SECONDS_PER_YEAR) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":3729:4550  function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":637:683  uint256 public constant AUTO_COMPOUND_FEE = 50 */\n    tag_49:\n        /* \"Staking.sol\":681:683  50 */\n      0x32\n        /* \"Staking.sol\":637:683  uint256 public constant AUTO_COMPOUND_FEE = 50 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":7176:8043  function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_158\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_158:\n        /* \"Staking.sol\":2027:2037  msg.sender */\n      caller\n        /* \"Staking.sol\":2014:2037  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2014:2023  tx.origin */\n      origin\n        /* \"Staking.sol\":2014:2037  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2006:2060  require(tx.origin == msg.sender, \"Caller must be EOA\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"Staking.sol\":7260:7275  address account */\n      0x00\n        /* \"Staking.sol\":7278:7288  msg.sender */\n      caller\n        /* \"Staking.sol\":7260:7288  address account = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":7319:7325  stakes */\n      0x0a\n        /* \"Staking.sol\":7319:7334  stakes[account] */\n      0x00\n        /* \"Staking.sol\":7326:7333  account */\n      dup3\n        /* \"Staking.sol\":7319:7334  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":7319:7341  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":7306:7316  stakeIndex */\n      dup3\n        /* \"Staking.sol\":7306:7341  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":7298:7365  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_131\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"Staking.sol\":7376:7398  StakeInfo storage info */\n      0x00\n        /* \"Staking.sol\":7401:7407  stakes */\n      0x0a\n        /* \"Staking.sol\":7401:7416  stakes[account] */\n      0x00\n        /* \"Staking.sol\":7408:7415  account */\n      dup4\n        /* \"Staking.sol\":7401:7416  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":7417:7427  stakeIndex */\n      dup4\n        /* \"Staking.sol\":7401:7428  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_168\n      tag_134\n      jump\t// in\n    tag_168:\n    tag_167:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":7376:7428  StakeInfo storage info = stakes[account][stakeIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":7447:7451  info */\n      dup1\n        /* \"Staking.sol\":7447:7459  info.claimed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7446:7459  !info.claimed */\n      iszero\n        /* \"Staking.sol\":7438:7479  require(!info.claimed, \"Already claimed\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_138\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"Staking.sol\":7497:7501  info */\n      dup1\n        /* \"Staking.sol\":7497:7513  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7489:7539  require(info.autoStaking, \"Auto-staking disabled\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"Staking.sol\":7576:7580  info */\n      dup1\n        /* \"Staking.sol\":7576:7591  info.unlockTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":7557:7572  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7557:7591  block.timestamp >= info.unlockTime */\n      lt\n      iszero\n        /* \"Staking.sol\":7549:7608  require(block.timestamp >= info.unlockTime, \"Still locked\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"Staking.sol\":7619:7633  uint256 reward */\n      0x00\n        /* \"Staking.sol\":7636:7672  calculateReward(account, stakeIndex) */\n      tag_178\n        /* \"Staking.sol\":7652:7659  account */\n      dup4\n        /* \"Staking.sol\":7661:7671  stakeIndex */\n      dup6\n        /* \"Staking.sol\":7636:7651  calculateReward */\n      tag_46\n        /* \"Staking.sol\":7636:7672  calculateReward(account, stakeIndex) */\n      jump\t// in\n    tag_178:\n        /* \"Staking.sol\":7619:7672  uint256 reward = calculateReward(account, stakeIndex) */\n      swap1\n      pop\n        /* \"Staking.sol\":7711:7717  reward */\n      dup1\n        /* \"Staking.sol\":7690:7707  rewardPoolBalance */\n      sload(0x0d)\n        /* \"Staking.sol\":7690:7717  rewardPoolBalance >= reward */\n      lt\n      iszero\n        /* \"Staking.sol\":7682:7746  require(rewardPoolBalance >= reward, \"Insufficient reward pool\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"Staking.sol\":7774:7789  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7757:7761  info */\n      dup3\n        /* \"Staking.sol\":7757:7771  info.stakeTime */\n      0x01\n      add\n        /* \"Staking.sol\":7757:7789  info.stakeTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7854:7858  info */\n      dup2\n        /* \"Staking.sol\":7854:7868  info.stakeTime */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":7836:7840  info */\n      dup3\n        /* \"Staking.sol\":7836:7851  info.unlockTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":7836:7868  info.unlockTime - info.stakeTime */\n      tag_182\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_182:\n        /* \"Staking.sol\":7817:7832  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7817:7869  block.timestamp + (info.unlockTime - info.stakeTime) */\n      tag_183\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_183:\n        /* \"Staking.sol\":7799:7803  info */\n      dup3\n        /* \"Staking.sol\":7799:7814  info.unlockTime */\n      0x02\n      add\n        /* \"Staking.sol\":7799:7869  info.unlockTime = block.timestamp + (info.unlockTime - info.stakeTime) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7919:7925  reward */\n      dup1\n        /* \"Staking.sol\":7894:7898  info */\n      dup3\n        /* \"Staking.sol\":7894:7915  info.compoundedAmount */\n      0x04\n      add\n      0x00\n        /* \"Staking.sol\":7894:7925  info.compoundedAmount += reward */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7956:7962  reward */\n      dup1\n        /* \"Staking.sol\":7935:7952  rewardPoolBalance */\n      0x0d\n      0x00\n        /* \"Staking.sol\":7935:7962  rewardPoolBalance -= reward */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_185:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7993:8000  account */\n      dup3\n        /* \"Staking.sol\":7978:8036  AutoCompounded(account, stakeIndex, info.compoundedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x593662cbe53e88df3fef748665b8c3d3142e5d34dc1b24290f7e953537a00183\n        /* \"Staking.sol\":8002:8012  stakeIndex */\n      dup6\n        /* \"Staking.sol\":8014:8018  info */\n      dup5\n        /* \"Staking.sol\":8014:8035  info.compoundedAmount */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":7978:8036  AutoCompounded(account, stakeIndex, info.compoundedAmount) */\n      mload(0x40)\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":7250:8043  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_188\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_188:\n        /* \"Staking.sol\":7176:8043  function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":730:789  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n    tag_57:\n      0x04\n      dup2\n      0x03\n      dup2\n      lt\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":2846:3575  function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_193\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_193:\n        /* \"Staking.sol\":2027:2037  msg.sender */\n      caller\n        /* \"Staking.sol\":2014:2037  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2014:2023  tx.origin */\n      origin\n        /* \"Staking.sol\":2014:2037  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2006:2060  require(tx.origin == msg.sender, \"Caller must be EOA\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_163\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"Staking.sol\":2976:2994  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":2962:2973  periodIndex */\n      dup3\n        /* \"Staking.sol\":2962:2994  periodIndex < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":2954:3019  require(periodIndex < lockPeriods.length, \"Invalid period index\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"Staking.sol\":3046:3047  0 */\n      0x00\n        /* \"Staking.sol\":3037:3043  amount */\n      dup4\n        /* \"Staking.sol\":3037:3047  amount > 0 */\n      gt\n        /* \"Staking.sol\":3029:3063  require(amount > 0, \"Zero amount\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"Staking.sol\":3074:3138  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_204\n        /* \"Staking.sol\":3104:3114  msg.sender */\n      caller\n        /* \"Staking.sol\":3124:3128  this */\n      address\n        /* \"Staking.sol\":3131:3137  amount */\n      dup6\n        /* \"Staking.sol\":3074:3086  stakingToken */\n      immutable(\"0x05f14bbde4435ecbe5273cf423314527515a37e93321dc3a13f762431443ebf5\")\n        /* \"Staking.sol\":3074:3103  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_205\n      swap1\n        /* \"Staking.sol\":3074:3138  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"Staking.sol\":3149:3167  uint256 unlockTime */\n      0x00\n        /* \"Staking.sol\":3188:3199  lockPeriods */\n      0x04\n        /* \"Staking.sol\":3200:3211  periodIndex */\n      dup4\n        /* \"Staking.sol\":3188:3212  lockPeriods[periodIndex] */\n      0x03\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_207\n      tag_134\n      jump\t// in\n    tag_207:\n    tag_206:\n      add\n      sload\n        /* \"Staking.sol\":3170:3185  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":3170:3212  block.timestamp + lockPeriods[periodIndex] */\n      tag_209\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_209:\n        /* \"Staking.sol\":3149:3212  uint256 unlockTime = block.timestamp + lockPeriods[periodIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":3223:3229  stakes */\n      0x0a\n        /* \"Staking.sol\":3223:3241  stakes[msg.sender] */\n      0x00\n        /* \"Staking.sol\":3230:3240  msg.sender */\n      caller\n        /* \"Staking.sol\":3223:3241  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking.sol\":3279:3285  amount */\n      dup7\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3310:3325  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3351:3361  unlockTime */\n      dup4\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3384:3389  false */\n      0x00\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3416:3425  autoStake */\n      dup5\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3457:3458  0 */\n      0x00\n        /* \"Staking.sol\":3247:3469  StakeInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"Staking.sol\":3223:3470  stakes[msg.sender].push(StakeInfo({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"Staking.sol\":3496:3502  amount */\n      dup4\n        /* \"Staking.sol\":3481:3492  totalStaked */\n      0x0c\n      0x00\n        /* \"Staking.sol\":3481:3502  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":3525:3535  msg.sender */\n      caller\n        /* \"Staking.sol\":3518:3568  Staked(msg.sender, amount, periodIndex, autoStake) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3df45cb339f96ae4bdb793efcb6e22100dd0dc4fd739a4ee2033fe67ea35af96\n        /* \"Staking.sol\":3537:3543  amount */\n      dup6\n        /* \"Staking.sol\":3545:3556  periodIndex */\n      dup6\n        /* \"Staking.sol\":3558:3567  autoStake */\n      dup6\n        /* \"Staking.sol\":3518:3568  Staked(msg.sender, amount, periodIndex, autoStake) */\n      mload(0x40)\n      tag_212\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":2944:3575  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_214\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_214:\n        /* \"Staking.sol\":2846:3575  function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":1055:1100  mapping(address => StakeInfo[]) public stakes */\n    tag_65:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"Staking.sol\":8560:8862  function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"Staking.sol\":8664:8682  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":8650:8661  periodIndex */\n      dup3\n        /* \"Staking.sol\":8650:8682  periodIndex < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":8642:8707  require(periodIndex < lockPeriods.length, \"Invalid period index\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_200\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"Staking.sol\":8735:8740  10000 */\n      0x2710\n        /* \"Staking.sol\":8725:8731  newAPY */\n      dup2\n        /* \"Staking.sol\":8725:8740  newAPY <= 10000 */\n      gt\n      iszero\n        /* \"Staking.sol\":8717:8757  require(newAPY <= 10000, \"APY too high\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"Staking.sol\":8803:8809  newAPY */\n      dup1\n        /* \"Staking.sol\":8779:8787  apyRates */\n      0x07\n        /* \"Staking.sol\":8788:8799  periodIndex */\n      dup4\n        /* \"Staking.sol\":8779:8800  apyRates[periodIndex] */\n      0x03\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_227\n      tag_134\n      jump\t// in\n    tag_227:\n    tag_226:\n      add\n        /* \"Staking.sol\":8779:8809  apyRates[periodIndex] = newAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":8824:8855  APYUpdated(periodIndex, newAPY) */\n      0x787a1fca55641ce34a438271930bbb9401df20db2b4f510d4f252227d85df43d\n        /* \"Staking.sol\":8835:8846  periodIndex */\n      dup3\n        /* \"Staking.sol\":8848:8854  newAPY */\n      dup3\n        /* \"Staking.sol\":8824:8855  APYUpdated(periodIndex, newAPY) */\n      mload(0x40)\n      tag_229\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking.sol\":8560:8862  function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":795:841  uint256[3] public apyRates = [500, 1000, 1500] */\n    tag_74:\n      0x07\n      dup2\n      0x03\n      dup2\n      lt\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Staking.sol\":506:542  IERC20 public immutable stakingToken */\n    tag_79:\n      immutable(\"0x05f14bbde4435ecbe5273cf423314527515a37e93321dc3a13f762431443ebf5\")\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":1204:1236  uint256 public rewardPoolBalance */\n    tag_83:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":1172:1198  uint256 public totalStaked */\n    tag_86:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Staking.sol\":6661:7068  function toggleAutoStake(uint256 stakeIndex) external {... */\n    tag_94:\n        /* \"Staking.sol\":6725:6740  address account */\n      0x00\n        /* \"Staking.sol\":6743:6753  msg.sender */\n      caller\n        /* \"Staking.sol\":6725:6753  address account = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":6784:6790  stakes */\n      0x0a\n        /* \"Staking.sol\":6784:6799  stakes[account] */\n      0x00\n        /* \"Staking.sol\":6791:6798  account */\n      dup3\n        /* \"Staking.sol\":6784:6799  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":6784:6806  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":6771:6781  stakeIndex */\n      dup3\n        /* \"Staking.sol\":6771:6806  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":6763:6830  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_131\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"Staking.sol\":6841:6863  StakeInfo storage info */\n      0x00\n        /* \"Staking.sol\":6866:6872  stakes */\n      0x0a\n        /* \"Staking.sol\":6866:6881  stakes[account] */\n      0x00\n        /* \"Staking.sol\":6873:6880  account */\n      dup4\n        /* \"Staking.sol\":6866:6881  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":6882:6892  stakeIndex */\n      dup4\n        /* \"Staking.sol\":6866:6893  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_241\n      jumpi\n      tag_242\n      tag_134\n      jump\t// in\n    tag_242:\n    tag_241:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":6841:6893  StakeInfo storage info = stakes[account][stakeIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":6912:6916  info */\n      dup1\n        /* \"Staking.sol\":6912:6924  info.claimed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":6911:6924  !info.claimed */\n      iszero\n        /* \"Staking.sol\":6903:6944  require(!info.claimed, \"Already claimed\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_138\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"Staking.sol\":6975:6979  info */\n      dup1\n        /* \"Staking.sol\":6975:6991  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":6974:6991  !info.autoStaking */\n      iszero\n        /* \"Staking.sol\":6955:6959  info */\n      dup2\n        /* \"Staking.sol\":6955:6971  info.autoStaking */\n      0x03\n      add\n      0x01\n        /* \"Staking.sol\":6955:6991  info.autoStaking = !info.autoStaking */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7023:7030  account */\n      dup2\n        /* \"Staking.sol\":7006:7061  AutoStakeToggled(account, stakeIndex, info.autoStaking) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa2d7b35e7cc82247c5ae7e8ae2dc078c2b144b76a6b1068887b3c8892c15da5\n        /* \"Staking.sol\":7032:7042  stakeIndex */\n      dup5\n        /* \"Staking.sol\":7044:7048  info */\n      dup4\n        /* \"Staking.sol\":7044:7060  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7006:7061  AutoStakeToggled(account, stakeIndex, info.autoStaking) */\n      mload(0x40)\n      tag_246\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":6715:7068  {... */\n      pop\n      pop\n        /* \"Staking.sol\":6661:7068  function toggleAutoStake(uint256 stakeIndex) external {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":5008:6160  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_249\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_249:\n        /* \"Staking.sol\":2027:2037  msg.sender */\n      caller\n        /* \"Staking.sol\":2014:2037  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2014:2023  tx.origin */\n      origin\n        /* \"Staking.sol\":2014:2037  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2006:2060  require(tx.origin == msg.sender, \"Caller must be EOA\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap1\n      tag_163\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"Staking.sol\":5089:5104  address account */\n      0x00\n        /* \"Staking.sol\":5107:5117  msg.sender */\n      caller\n        /* \"Staking.sol\":5089:5117  address account = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":5148:5154  stakes */\n      0x0a\n        /* \"Staking.sol\":5148:5163  stakes[account] */\n      0x00\n        /* \"Staking.sol\":5155:5162  account */\n      dup3\n        /* \"Staking.sol\":5148:5163  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":5148:5170  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":5135:5145  stakeIndex */\n      dup3\n        /* \"Staking.sol\":5135:5170  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":5127:5194  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_131\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"Staking.sol\":5205:5227  StakeInfo storage info */\n      0x00\n        /* \"Staking.sol\":5230:5236  stakes */\n      0x0a\n        /* \"Staking.sol\":5230:5245  stakes[account] */\n      0x00\n        /* \"Staking.sol\":5237:5244  account */\n      dup4\n        /* \"Staking.sol\":5230:5245  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":5246:5256  stakeIndex */\n      dup4\n        /* \"Staking.sol\":5230:5257  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_256\n      jumpi\n      tag_257\n      tag_134\n      jump\t// in\n    tag_257:\n    tag_256:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":5205:5257  StakeInfo storage info = stakes[account][stakeIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":5276:5280  info */\n      dup1\n        /* \"Staking.sol\":5276:5288  info.claimed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":5275:5288  !info.claimed */\n      iszero\n        /* \"Staking.sol\":5267:5308  require(!info.claimed, \"Already claimed\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_138\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"Staking.sol\":5345:5349  info */\n      dup1\n        /* \"Staking.sol\":5345:5360  info.unlockTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":5326:5341  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":5326:5360  block.timestamp >= info.unlockTime */\n      lt\n      iszero\n        /* \"Staking.sol\":5318:5377  require(block.timestamp >= info.unlockTime, \"Still locked\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_177\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"Staking.sol\":5388:5402  uint256 reward */\n      0x00\n        /* \"Staking.sol\":5405:5441  calculateReward(account, stakeIndex) */\n      tag_263\n        /* \"Staking.sol\":5421:5428  account */\n      dup4\n        /* \"Staking.sol\":5430:5440  stakeIndex */\n      dup6\n        /* \"Staking.sol\":5405:5420  calculateReward */\n      tag_46\n        /* \"Staking.sol\":5405:5441  calculateReward(account, stakeIndex) */\n      jump\t// in\n    tag_263:\n        /* \"Staking.sol\":5388:5441  uint256 reward = calculateReward(account, stakeIndex) */\n      swap1\n      pop\n        /* \"Staking.sol\":5480:5486  reward */\n      dup1\n        /* \"Staking.sol\":5459:5476  rewardPoolBalance */\n      sload(0x0d)\n        /* \"Staking.sol\":5459:5486  rewardPoolBalance >= reward */\n      lt\n      iszero\n        /* \"Staking.sol\":5451:5515  require(rewardPoolBalance >= reward, \"Insufficient reward pool\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_181\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"Staking.sol\":5541:5545  true */\n      0x01\n        /* \"Staking.sol\":5526:5530  info */\n      dup3\n        /* \"Staking.sol\":5526:5538  info.claimed */\n      0x03\n      add\n      0x00\n        /* \"Staking.sol\":5526:5545  info.claimed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5560:5564  info */\n      dup2\n        /* \"Staking.sol\":5560:5576  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":5560:5605  info.autoStaking && info.compoundedAmount > 0 */\n      dup1\n      iszero\n      tag_266\n      jumpi\n      pop\n        /* \"Staking.sol\":5604:5605  0 */\n      0x00\n        /* \"Staking.sol\":5580:5584  info */\n      dup3\n        /* \"Staking.sol\":5580:5601  info.compoundedAmount */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":5580:5605  info.compoundedAmount > 0 */\n      gt\n        /* \"Staking.sol\":5560:5605  info.autoStaking && info.compoundedAmount > 0 */\n    tag_266:\n        /* \"Staking.sol\":5556:6102  if (info.autoStaking && info.compoundedAmount > 0) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"Staking.sol\":5621:5644  uint256 totalToTransfer */\n      0x00\n        /* \"Staking.sol\":5671:5677  reward */\n      dup2\n        /* \"Staking.sol\":5647:5651  info */\n      dup4\n        /* \"Staking.sol\":5647:5668  info.compoundedAmount */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":5647:5677  info.compoundedAmount + reward */\n      tag_268\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_268:\n        /* \"Staking.sol\":5621:5677  uint256 totalToTransfer = info.compoundedAmount + reward */\n      swap1\n      pop\n        /* \"Staking.sol\":5691:5702  uint256 fee */\n      0x00\n        /* \"Staking.sol\":5745:5750  10000 */\n      0x2710\n        /* \"Staking.sol\":681:683  50 */\n      0x32\n        /* \"Staking.sol\":5706:5721  totalToTransfer */\n      dup4\n        /* \"Staking.sol\":5706:5741  totalToTransfer * AUTO_COMPOUND_FEE */\n      tag_269\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_269:\n        /* \"Staking.sol\":5705:5750  (totalToTransfer * AUTO_COMPOUND_FEE) / 10000 */\n      tag_270\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_270:\n        /* \"Staking.sol\":5691:5750  uint256 fee = (totalToTransfer * AUTO_COMPOUND_FEE) / 10000 */\n      swap1\n      pop\n        /* \"Staking.sol\":5764:5782  uint256 userAmount */\n      0x00\n        /* \"Staking.sol\":5803:5806  fee */\n      dup2\n        /* \"Staking.sol\":5785:5800  totalToTransfer */\n      dup4\n        /* \"Staking.sol\":5785:5806  totalToTransfer - fee */\n      tag_271\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_271:\n        /* \"Staking.sol\":5764:5806  uint256 userAmount = totalToTransfer - fee */\n      swap1\n      pop\n        /* \"Staking.sol\":5858:5868  userAmount */\n      dup1\n        /* \"Staking.sol\":5821:5845  pendingRewardWithdrawals */\n      0x0b\n        /* \"Staking.sol\":5821:5854  pendingRewardWithdrawals[account] */\n      0x00\n        /* \"Staking.sol\":5846:5853  account */\n      dup9\n        /* \"Staking.sol\":5821:5854  pendingRewardWithdrawals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":5821:5868  pendingRewardWithdrawals[account] += userAmount */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_272:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5923:5926  fee */\n      dup2\n        /* \"Staking.sol\":5882:5906  pendingRewardWithdrawals */\n      0x0b\n        /* \"Staking.sol\":5882:5919  pendingRewardWithdrawals[feeReceiver] */\n      0x00\n        /* \"Staking.sol\":5907:5918  feeReceiver */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":5882:5919  pendingRewardWithdrawals[feeReceiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":5882:5926  pendingRewardWithdrawals[feeReceiver] += fee */\n      dup3\n      dup3\n      sload\n      tag_273\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_273:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5961:5976  totalToTransfer */\n      dup3\n        /* \"Staking.sol\":5940:5957  rewardPoolBalance */\n      0x0d\n      0x00\n        /* \"Staking.sol\":5940:5976  rewardPoolBalance -= totalToTransfer */\n      dup3\n      dup3\n      sload\n      tag_274\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_274:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5607:5987  {... */\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":5556:6102  if (info.autoStaking && info.compoundedAmount > 0) {... */\n      jump(tag_275)\n    tag_267:\n        /* \"Staking.sol\":6044:6050  reward */\n      dup1\n        /* \"Staking.sol\":6007:6031  pendingRewardWithdrawals */\n      0x0b\n        /* \"Staking.sol\":6007:6040  pendingRewardWithdrawals[account] */\n      0x00\n        /* \"Staking.sol\":6032:6039  account */\n      dup6\n        /* \"Staking.sol\":6007:6040  pendingRewardWithdrawals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":6007:6050  pendingRewardWithdrawals[account] += reward */\n      dup3\n      dup3\n      sload\n      tag_276\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_276:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":6085:6091  reward */\n      dup1\n        /* \"Staking.sol\":6064:6081  rewardPoolBalance */\n      0x0d\n      0x00\n        /* \"Staking.sol\":6064:6091  rewardPoolBalance -= reward */\n      dup3\n      dup3\n      sload\n      tag_277\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_277:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5556:6102  if (info.autoStaking && info.compoundedAmount > 0) {... */\n    tag_275:\n        /* \"Staking.sol\":6125:6132  account */\n      dup3\n        /* \"Staking.sol\":6117:6153  Claimed(account, reward, stakeIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a\n        /* \"Staking.sol\":6134:6140  reward */\n      dup3\n        /* \"Staking.sol\":6142:6152  stakeIndex */\n      dup7\n        /* \"Staking.sol\":6117:6153  Claimed(account, reward, stakeIndex) */\n      mload(0x40)\n      tag_278\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":5079:6160  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_279\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_279:\n        /* \"Staking.sol\":5008:6160  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":697:723  address public feeReceiver */\n    tag_99:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":8140:8407  function addRewardPoolFunds(uint256 amount) external onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_281:\n        /* \"Staking.sol\":8230:8231  0 */\n      0x00\n        /* \"Staking.sol\":8221:8227  amount */\n      dup2\n        /* \"Staking.sol\":8221:8231  amount > 0 */\n      gt\n        /* \"Staking.sol\":8213:8247  require(amount > 0, \"Zero amount\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_203\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"Staking.sol\":8257:8320  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_285\n        /* \"Staking.sol\":8286:8296  msg.sender */\n      caller\n        /* \"Staking.sol\":8306:8310  this */\n      address\n        /* \"Staking.sol\":8313:8319  amount */\n      dup4\n        /* \"Staking.sol\":8257:8268  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":8257:8285  rewardToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_205\n      swap1\n        /* \"Staking.sol\":8257:8320  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"Staking.sol\":8351:8357  amount */\n      dup1\n        /* \"Staking.sol\":8330:8347  rewardPoolBalance */\n      0x0d\n      0x00\n        /* \"Staking.sol\":8330:8357  rewardPoolBalance += amount */\n      dup3\n      dup3\n      sload\n      tag_286\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_286:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":8372:8400  RewardPoolFundsAdded(amount) */\n      0x21d99275a51df78f567d33e4b0c6ea547b7675bce0eab2ccca69e131bf047abe\n        /* \"Staking.sol\":8393:8399  amount */\n      dup2\n        /* \"Staking.sol\":8372:8400  RewardPoolFundsAdded(amount) */\n      mload(0x40)\n      tag_287\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking.sol\":8140:8407  function addRewardPoolFunds(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":9343:9578  function updateFeeReceiver(address newFeeReceiver) external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_289:\n        /* \"Staking.sol\":9457:9458  0 */\n      0x00\n        /* \"Staking.sol\":9431:9459  newFeeReceiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":9431:9445  newFeeReceiver */\n      dup2\n        /* \"Staking.sol\":9431:9459  newFeeReceiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":9423:9484  require(newFeeReceiver != address(0), \"Invalid fee receiver\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"Staking.sol\":9508:9522  newFeeReceiver */\n      dup1\n        /* \"Staking.sol\":9494:9505  feeReceiver */\n      0x03\n      0x00\n        /* \"Staking.sol\":9494:9522  feeReceiver = newFeeReceiver */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":9556:9570  newFeeReceiver */\n      dup1\n        /* \"Staking.sol\":9537:9571  FeeReceiverUpdated(newFeeReceiver) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":9343:9578  function updateFeeReceiver(address newFeeReceiver) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":6222:6552  function withdrawRewards() external nonReentrant {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_295\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_295:\n        /* \"Staking.sol\":6281:6295  uint256 amount */\n      0x00\n        /* \"Staking.sol\":6298:6322  pendingRewardWithdrawals */\n      0x0b\n        /* \"Staking.sol\":6298:6334  pendingRewardWithdrawals[msg.sender] */\n      0x00\n        /* \"Staking.sol\":6323:6333  msg.sender */\n      caller\n        /* \"Staking.sol\":6298:6334  pendingRewardWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking.sol\":6281:6334  uint256 amount = pendingRewardWithdrawals[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":6361:6362  0 */\n      0x00\n        /* \"Staking.sol\":6352:6358  amount */\n      dup2\n        /* \"Staking.sol\":6352:6362  amount > 0 */\n      gt\n        /* \"Staking.sol\":6344:6389  require(amount > 0, \"No rewards to withdraw\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"Staking.sol\":6439:6440  0 */\n      0x00\n        /* \"Staking.sol\":6400:6424  pendingRewardWithdrawals */\n      0x0b\n        /* \"Staking.sol\":6400:6436  pendingRewardWithdrawals[msg.sender] */\n      0x00\n        /* \"Staking.sol\":6425:6435  msg.sender */\n      caller\n        /* \"Staking.sol\":6400:6436  pendingRewardWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":6400:6440  pendingRewardWithdrawals[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":6450:6494  rewardToken.safeTransfer(msg.sender, amount) */\n      tag_300\n        /* \"Staking.sol\":6475:6485  msg.sender */\n      caller\n        /* \"Staking.sol\":6487:6493  amount */\n      dup3\n        /* \"Staking.sol\":6450:6461  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":6450:6474  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_301\n      swap1\n        /* \"Staking.sol\":6450:6494  rewardToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"Staking.sol\":6526:6536  msg.sender */\n      caller\n        /* \"Staking.sol\":6509:6545  WithdrawnRewards(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e616\n        /* \"Staking.sol\":6538:6544  amount */\n      dup3\n        /* \"Staking.sol\":6509:6545  WithdrawnRewards(msg.sender, amount) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":6271:6552  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_303\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_303:\n        /* \"Staking.sol\":6222:6552  function withdrawRewards() external nonReentrant {... */\n      jump\t// out\n        /* \"Staking.sol\":580:631  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_110:\n        /* \"Staking.sol\":623:631  365 days */\n      0x01e13380\n        /* \"Staking.sol\":580:631  uint256 public constant SECONDS_PER_YEAR = 365 days */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_309\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":548:573  IERC20 public rewardToken */\n    tag_116:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":8981:9224  function updateRewardToken(address newRewardToken) external onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_311:\n        /* \"Staking.sol\":9095:9096  0 */\n      0x00\n        /* \"Staking.sol\":9069:9097  newRewardToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":9069:9083  newRewardToken */\n      dup2\n        /* \"Staking.sol\":9069:9097  newRewardToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":9061:9122  require(newRewardToken != address(0), \"Invalid reward token\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"Staking.sol\":9153:9167  newRewardToken */\n      dup1\n        /* \"Staking.sol\":9132:9143  rewardToken */\n      0x02\n      0x00\n        /* \"Staking.sol\":9132:9168  rewardToken = IERC20(newRewardToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":9202:9216  newRewardToken */\n      dup1\n        /* \"Staking.sol\":9183:9217  RewardTokenUpdated(newRewardToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":8981:9224  function updateRewardToken(address newRewardToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":4618:4897  function getPeriodIndex(uint256 duration) internal view returns (uint256) {... */\n    tag_145:\n        /* \"Staking.sol\":4683:4690  uint256 */\n      0x00\n        /* \"Staking.sol\":4707:4716  uint256 i */\n      0x00\n        /* \"Staking.sol\":4719:4720  0 */\n      0x00\n        /* \"Staking.sol\":4707:4720  uint256 i = 0 */\n      swap1\n      pop\n        /* \"Staking.sol\":4702:4848  for (uint256 i = 0; i < lockPeriods.length; i++) {... */\n    tag_317:\n        /* \"Staking.sol\":4726:4744  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":4722:4723  i */\n      dup2\n        /* \"Staking.sol\":4722:4744  i < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":4702:4848  for (uint256 i = 0; i < lockPeriods.length; i++) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"Staking.sol\":4781:4792  lockPeriods */\n      0x04\n        /* \"Staking.sol\":4793:4794  i */\n      dup2\n        /* \"Staking.sol\":4781:4795  lockPeriods[i] */\n      0x03\n      dup2\n      lt\n      tag_320\n      jumpi\n      tag_321\n      tag_134\n      jump\t// in\n    tag_321:\n    tag_320:\n      add\n      sload\n        /* \"Staking.sol\":4769:4777  duration */\n      dup4\n        /* \"Staking.sol\":4769:4795  duration == lockPeriods[i] */\n      sub\n        /* \"Staking.sol\":4765:4838  if (duration == lockPeriods[i]) {... */\n      tag_323\n      jumpi\n        /* \"Staking.sol\":4822:4823  i */\n      dup1\n        /* \"Staking.sol\":4815:4823  return i */\n      swap2\n      pop\n      pop\n      jump(tag_316)\n        /* \"Staking.sol\":4765:4838  if (duration == lockPeriods[i]) {... */\n    tag_323:\n        /* \"Staking.sol\":4746:4749  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":4702:4848  for (uint256 i = 0; i < lockPeriods.length; i++) {... */\n      jump(tag_317)\n    tag_318:\n      pop\n        /* \"Staking.sol\":4857:4890  revert(\"Unsupported lock period\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking.sol\":4618:4897  function getPeriodIndex(uint256 duration) internal view returns (uint256) {... */\n    tag_316:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_333\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_337\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_338\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_339\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_341\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_338\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_346\n      swap3\n      swap2\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_351)\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_356:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_358:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_359:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_424\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_358\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_360:\n        /* \"#utility.yul\":641:665   */\n      tag_426\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_359\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_427:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_361:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_429\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_360\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_34:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_432\n      tag_356\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":917:1036   */\n    tag_431:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_433\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_361\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_362:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_363:\n        /* \"#utility.yul\":1346:1370   */\n      tag_436\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_362\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_37:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_438\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_363\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1751   */\n    tag_364:\n        /* \"#utility.yul\":1704:1710   */\n      0x00\n        /* \"#utility.yul\":1738:1743   */\n      dup2\n        /* \"#utility.yul\":1732:1744   */\n      mload\n        /* \"#utility.yul\":1722:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:1967   */\n    tag_365:\n        /* \"#utility.yul\":1882:1893   */\n      0x00\n        /* \"#utility.yul\":1916:1922   */\n      dup3\n        /* \"#utility.yul\":1911:1914   */\n      dup3\n        /* \"#utility.yul\":1904:1923   */\n      mstore\n        /* \"#utility.yul\":1956:1960   */\n      0x20\n        /* \"#utility.yul\":1951:1954   */\n      dup3\n        /* \"#utility.yul\":1947:1961   */\n      add\n        /* \"#utility.yul\":1932:1961   */\n      swap1\n      pop\n        /* \"#utility.yul\":1757:1967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1973:2131   */\n    tag_366:\n        /* \"#utility.yul\":2066:2070   */\n      0x00\n        /* \"#utility.yul\":2089:2092   */\n      dup2\n        /* \"#utility.yul\":2081:2092   */\n      swap1\n      pop\n        /* \"#utility.yul\":2119:2123   */\n      0x20\n        /* \"#utility.yul\":2114:2117   */\n      dup3\n        /* \"#utility.yul\":2110:2124   */\n      add\n        /* \"#utility.yul\":2102:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":1973:2131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2245   */\n    tag_367:\n        /* \"#utility.yul\":2214:2238   */\n      tag_443\n        /* \"#utility.yul\":2232:2237   */\n      dup2\n        /* \"#utility.yul\":2214:2238   */\n      tag_362\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":2209:2212   */\n      dup3\n        /* \"#utility.yul\":2202:2239   */\n      mstore\n        /* \"#utility.yul\":2137:2245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2251:2341   */\n    tag_368:\n        /* \"#utility.yul\":2285:2292   */\n      0x00\n        /* \"#utility.yul\":2328:2333   */\n      dup2\n        /* \"#utility.yul\":2321:2334   */\n      iszero\n        /* \"#utility.yul\":2314:2335   */\n      iszero\n        /* \"#utility.yul\":2303:2335   */\n      swap1\n      pop\n        /* \"#utility.yul\":2251:2341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2446   */\n    tag_369:\n        /* \"#utility.yul\":2418:2439   */\n      tag_446\n        /* \"#utility.yul\":2433:2438   */\n      dup2\n        /* \"#utility.yul\":2418:2439   */\n      tag_368\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":2413:2416   */\n      dup3\n        /* \"#utility.yul\":2406:2440   */\n      mstore\n        /* \"#utility.yul\":2347:2446   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:3738   */\n    tag_370:\n        /* \"#utility.yul\":2659:2663   */\n      0xc0\n        /* \"#utility.yul\":2654:2657   */\n      dup3\n        /* \"#utility.yul\":2650:2664   */\n      add\n        /* \"#utility.yul\":2748:2752   */\n      0x00\n        /* \"#utility.yul\":2741:2746   */\n      dup3\n        /* \"#utility.yul\":2737:2753   */\n      add\n        /* \"#utility.yul\":2731:2754   */\n      mload\n        /* \"#utility.yul\":2767:2830   */\n      tag_448\n        /* \"#utility.yul\":2824:2828   */\n      0x00\n        /* \"#utility.yul\":2819:2822   */\n      dup6\n        /* \"#utility.yul\":2815:2829   */\n      add\n        /* \"#utility.yul\":2801:2813   */\n      dup3\n        /* \"#utility.yul\":2767:2830   */\n      tag_367\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":2674:2840   */\n      pop\n        /* \"#utility.yul\":2927:2931   */\n      0x20\n        /* \"#utility.yul\":2920:2925   */\n      dup3\n        /* \"#utility.yul\":2916:2932   */\n      add\n        /* \"#utility.yul\":2910:2933   */\n      mload\n        /* \"#utility.yul\":2946:3009   */\n      tag_449\n        /* \"#utility.yul\":3003:3007   */\n      0x20\n        /* \"#utility.yul\":2998:3001   */\n      dup6\n        /* \"#utility.yul\":2994:3008   */\n      add\n        /* \"#utility.yul\":2980:2992   */\n      dup3\n        /* \"#utility.yul\":2946:3009   */\n      tag_367\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2850:3019   */\n      pop\n        /* \"#utility.yul\":3107:3111   */\n      0x40\n        /* \"#utility.yul\":3100:3105   */\n      dup3\n        /* \"#utility.yul\":3096:3112   */\n      add\n        /* \"#utility.yul\":3090:3113   */\n      mload\n        /* \"#utility.yul\":3126:3189   */\n      tag_450\n        /* \"#utility.yul\":3183:3187   */\n      0x40\n        /* \"#utility.yul\":3178:3181   */\n      dup6\n        /* \"#utility.yul\":3174:3188   */\n      add\n        /* \"#utility.yul\":3160:3172   */\n      dup3\n        /* \"#utility.yul\":3126:3189   */\n      tag_367\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3029:3199   */\n      pop\n        /* \"#utility.yul\":3284:3288   */\n      0x60\n        /* \"#utility.yul\":3277:3282   */\n      dup3\n        /* \"#utility.yul\":3273:3289   */\n      add\n        /* \"#utility.yul\":3267:3290   */\n      mload\n        /* \"#utility.yul\":3303:3360   */\n      tag_451\n        /* \"#utility.yul\":3354:3358   */\n      0x60\n        /* \"#utility.yul\":3349:3352   */\n      dup6\n        /* \"#utility.yul\":3345:3359   */\n      add\n        /* \"#utility.yul\":3331:3343   */\n      dup3\n        /* \"#utility.yul\":3303:3360   */\n      tag_369\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3209:3370   */\n      pop\n        /* \"#utility.yul\":3459:3463   */\n      0x80\n        /* \"#utility.yul\":3452:3457   */\n      dup3\n        /* \"#utility.yul\":3448:3464   */\n      add\n        /* \"#utility.yul\":3442:3465   */\n      mload\n        /* \"#utility.yul\":3478:3535   */\n      tag_452\n        /* \"#utility.yul\":3529:3533   */\n      0x80\n        /* \"#utility.yul\":3524:3527   */\n      dup6\n        /* \"#utility.yul\":3520:3534   */\n      add\n        /* \"#utility.yul\":3506:3518   */\n      dup3\n        /* \"#utility.yul\":3478:3535   */\n      tag_369\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3380:3545   */\n      pop\n        /* \"#utility.yul\":3639:3643   */\n      0xa0\n        /* \"#utility.yul\":3632:3637   */\n      dup3\n        /* \"#utility.yul\":3628:3644   */\n      add\n        /* \"#utility.yul\":3622:3645   */\n      mload\n        /* \"#utility.yul\":3658:3721   */\n      tag_453\n        /* \"#utility.yul\":3715:3719   */\n      0xa0\n        /* \"#utility.yul\":3710:3713   */\n      dup6\n        /* \"#utility.yul\":3706:3720   */\n      add\n        /* \"#utility.yul\":3692:3704   */\n      dup3\n        /* \"#utility.yul\":3658:3721   */\n      tag_367\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":3555:3731   */\n      pop\n        /* \"#utility.yul\":2628:3738   */\n      pop\n        /* \"#utility.yul\":2520:3738   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3744:4027   */\n    tag_371:\n        /* \"#utility.yul\":3865:3875   */\n      0x00\n        /* \"#utility.yul\":3886:3984   */\n      tag_455\n        /* \"#utility.yul\":3980:3983   */\n      dup4\n        /* \"#utility.yul\":3972:3978   */\n      dup4\n        /* \"#utility.yul\":3886:3984   */\n      tag_370\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4016:4020   */\n      0xc0\n        /* \"#utility.yul\":4011:4014   */\n      dup4\n        /* \"#utility.yul\":4007:4021   */\n      add\n        /* \"#utility.yul\":3993:4021   */\n      swap1\n      pop\n        /* \"#utility.yul\":3744:4027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4033:4172   */\n    tag_372:\n        /* \"#utility.yul\":4129:4133   */\n      0x00\n        /* \"#utility.yul\":4161:4165   */\n      0x20\n        /* \"#utility.yul\":4156:4159   */\n      dup3\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4144:4166   */\n      swap1\n      pop\n        /* \"#utility.yul\":4033:4172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:5190   */\n    tag_373:\n        /* \"#utility.yul\":4421:4424   */\n      0x00\n        /* \"#utility.yul\":4450:4530   */\n      tag_458\n        /* \"#utility.yul\":4524:4529   */\n      dup3\n        /* \"#utility.yul\":4450:4530   */\n      tag_364\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4546:4658   */\n      tag_459\n        /* \"#utility.yul\":4651:4657   */\n      dup2\n        /* \"#utility.yul\":4646:4649   */\n      dup6\n        /* \"#utility.yul\":4546:4658   */\n      tag_365\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4539:4658   */\n      swap4\n      pop\n        /* \"#utility.yul\":4682:4764   */\n      tag_460\n        /* \"#utility.yul\":4758:4763   */\n      dup4\n        /* \"#utility.yul\":4682:4764   */\n      tag_366\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4787:4794   */\n      dup1\n        /* \"#utility.yul\":4818:4819   */\n      0x00\n        /* \"#utility.yul\":4803:5165   */\n    tag_461:\n        /* \"#utility.yul\":4828:4834   */\n      dup4\n        /* \"#utility.yul\":4825:4826   */\n      dup2\n        /* \"#utility.yul\":4822:4835   */\n      lt\n        /* \"#utility.yul\":4803:5165   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":4904:4910   */\n      dup2\n        /* \"#utility.yul\":4898:4911   */\n      mload\n        /* \"#utility.yul\":4931:5046   */\n      tag_464\n        /* \"#utility.yul\":5042:5045   */\n      dup9\n        /* \"#utility.yul\":5027:5040   */\n      dup3\n        /* \"#utility.yul\":4931:5046   */\n      tag_371\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4924:5046   */\n      swap8\n      pop\n        /* \"#utility.yul\":5069:5155   */\n      tag_465\n        /* \"#utility.yul\":5148:5154   */\n      dup4\n        /* \"#utility.yul\":5069:5155   */\n      tag_372\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5059:5155   */\n      swap3\n      pop\n        /* \"#utility.yul\":4863:5165   */\n      pop\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4847:4848   */\n      dup2\n        /* \"#utility.yul\":4843:4852   */\n      add\n        /* \"#utility.yul\":4838:4852   */\n      swap1\n      pop\n        /* \"#utility.yul\":4803:5165   */\n      jump(tag_461)\n    tag_463:\n        /* \"#utility.yul\":4807:4821   */\n      pop\n        /* \"#utility.yul\":5181:5184   */\n      dup6\n        /* \"#utility.yul\":5174:5184   */\n      swap4\n      pop\n        /* \"#utility.yul\":4426:5190   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4250:5190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5673   */\n    tag_42:\n        /* \"#utility.yul\":5391:5395   */\n      0x00\n        /* \"#utility.yul\":5429:5431   */\n      0x20\n        /* \"#utility.yul\":5418:5427   */\n      dup3\n        /* \"#utility.yul\":5414:5432   */\n      add\n        /* \"#utility.yul\":5406:5432   */\n      swap1\n      pop\n        /* \"#utility.yul\":5478:5487   */\n      dup2\n        /* \"#utility.yul\":5472:5476   */\n      dup2\n        /* \"#utility.yul\":5468:5488   */\n      sub\n        /* \"#utility.yul\":5464:5465   */\n      0x00\n        /* \"#utility.yul\":5453:5462   */\n      dup4\n        /* \"#utility.yul\":5449:5466   */\n      add\n        /* \"#utility.yul\":5442:5489   */\n      mstore\n        /* \"#utility.yul\":5506:5666   */\n      tag_467\n        /* \"#utility.yul\":5661:5665   */\n      dup2\n        /* \"#utility.yul\":5652:5658   */\n      dup5\n        /* \"#utility.yul\":5506:5666   */\n      tag_373\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5498:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5196:5673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5679:5801   */\n    tag_374:\n        /* \"#utility.yul\":5752:5776   */\n      tag_469\n        /* \"#utility.yul\":5770:5775   */\n      dup2\n        /* \"#utility.yul\":5752:5776   */\n      tag_362\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5745:5750   */\n      dup2\n        /* \"#utility.yul\":5742:5777   */\n      eq\n        /* \"#utility.yul\":5732:5795   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5788:5789   */\n      0x00\n        /* \"#utility.yul\":5781:5793   */\n      revert\n        /* \"#utility.yul\":5732:5795   */\n    tag_470:\n        /* \"#utility.yul\":5679:5801   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5807:5946   */\n    tag_375:\n        /* \"#utility.yul\":5853:5858   */\n      0x00\n        /* \"#utility.yul\":5891:5897   */\n      dup2\n        /* \"#utility.yul\":5878:5898   */\n      calldataload\n        /* \"#utility.yul\":5869:5898   */\n      swap1\n      pop\n        /* \"#utility.yul\":5907:5940   */\n      tag_472\n        /* \"#utility.yul\":5934:5939   */\n      dup2\n        /* \"#utility.yul\":5907:5940   */\n      tag_374\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5807:5946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5952:6426   */\n    tag_45:\n        /* \"#utility.yul\":6020:6026   */\n      0x00\n        /* \"#utility.yul\":6028:6034   */\n      0x00\n        /* \"#utility.yul\":6077:6079   */\n      0x40\n        /* \"#utility.yul\":6065:6074   */\n      dup4\n        /* \"#utility.yul\":6056:6063   */\n      dup6\n        /* \"#utility.yul\":6052:6075   */\n      sub\n        /* \"#utility.yul\":6048:6080   */\n      slt\n        /* \"#utility.yul\":6045:6164   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":6083:6162   */\n      tag_475\n      tag_356\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6045:6164   */\n    tag_474:\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6228:6281   */\n      tag_476\n        /* \"#utility.yul\":6273:6280   */\n      dup6\n        /* \"#utility.yul\":6264:6270   */\n      dup3\n        /* \"#utility.yul\":6253:6262   */\n      dup7\n        /* \"#utility.yul\":6249:6271   */\n      add\n        /* \"#utility.yul\":6228:6281   */\n      tag_361\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6218:6281   */\n      swap3\n      pop\n        /* \"#utility.yul\":6174:6291   */\n      pop\n        /* \"#utility.yul\":6330:6332   */\n      0x20\n        /* \"#utility.yul\":6356:6409   */\n      tag_477\n        /* \"#utility.yul\":6401:6408   */\n      dup6\n        /* \"#utility.yul\":6392:6398   */\n      dup3\n        /* \"#utility.yul\":6381:6390   */\n      dup7\n        /* \"#utility.yul\":6377:6399   */\n      add\n        /* \"#utility.yul\":6356:6409   */\n      tag_375\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6346:6409   */\n      swap2\n      pop\n        /* \"#utility.yul\":6301:6419   */\n      pop\n        /* \"#utility.yul\":5952:6426   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6432:6761   */\n    tag_53:\n        /* \"#utility.yul\":6491:6497   */\n      0x00\n        /* \"#utility.yul\":6540:6542   */\n      0x20\n        /* \"#utility.yul\":6528:6537   */\n      dup3\n        /* \"#utility.yul\":6519:6526   */\n      dup5\n        /* \"#utility.yul\":6515:6538   */\n      sub\n        /* \"#utility.yul\":6511:6543   */\n      slt\n        /* \"#utility.yul\":6508:6627   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":6546:6625   */\n      tag_480\n      tag_356\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6508:6627   */\n    tag_479:\n        /* \"#utility.yul\":6666:6667   */\n      0x00\n        /* \"#utility.yul\":6691:6744   */\n      tag_481\n        /* \"#utility.yul\":6736:6743   */\n      dup5\n        /* \"#utility.yul\":6727:6733   */\n      dup3\n        /* \"#utility.yul\":6716:6725   */\n      dup6\n        /* \"#utility.yul\":6712:6734   */\n      add\n        /* \"#utility.yul\":6691:6744   */\n      tag_375\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6681:6744   */\n      swap2\n      pop\n        /* \"#utility.yul\":6637:6754   */\n      pop\n        /* \"#utility.yul\":6432:6761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6767:6883   */\n    tag_376:\n        /* \"#utility.yul\":6837:6858   */\n      tag_483\n        /* \"#utility.yul\":6852:6857   */\n      dup2\n        /* \"#utility.yul\":6837:6858   */\n      tag_368\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6830:6835   */\n      dup2\n        /* \"#utility.yul\":6827:6859   */\n      eq\n        /* \"#utility.yul\":6817:6877   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6870:6871   */\n      0x00\n        /* \"#utility.yul\":6863:6875   */\n      revert\n        /* \"#utility.yul\":6817:6877   */\n    tag_484:\n        /* \"#utility.yul\":6767:6883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6889:7022   */\n    tag_377:\n        /* \"#utility.yul\":6932:6937   */\n      0x00\n        /* \"#utility.yul\":6970:6976   */\n      dup2\n        /* \"#utility.yul\":6957:6977   */\n      calldataload\n        /* \"#utility.yul\":6948:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":6986:7016   */\n      tag_486\n        /* \"#utility.yul\":7010:7015   */\n      dup2\n        /* \"#utility.yul\":6986:7016   */\n      tag_376\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":6889:7022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7028:7641   */\n    tag_61:\n        /* \"#utility.yul\":7102:7108   */\n      0x00\n        /* \"#utility.yul\":7110:7116   */\n      0x00\n        /* \"#utility.yul\":7118:7124   */\n      0x00\n        /* \"#utility.yul\":7167:7169   */\n      0x60\n        /* \"#utility.yul\":7155:7164   */\n      dup5\n        /* \"#utility.yul\":7146:7153   */\n      dup7\n        /* \"#utility.yul\":7142:7165   */\n      sub\n        /* \"#utility.yul\":7138:7170   */\n      slt\n        /* \"#utility.yul\":7135:7254   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7173:7252   */\n      tag_489\n      tag_356\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7135:7254   */\n    tag_488:\n        /* \"#utility.yul\":7293:7294   */\n      0x00\n        /* \"#utility.yul\":7318:7371   */\n      tag_490\n        /* \"#utility.yul\":7363:7370   */\n      dup7\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7343:7352   */\n      dup8\n        /* \"#utility.yul\":7339:7361   */\n      add\n        /* \"#utility.yul\":7318:7371   */\n      tag_375\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7308:7371   */\n      swap4\n      pop\n        /* \"#utility.yul\":7264:7381   */\n      pop\n        /* \"#utility.yul\":7420:7422   */\n      0x20\n        /* \"#utility.yul\":7446:7499   */\n      tag_491\n        /* \"#utility.yul\":7491:7498   */\n      dup7\n        /* \"#utility.yul\":7482:7488   */\n      dup3\n        /* \"#utility.yul\":7471:7480   */\n      dup8\n        /* \"#utility.yul\":7467:7489   */\n      add\n        /* \"#utility.yul\":7446:7499   */\n      tag_375\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7436:7499   */\n      swap3\n      pop\n        /* \"#utility.yul\":7391:7509   */\n      pop\n        /* \"#utility.yul\":7548:7550   */\n      0x40\n        /* \"#utility.yul\":7574:7624   */\n      tag_492\n        /* \"#utility.yul\":7616:7623   */\n      dup7\n        /* \"#utility.yul\":7607:7613   */\n      dup3\n        /* \"#utility.yul\":7596:7605   */\n      dup8\n        /* \"#utility.yul\":7592:7614   */\n      add\n        /* \"#utility.yul\":7574:7624   */\n      tag_377\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7564:7624   */\n      swap2\n      pop\n        /* \"#utility.yul\":7519:7634   */\n      pop\n        /* \"#utility.yul\":7028:7641   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7647:7756   */\n    tag_378:\n        /* \"#utility.yul\":7728:7749   */\n      tag_494\n        /* \"#utility.yul\":7743:7748   */\n      dup2\n        /* \"#utility.yul\":7728:7749   */\n      tag_368\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7723:7726   */\n      dup3\n        /* \"#utility.yul\":7716:7750   */\n      mstore\n        /* \"#utility.yul\":7647:7756   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:8513   */\n    tag_67:\n        /* \"#utility.yul\":7983:7987   */\n      0x00\n        /* \"#utility.yul\":8021:8024   */\n      0xc0\n        /* \"#utility.yul\":8010:8019   */\n      dup3\n        /* \"#utility.yul\":8006:8025   */\n      add\n        /* \"#utility.yul\":7998:8025   */\n      swap1\n      pop\n        /* \"#utility.yul\":8035:8106   */\n      tag_496\n        /* \"#utility.yul\":8103:8104   */\n      0x00\n        /* \"#utility.yul\":8092:8101   */\n      dup4\n        /* \"#utility.yul\":8088:8105   */\n      add\n        /* \"#utility.yul\":8079:8085   */\n      dup10\n        /* \"#utility.yul\":8035:8106   */\n      tag_363\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8116:8188   */\n      tag_497\n        /* \"#utility.yul\":8184:8186   */\n      0x20\n        /* \"#utility.yul\":8173:8182   */\n      dup4\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8160:8166   */\n      dup9\n        /* \"#utility.yul\":8116:8188   */\n      tag_363\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8198:8270   */\n      tag_498\n        /* \"#utility.yul\":8266:8268   */\n      0x40\n        /* \"#utility.yul\":8255:8264   */\n      dup4\n        /* \"#utility.yul\":8251:8269   */\n      add\n        /* \"#utility.yul\":8242:8248   */\n      dup8\n        /* \"#utility.yul\":8198:8270   */\n      tag_363\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8280:8346   */\n      tag_499\n        /* \"#utility.yul\":8342:8344   */\n      0x60\n        /* \"#utility.yul\":8331:8340   */\n      dup4\n        /* \"#utility.yul\":8327:8345   */\n      add\n        /* \"#utility.yul\":8318:8324   */\n      dup7\n        /* \"#utility.yul\":8280:8346   */\n      tag_378\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8356:8423   */\n      tag_500\n        /* \"#utility.yul\":8418:8421   */\n      0x80\n        /* \"#utility.yul\":8407:8416   */\n      dup4\n        /* \"#utility.yul\":8403:8422   */\n      add\n        /* \"#utility.yul\":8394:8400   */\n      dup6\n        /* \"#utility.yul\":8356:8423   */\n      tag_378\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8433:8506   */\n      tag_501\n        /* \"#utility.yul\":8501:8504   */\n      0xa0\n        /* \"#utility.yul\":8490:8499   */\n      dup4\n        /* \"#utility.yul\":8486:8505   */\n      add\n        /* \"#utility.yul\":8477:8483   */\n      dup5\n        /* \"#utility.yul\":8433:8506   */\n      tag_363\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":7762:8513   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8519:8993   */\n    tag_70:\n        /* \"#utility.yul\":8587:8593   */\n      0x00\n        /* \"#utility.yul\":8595:8601   */\n      0x00\n        /* \"#utility.yul\":8644:8646   */\n      0x40\n        /* \"#utility.yul\":8632:8641   */\n      dup4\n        /* \"#utility.yul\":8623:8630   */\n      dup6\n        /* \"#utility.yul\":8619:8642   */\n      sub\n        /* \"#utility.yul\":8615:8647   */\n      slt\n        /* \"#utility.yul\":8612:8731   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":8650:8729   */\n      tag_504\n      tag_356\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8612:8731   */\n    tag_503:\n        /* \"#utility.yul\":8770:8771   */\n      0x00\n        /* \"#utility.yul\":8795:8848   */\n      tag_505\n        /* \"#utility.yul\":8840:8847   */\n      dup6\n        /* \"#utility.yul\":8831:8837   */\n      dup3\n        /* \"#utility.yul\":8820:8829   */\n      dup7\n        /* \"#utility.yul\":8816:8838   */\n      add\n        /* \"#utility.yul\":8795:8848   */\n      tag_375\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":8785:8848   */\n      swap3\n      pop\n        /* \"#utility.yul\":8741:8858   */\n      pop\n        /* \"#utility.yul\":8897:8899   */\n      0x20\n        /* \"#utility.yul\":8923:8976   */\n      tag_506\n        /* \"#utility.yul\":8968:8975   */\n      dup6\n        /* \"#utility.yul\":8959:8965   */\n      dup3\n        /* \"#utility.yul\":8948:8957   */\n      dup7\n        /* \"#utility.yul\":8944:8966   */\n      add\n        /* \"#utility.yul\":8923:8976   */\n      tag_375\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8913:8976   */\n      swap2\n      pop\n        /* \"#utility.yul\":8868:8986   */\n      pop\n        /* \"#utility.yul\":8519:8993   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8999:9059   */\n    tag_379:\n        /* \"#utility.yul\":9027:9030   */\n      0x00\n        /* \"#utility.yul\":9048:9053   */\n      dup2\n        /* \"#utility.yul\":9041:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":8999:9059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9065:9207   */\n    tag_380:\n        /* \"#utility.yul\":9115:9124   */\n      0x00\n        /* \"#utility.yul\":9148:9201   */\n      tag_509\n        /* \"#utility.yul\":9166:9200   */\n      tag_510\n        /* \"#utility.yul\":9175:9199   */\n      tag_511\n        /* \"#utility.yul\":9193:9198   */\n      dup5\n        /* \"#utility.yul\":9175:9199   */\n      tag_358\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9166:9200   */\n      tag_379\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9148:9201   */\n      tag_358\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9135:9201   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9213:9339   */\n    tag_381:\n        /* \"#utility.yul\":9263:9272   */\n      0x00\n        /* \"#utility.yul\":9296:9333   */\n      tag_513\n        /* \"#utility.yul\":9327:9332   */\n      dup3\n        /* \"#utility.yul\":9296:9333   */\n      tag_380\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9283:9333   */\n      swap1\n      pop\n        /* \"#utility.yul\":9213:9339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9345:9485   */\n    tag_382:\n        /* \"#utility.yul\":9409:9418   */\n      0x00\n        /* \"#utility.yul\":9442:9479   */\n      tag_515\n        /* \"#utility.yul\":9473:9478   */\n      dup3\n        /* \"#utility.yul\":9442:9479   */\n      tag_381\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9429:9479   */\n      swap1\n      pop\n        /* \"#utility.yul\":9345:9485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9491:9650   */\n    tag_383:\n        /* \"#utility.yul\":9592:9643   */\n      tag_517\n        /* \"#utility.yul\":9637:9642   */\n      dup2\n        /* \"#utility.yul\":9592:9643   */\n      tag_382\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9587:9590   */\n      dup3\n        /* \"#utility.yul\":9580:9644   */\n      mstore\n        /* \"#utility.yul\":9491:9650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9656:9906   */\n    tag_81:\n        /* \"#utility.yul\":9763:9767   */\n      0x00\n        /* \"#utility.yul\":9801:9803   */\n      0x20\n        /* \"#utility.yul\":9790:9799   */\n      dup3\n        /* \"#utility.yul\":9786:9804   */\n      add\n        /* \"#utility.yul\":9778:9804   */\n      swap1\n      pop\n        /* \"#utility.yul\":9814:9899   */\n      tag_519\n        /* \"#utility.yul\":9896:9897   */\n      0x00\n        /* \"#utility.yul\":9885:9894   */\n      dup4\n        /* \"#utility.yul\":9881:9898   */\n      add\n        /* \"#utility.yul\":9872:9878   */\n      dup5\n        /* \"#utility.yul\":9814:9899   */\n      tag_383\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9656:9906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9912:10030   */\n    tag_384:\n        /* \"#utility.yul\":9999:10023   */\n      tag_521\n        /* \"#utility.yul\":10017:10022   */\n      dup2\n        /* \"#utility.yul\":9999:10023   */\n      tag_359\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":9994:9997   */\n      dup3\n        /* \"#utility.yul\":9987:10024   */\n      mstore\n        /* \"#utility.yul\":9912:10030   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10036:10258   */\n    tag_91:\n        /* \"#utility.yul\":10129:10133   */\n      0x00\n        /* \"#utility.yul\":10167:10169   */\n      0x20\n        /* \"#utility.yul\":10156:10165   */\n      dup3\n        /* \"#utility.yul\":10152:10170   */\n      add\n        /* \"#utility.yul\":10144:10170   */\n      swap1\n      pop\n        /* \"#utility.yul\":10180:10251   */\n      tag_523\n        /* \"#utility.yul\":10248:10249   */\n      0x00\n        /* \"#utility.yul\":10237:10246   */\n      dup4\n        /* \"#utility.yul\":10233:10250   */\n      add\n        /* \"#utility.yul\":10224:10230   */\n      dup5\n        /* \"#utility.yul\":10180:10251   */\n      tag_384\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10036:10258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10264:10433   */\n    tag_385:\n        /* \"#utility.yul\":10348:10359   */\n      0x00\n        /* \"#utility.yul\":10382:10388   */\n      dup3\n        /* \"#utility.yul\":10377:10380   */\n      dup3\n        /* \"#utility.yul\":10370:10389   */\n      mstore\n        /* \"#utility.yul\":10422:10426   */\n      0x20\n        /* \"#utility.yul\":10417:10420   */\n      dup3\n        /* \"#utility.yul\":10413:10427   */\n      add\n        /* \"#utility.yul\":10398:10427   */\n      swap1\n      pop\n        /* \"#utility.yul\":10264:10433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10439:10604   */\n    tag_386:\n        /* \"#utility.yul\":10579:10596   */\n      0x496e76616c6964206163636f756e740000000000000000000000000000000000\n        /* \"#utility.yul\":10575:10576   */\n      0x00\n        /* \"#utility.yul\":10567:10573   */\n      dup3\n        /* \"#utility.yul\":10563:10577   */\n      add\n        /* \"#utility.yul\":10556:10597   */\n      mstore\n        /* \"#utility.yul\":10439:10604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10610:10976   */\n    tag_387:\n        /* \"#utility.yul\":10752:10755   */\n      0x00\n        /* \"#utility.yul\":10773:10840   */\n      tag_527\n        /* \"#utility.yul\":10837:10839   */\n      0x0f\n        /* \"#utility.yul\":10832:10835   */\n      dup4\n        /* \"#utility.yul\":10773:10840   */\n      tag_385\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10766:10840   */\n      swap2\n      pop\n        /* \"#utility.yul\":10849:10942   */\n      tag_528\n        /* \"#utility.yul\":10938:10941   */\n      dup3\n        /* \"#utility.yul\":10849:10942   */\n      tag_386\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10962:10965   */\n      dup3\n        /* \"#utility.yul\":10958:10970   */\n      add\n        /* \"#utility.yul\":10951:10970   */\n      swap1\n      pop\n        /* \"#utility.yul\":10610:10976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10982:11401   */\n    tag_128:\n        /* \"#utility.yul\":11148:11152   */\n      0x00\n        /* \"#utility.yul\":11186:11188   */\n      0x20\n        /* \"#utility.yul\":11175:11184   */\n      dup3\n        /* \"#utility.yul\":11171:11189   */\n      add\n        /* \"#utility.yul\":11163:11189   */\n      swap1\n      pop\n        /* \"#utility.yul\":11235:11244   */\n      dup2\n        /* \"#utility.yul\":11229:11233   */\n      dup2\n        /* \"#utility.yul\":11225:11245   */\n      sub\n        /* \"#utility.yul\":11221:11222   */\n      0x00\n        /* \"#utility.yul\":11210:11219   */\n      dup4\n        /* \"#utility.yul\":11206:11223   */\n      add\n        /* \"#utility.yul\":11199:11246   */\n      mstore\n        /* \"#utility.yul\":11263:11394   */\n      tag_530\n        /* \"#utility.yul\":11389:11393   */\n      dup2\n        /* \"#utility.yul\":11263:11394   */\n      tag_387\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11255:11394   */\n      swap1\n      pop\n        /* \"#utility.yul\":10982:11401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11407:11576   */\n    tag_388:\n        /* \"#utility.yul\":11547:11568   */\n      0x496e76616c6964207374616b6520696e64657800000000000000000000000000\n        /* \"#utility.yul\":11543:11544   */\n      0x00\n        /* \"#utility.yul\":11535:11541   */\n      dup3\n        /* \"#utility.yul\":11531:11545   */\n      add\n        /* \"#utility.yul\":11524:11569   */\n      mstore\n        /* \"#utility.yul\":11407:11576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11582:11948   */\n    tag_389:\n        /* \"#utility.yul\":11724:11727   */\n      0x00\n        /* \"#utility.yul\":11745:11812   */\n      tag_533\n        /* \"#utility.yul\":11809:11811   */\n      0x13\n        /* \"#utility.yul\":11804:11807   */\n      dup4\n        /* \"#utility.yul\":11745:11812   */\n      tag_385\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11738:11812   */\n      swap2\n      pop\n        /* \"#utility.yul\":11821:11914   */\n      tag_534\n        /* \"#utility.yul\":11910:11913   */\n      dup3\n        /* \"#utility.yul\":11821:11914   */\n      tag_388\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11939:11941   */\n      0x20\n        /* \"#utility.yul\":11934:11937   */\n      dup3\n        /* \"#utility.yul\":11930:11942   */\n      add\n        /* \"#utility.yul\":11923:11942   */\n      swap1\n      pop\n        /* \"#utility.yul\":11582:11948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11954:12373   */\n    tag_131:\n        /* \"#utility.yul\":12120:12124   */\n      0x00\n        /* \"#utility.yul\":12158:12160   */\n      0x20\n        /* \"#utility.yul\":12147:12156   */\n      dup3\n        /* \"#utility.yul\":12143:12161   */\n      add\n        /* \"#utility.yul\":12135:12161   */\n      swap1\n      pop\n        /* \"#utility.yul\":12207:12216   */\n      dup2\n        /* \"#utility.yul\":12201:12205   */\n      dup2\n        /* \"#utility.yul\":12197:12217   */\n      sub\n        /* \"#utility.yul\":12193:12194   */\n      0x00\n        /* \"#utility.yul\":12182:12191   */\n      dup4\n        /* \"#utility.yul\":12178:12195   */\n      add\n        /* \"#utility.yul\":12171:12218   */\n      mstore\n        /* \"#utility.yul\":12235:12366   */\n      tag_536\n        /* \"#utility.yul\":12361:12365   */\n      dup2\n        /* \"#utility.yul\":12235:12366   */\n      tag_389\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12227:12366   */\n      swap1\n      pop\n        /* \"#utility.yul\":11954:12373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12379:12559   */\n    tag_134:\n        /* \"#utility.yul\":12427:12504   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12424:12425   */\n      0x00\n        /* \"#utility.yul\":12417:12505   */\n      mstore\n        /* \"#utility.yul\":12524:12528   */\n      0x32\n        /* \"#utility.yul\":12521:12522   */\n      0x04\n        /* \"#utility.yul\":12514:12529   */\n      mstore\n        /* \"#utility.yul\":12548:12552   */\n      0x24\n        /* \"#utility.yul\":12545:12546   */\n      0x00\n        /* \"#utility.yul\":12538:12553   */\n      revert\n        /* \"#utility.yul\":12565:12730   */\n    tag_390:\n        /* \"#utility.yul\":12705:12722   */\n      0x416c726561647920636c61696d65640000000000000000000000000000000000\n        /* \"#utility.yul\":12701:12702   */\n      0x00\n        /* \"#utility.yul\":12693:12699   */\n      dup3\n        /* \"#utility.yul\":12689:12703   */\n      add\n        /* \"#utility.yul\":12682:12723   */\n      mstore\n        /* \"#utility.yul\":12565:12730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12736:13102   */\n    tag_391:\n        /* \"#utility.yul\":12878:12881   */\n      0x00\n        /* \"#utility.yul\":12899:12966   */\n      tag_540\n        /* \"#utility.yul\":12963:12965   */\n      0x0f\n        /* \"#utility.yul\":12958:12961   */\n      dup4\n        /* \"#utility.yul\":12899:12966   */\n      tag_385\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12892:12966   */\n      swap2\n      pop\n        /* \"#utility.yul\":12975:13068   */\n      tag_541\n        /* \"#utility.yul\":13064:13067   */\n      dup3\n        /* \"#utility.yul\":12975:13068   */\n      tag_390\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13093:13095   */\n      0x20\n        /* \"#utility.yul\":13088:13091   */\n      dup3\n        /* \"#utility.yul\":13084:13096   */\n      add\n        /* \"#utility.yul\":13077:13096   */\n      swap1\n      pop\n        /* \"#utility.yul\":12736:13102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13108:13527   */\n    tag_138:\n        /* \"#utility.yul\":13274:13278   */\n      0x00\n        /* \"#utility.yul\":13312:13314   */\n      0x20\n        /* \"#utility.yul\":13301:13310   */\n      dup3\n        /* \"#utility.yul\":13297:13315   */\n      add\n        /* \"#utility.yul\":13289:13315   */\n      swap1\n      pop\n        /* \"#utility.yul\":13361:13370   */\n      dup2\n        /* \"#utility.yul\":13355:13359   */\n      dup2\n        /* \"#utility.yul\":13351:13371   */\n      sub\n        /* \"#utility.yul\":13347:13348   */\n      0x00\n        /* \"#utility.yul\":13336:13345   */\n      dup4\n        /* \"#utility.yul\":13332:13349   */\n      add\n        /* \"#utility.yul\":13325:13372   */\n      mstore\n        /* \"#utility.yul\":13389:13520   */\n      tag_543\n        /* \"#utility.yul\":13515:13519   */\n      dup2\n        /* \"#utility.yul\":13389:13520   */\n      tag_391\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13381:13520   */\n      swap1\n      pop\n        /* \"#utility.yul\":13108:13527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13533:13713   */\n    tag_392:\n        /* \"#utility.yul\":13581:13658   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13578:13579   */\n      0x00\n        /* \"#utility.yul\":13571:13659   */\n      mstore\n        /* \"#utility.yul\":13678:13682   */\n      0x11\n        /* \"#utility.yul\":13675:13676   */\n      0x04\n        /* \"#utility.yul\":13668:13683   */\n      mstore\n        /* \"#utility.yul\":13702:13706   */\n      0x24\n        /* \"#utility.yul\":13699:13700   */\n      0x00\n        /* \"#utility.yul\":13692:13707   */\n      revert\n        /* \"#utility.yul\":13719:13913   */\n    tag_142:\n        /* \"#utility.yul\":13759:13763   */\n      0x00\n        /* \"#utility.yul\":13779:13799   */\n      tag_546\n        /* \"#utility.yul\":13797:13798   */\n      dup3\n        /* \"#utility.yul\":13779:13799   */\n      tag_362\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13774:13799   */\n      swap2\n      pop\n        /* \"#utility.yul\":13813:13833   */\n      tag_547\n        /* \"#utility.yul\":13831:13832   */\n      dup4\n        /* \"#utility.yul\":13813:13833   */\n      tag_362\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13808:13833   */\n      swap3\n      pop\n        /* \"#utility.yul\":13857:13858   */\n      dup3\n        /* \"#utility.yul\":13854:13855   */\n      dup3\n        /* \"#utility.yul\":13850:13859   */\n      sub\n        /* \"#utility.yul\":13842:13859   */\n      swap1\n      pop\n        /* \"#utility.yul\":13881:13882   */\n      dup2\n        /* \"#utility.yul\":13875:13879   */\n      dup2\n        /* \"#utility.yul\":13872:13883   */\n      gt\n        /* \"#utility.yul\":13869:13906   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":13886:13904   */\n      tag_549\n      tag_392\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13869:13906   */\n    tag_548:\n        /* \"#utility.yul\":13719:13913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13919:14110   */\n    tag_150:\n        /* \"#utility.yul\":13959:13962   */\n      0x00\n        /* \"#utility.yul\":13978:13998   */\n      tag_551\n        /* \"#utility.yul\":13996:13997   */\n      dup3\n        /* \"#utility.yul\":13978:13998   */\n      tag_362\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13973:13998   */\n      swap2\n      pop\n        /* \"#utility.yul\":14012:14032   */\n      tag_552\n        /* \"#utility.yul\":14030:14031   */\n      dup4\n        /* \"#utility.yul\":14012:14032   */\n      tag_362\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14007:14032   */\n      swap3\n      pop\n        /* \"#utility.yul\":14055:14056   */\n      dup3\n        /* \"#utility.yul\":14052:14053   */\n      dup3\n        /* \"#utility.yul\":14048:14057   */\n      add\n        /* \"#utility.yul\":14041:14057   */\n      swap1\n      pop\n        /* \"#utility.yul\":14076:14079   */\n      dup1\n        /* \"#utility.yul\":14073:14074   */\n      dup3\n        /* \"#utility.yul\":14070:14080   */\n      gt\n        /* \"#utility.yul\":14067:14103   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":14083:14101   */\n      tag_554\n      tag_392\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14067:14103   */\n    tag_553:\n        /* \"#utility.yul\":13919:14110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14116:14526   */\n    tag_152:\n        /* \"#utility.yul\":14156:14163   */\n      0x00\n        /* \"#utility.yul\":14179:14199   */\n      tag_556\n        /* \"#utility.yul\":14197:14198   */\n      dup3\n        /* \"#utility.yul\":14179:14199   */\n      tag_362\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14174:14199   */\n      swap2\n      pop\n        /* \"#utility.yul\":14213:14233   */\n      tag_557\n        /* \"#utility.yul\":14231:14232   */\n      dup4\n        /* \"#utility.yul\":14213:14233   */\n      tag_362\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14208:14233   */\n      swap3\n      pop\n        /* \"#utility.yul\":14268:14269   */\n      dup3\n        /* \"#utility.yul\":14265:14266   */\n      dup3\n        /* \"#utility.yul\":14261:14270   */\n      mul\n        /* \"#utility.yul\":14290:14320   */\n      tag_558\n        /* \"#utility.yul\":14308:14319   */\n      dup2\n        /* \"#utility.yul\":14290:14320   */\n      tag_362\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14279:14320   */\n      swap2\n      pop\n        /* \"#utility.yul\":14469:14470   */\n      dup3\n        /* \"#utility.yul\":14460:14467   */\n      dup3\n        /* \"#utility.yul\":14456:14471   */\n      div\n        /* \"#utility.yul\":14453:14454   */\n      dup5\n        /* \"#utility.yul\":14450:14472   */\n      eq\n        /* \"#utility.yul\":14430:14431   */\n      dup4\n        /* \"#utility.yul\":14423:14432   */\n      iszero\n        /* \"#utility.yul\":14403:14486   */\n      or\n        /* \"#utility.yul\":14380:14519   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":14499:14517   */\n      tag_560\n      tag_392\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14380:14519   */\n    tag_559:\n        /* \"#utility.yul\":14164:14526   */\n      pop\n        /* \"#utility.yul\":14116:14526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14532:14712   */\n    tag_393:\n        /* \"#utility.yul\":14580:14657   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14577:14578   */\n      0x00\n        /* \"#utility.yul\":14570:14658   */\n      mstore\n        /* \"#utility.yul\":14677:14681   */\n      0x12\n        /* \"#utility.yul\":14674:14675   */\n      0x04\n        /* \"#utility.yul\":14667:14682   */\n      mstore\n        /* \"#utility.yul\":14701:14705   */\n      0x24\n        /* \"#utility.yul\":14698:14699   */\n      0x00\n        /* \"#utility.yul\":14691:14706   */\n      revert\n        /* \"#utility.yul\":14718:14903   */\n    tag_156:\n        /* \"#utility.yul\":14758:14759   */\n      0x00\n        /* \"#utility.yul\":14775:14795   */\n      tag_563\n        /* \"#utility.yul\":14793:14794   */\n      dup3\n        /* \"#utility.yul\":14775:14795   */\n      tag_362\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14770:14795   */\n      swap2\n      pop\n        /* \"#utility.yul\":14809:14829   */\n      tag_564\n        /* \"#utility.yul\":14827:14828   */\n      dup4\n        /* \"#utility.yul\":14809:14829   */\n      tag_362\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14804:14829   */\n      swap3\n      pop\n        /* \"#utility.yul\":14848:14849   */\n      dup3\n        /* \"#utility.yul\":14838:14873   */\n      tag_565\n      jumpi\n        /* \"#utility.yul\":14853:14871   */\n      tag_566\n      tag_393\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14838:14873   */\n    tag_565:\n        /* \"#utility.yul\":14895:14896   */\n      dup3\n        /* \"#utility.yul\":14892:14893   */\n      dup3\n        /* \"#utility.yul\":14888:14897   */\n      div\n        /* \"#utility.yul\":14883:14897   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:14903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14909:15077   */\n    tag_394:\n        /* \"#utility.yul\":15049:15069   */\n      0x43616c6c6572206d75737420626520454f410000000000000000000000000000\n        /* \"#utility.yul\":15045:15046   */\n      0x00\n        /* \"#utility.yul\":15037:15043   */\n      dup3\n        /* \"#utility.yul\":15033:15047   */\n      add\n        /* \"#utility.yul\":15026:15070   */\n      mstore\n        /* \"#utility.yul\":14909:15077   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15083:15449   */\n    tag_395:\n        /* \"#utility.yul\":15225:15228   */\n      0x00\n        /* \"#utility.yul\":15246:15313   */\n      tag_569\n        /* \"#utility.yul\":15310:15312   */\n      0x12\n        /* \"#utility.yul\":15305:15308   */\n      dup4\n        /* \"#utility.yul\":15246:15313   */\n      tag_385\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15239:15313   */\n      swap2\n      pop\n        /* \"#utility.yul\":15322:15415   */\n      tag_570\n        /* \"#utility.yul\":15411:15414   */\n      dup3\n        /* \"#utility.yul\":15322:15415   */\n      tag_394\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15440:15442   */\n      0x20\n        /* \"#utility.yul\":15435:15438   */\n      dup3\n        /* \"#utility.yul\":15431:15443   */\n      add\n        /* \"#utility.yul\":15424:15443   */\n      swap1\n      pop\n        /* \"#utility.yul\":15083:15449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15455:15874   */\n    tag_163:\n        /* \"#utility.yul\":15621:15625   */\n      0x00\n        /* \"#utility.yul\":15659:15661   */\n      0x20\n        /* \"#utility.yul\":15648:15657   */\n      dup3\n        /* \"#utility.yul\":15644:15662   */\n      add\n        /* \"#utility.yul\":15636:15662   */\n      swap1\n      pop\n        /* \"#utility.yul\":15708:15717   */\n      dup2\n        /* \"#utility.yul\":15702:15706   */\n      dup2\n        /* \"#utility.yul\":15698:15718   */\n      sub\n        /* \"#utility.yul\":15694:15695   */\n      0x00\n        /* \"#utility.yul\":15683:15692   */\n      dup4\n        /* \"#utility.yul\":15679:15696   */\n      add\n        /* \"#utility.yul\":15672:15719   */\n      mstore\n        /* \"#utility.yul\":15736:15867   */\n      tag_572\n        /* \"#utility.yul\":15862:15866   */\n      dup2\n        /* \"#utility.yul\":15736:15867   */\n      tag_395\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":15728:15867   */\n      swap1\n      pop\n        /* \"#utility.yul\":15455:15874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15880:16051   */\n    tag_396:\n        /* \"#utility.yul\":16020:16043   */\n      0x4175746f2d7374616b696e672064697361626c65640000000000000000000000\n        /* \"#utility.yul\":16016:16017   */\n      0x00\n        /* \"#utility.yul\":16008:16014   */\n      dup3\n        /* \"#utility.yul\":16004:16018   */\n      add\n        /* \"#utility.yul\":15997:16044   */\n      mstore\n        /* \"#utility.yul\":15880:16051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16057:16423   */\n    tag_397:\n        /* \"#utility.yul\":16199:16202   */\n      0x00\n        /* \"#utility.yul\":16220:16287   */\n      tag_575\n        /* \"#utility.yul\":16284:16286   */\n      0x15\n        /* \"#utility.yul\":16279:16282   */\n      dup4\n        /* \"#utility.yul\":16220:16287   */\n      tag_385\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16213:16287   */\n      swap2\n      pop\n        /* \"#utility.yul\":16296:16389   */\n      tag_576\n        /* \"#utility.yul\":16385:16388   */\n      dup3\n        /* \"#utility.yul\":16296:16389   */\n      tag_396\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16414:16416   */\n      0x20\n        /* \"#utility.yul\":16409:16412   */\n      dup3\n        /* \"#utility.yul\":16405:16417   */\n      add\n        /* \"#utility.yul\":16398:16417   */\n      swap1\n      pop\n        /* \"#utility.yul\":16057:16423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16429:16848   */\n    tag_174:\n        /* \"#utility.yul\":16595:16599   */\n      0x00\n        /* \"#utility.yul\":16633:16635   */\n      0x20\n        /* \"#utility.yul\":16622:16631   */\n      dup3\n        /* \"#utility.yul\":16618:16636   */\n      add\n        /* \"#utility.yul\":16610:16636   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:16691   */\n      dup2\n        /* \"#utility.yul\":16676:16680   */\n      dup2\n        /* \"#utility.yul\":16672:16692   */\n      sub\n        /* \"#utility.yul\":16668:16669   */\n      0x00\n        /* \"#utility.yul\":16657:16666   */\n      dup4\n        /* \"#utility.yul\":16653:16670   */\n      add\n        /* \"#utility.yul\":16646:16693   */\n      mstore\n        /* \"#utility.yul\":16710:16841   */\n      tag_578\n        /* \"#utility.yul\":16836:16840   */\n      dup2\n        /* \"#utility.yul\":16710:16841   */\n      tag_397\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":16702:16841   */\n      swap1\n      pop\n        /* \"#utility.yul\":16429:16848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16854:17016   */\n    tag_398:\n        /* \"#utility.yul\":16994:17008   */\n      0x5374696c6c206c6f636b65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":16990:16991   */\n      0x00\n        /* \"#utility.yul\":16982:16988   */\n      dup3\n        /* \"#utility.yul\":16978:16992   */\n      add\n        /* \"#utility.yul\":16971:17009   */\n      mstore\n        /* \"#utility.yul\":16854:17016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17022:17388   */\n    tag_399:\n        /* \"#utility.yul\":17164:17167   */\n      0x00\n        /* \"#utility.yul\":17185:17252   */\n      tag_581\n        /* \"#utility.yul\":17249:17251   */\n      0x0c\n        /* \"#utility.yul\":17244:17247   */\n      dup4\n        /* \"#utility.yul\":17185:17252   */\n      tag_385\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17178:17252   */\n      swap2\n      pop\n        /* \"#utility.yul\":17261:17354   */\n      tag_582\n        /* \"#utility.yul\":17350:17353   */\n      dup3\n        /* \"#utility.yul\":17261:17354   */\n      tag_398\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17379:17381   */\n      0x20\n        /* \"#utility.yul\":17374:17377   */\n      dup3\n        /* \"#utility.yul\":17370:17382   */\n      add\n        /* \"#utility.yul\":17363:17382   */\n      swap1\n      pop\n        /* \"#utility.yul\":17022:17388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17394:17813   */\n    tag_177:\n        /* \"#utility.yul\":17560:17564   */\n      0x00\n        /* \"#utility.yul\":17598:17600   */\n      0x20\n        /* \"#utility.yul\":17587:17596   */\n      dup3\n        /* \"#utility.yul\":17583:17601   */\n      add\n        /* \"#utility.yul\":17575:17601   */\n      swap1\n      pop\n        /* \"#utility.yul\":17647:17656   */\n      dup2\n        /* \"#utility.yul\":17641:17645   */\n      dup2\n        /* \"#utility.yul\":17637:17657   */\n      sub\n        /* \"#utility.yul\":17633:17634   */\n      0x00\n        /* \"#utility.yul\":17622:17631   */\n      dup4\n        /* \"#utility.yul\":17618:17635   */\n      add\n        /* \"#utility.yul\":17611:17658   */\n      mstore\n        /* \"#utility.yul\":17675:17806   */\n      tag_584\n        /* \"#utility.yul\":17801:17805   */\n      dup2\n        /* \"#utility.yul\":17675:17806   */\n      tag_399\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17667:17806   */\n      swap1\n      pop\n        /* \"#utility.yul\":17394:17813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17819:17993   */\n    tag_400:\n        /* \"#utility.yul\":17959:17985   */\n      0x496e73756666696369656e742072657761726420706f6f6c0000000000000000\n        /* \"#utility.yul\":17955:17956   */\n      0x00\n        /* \"#utility.yul\":17947:17953   */\n      dup3\n        /* \"#utility.yul\":17943:17957   */\n      add\n        /* \"#utility.yul\":17936:17986   */\n      mstore\n        /* \"#utility.yul\":17819:17993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17999:18365   */\n    tag_401:\n        /* \"#utility.yul\":18141:18144   */\n      0x00\n        /* \"#utility.yul\":18162:18229   */\n      tag_587\n        /* \"#utility.yul\":18226:18228   */\n      0x18\n        /* \"#utility.yul\":18221:18224   */\n      dup4\n        /* \"#utility.yul\":18162:18229   */\n      tag_385\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18155:18229   */\n      swap2\n      pop\n        /* \"#utility.yul\":18238:18331   */\n      tag_588\n        /* \"#utility.yul\":18327:18330   */\n      dup3\n        /* \"#utility.yul\":18238:18331   */\n      tag_400\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18356:18358   */\n      0x20\n        /* \"#utility.yul\":18351:18354   */\n      dup3\n        /* \"#utility.yul\":18347:18359   */\n      add\n        /* \"#utility.yul\":18340:18359   */\n      swap1\n      pop\n        /* \"#utility.yul\":17999:18365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18371:18790   */\n    tag_181:\n        /* \"#utility.yul\":18537:18541   */\n      0x00\n        /* \"#utility.yul\":18575:18577   */\n      0x20\n        /* \"#utility.yul\":18564:18573   */\n      dup3\n        /* \"#utility.yul\":18560:18578   */\n      add\n        /* \"#utility.yul\":18552:18578   */\n      swap1\n      pop\n        /* \"#utility.yul\":18624:18633   */\n      dup2\n        /* \"#utility.yul\":18618:18622   */\n      dup2\n        /* \"#utility.yul\":18614:18634   */\n      sub\n        /* \"#utility.yul\":18610:18611   */\n      0x00\n        /* \"#utility.yul\":18599:18608   */\n      dup4\n        /* \"#utility.yul\":18595:18612   */\n      add\n        /* \"#utility.yul\":18588:18635   */\n      mstore\n        /* \"#utility.yul\":18652:18783   */\n      tag_590\n        /* \"#utility.yul\":18778:18782   */\n      dup2\n        /* \"#utility.yul\":18652:18783   */\n      tag_401\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18644:18783   */\n      swap1\n      pop\n        /* \"#utility.yul\":18371:18790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18796:19128   */\n    tag_187:\n        /* \"#utility.yul\":18917:18921   */\n      0x00\n        /* \"#utility.yul\":18955:18957   */\n      0x40\n        /* \"#utility.yul\":18944:18953   */\n      dup3\n        /* \"#utility.yul\":18940:18958   */\n      add\n        /* \"#utility.yul\":18932:18958   */\n      swap1\n      pop\n        /* \"#utility.yul\":18968:19039   */\n      tag_592\n        /* \"#utility.yul\":19036:19037   */\n      0x00\n        /* \"#utility.yul\":19025:19034   */\n      dup4\n        /* \"#utility.yul\":19021:19038   */\n      add\n        /* \"#utility.yul\":19012:19018   */\n      dup6\n        /* \"#utility.yul\":18968:19039   */\n      tag_363\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19049:19121   */\n      tag_593\n        /* \"#utility.yul\":19117:19119   */\n      0x20\n        /* \"#utility.yul\":19106:19115   */\n      dup4\n        /* \"#utility.yul\":19102:19120   */\n      add\n        /* \"#utility.yul\":19093:19099   */\n      dup5\n        /* \"#utility.yul\":19049:19121   */\n      tag_363\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18796:19128   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19134:19304   */\n    tag_402:\n        /* \"#utility.yul\":19274:19296   */\n      0x496e76616c696420706572696f6420696e646578000000000000000000000000\n        /* \"#utility.yul\":19270:19271   */\n      0x00\n        /* \"#utility.yul\":19262:19268   */\n      dup3\n        /* \"#utility.yul\":19258:19272   */\n      add\n        /* \"#utility.yul\":19251:19297   */\n      mstore\n        /* \"#utility.yul\":19134:19304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19310:19676   */\n    tag_403:\n        /* \"#utility.yul\":19452:19455   */\n      0x00\n        /* \"#utility.yul\":19473:19540   */\n      tag_596\n        /* \"#utility.yul\":19537:19539   */\n      0x14\n        /* \"#utility.yul\":19532:19535   */\n      dup4\n        /* \"#utility.yul\":19473:19540   */\n      tag_385\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19466:19540   */\n      swap2\n      pop\n        /* \"#utility.yul\":19549:19642   */\n      tag_597\n        /* \"#utility.yul\":19638:19641   */\n      dup3\n        /* \"#utility.yul\":19549:19642   */\n      tag_402\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":19667:19669   */\n      0x20\n        /* \"#utility.yul\":19662:19665   */\n      dup3\n        /* \"#utility.yul\":19658:19670   */\n      add\n        /* \"#utility.yul\":19651:19670   */\n      swap1\n      pop\n        /* \"#utility.yul\":19310:19676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19682:20101   */\n    tag_200:\n        /* \"#utility.yul\":19848:19852   */\n      0x00\n        /* \"#utility.yul\":19886:19888   */\n      0x20\n        /* \"#utility.yul\":19875:19884   */\n      dup3\n        /* \"#utility.yul\":19871:19889   */\n      add\n        /* \"#utility.yul\":19863:19889   */\n      swap1\n      pop\n        /* \"#utility.yul\":19935:19944   */\n      dup2\n        /* \"#utility.yul\":19929:19933   */\n      dup2\n        /* \"#utility.yul\":19925:19945   */\n      sub\n        /* \"#utility.yul\":19921:19922   */\n      0x00\n        /* \"#utility.yul\":19910:19919   */\n      dup4\n        /* \"#utility.yul\":19906:19923   */\n      add\n        /* \"#utility.yul\":19899:19946   */\n      mstore\n        /* \"#utility.yul\":19963:20094   */\n      tag_599\n        /* \"#utility.yul\":20089:20093   */\n      dup2\n        /* \"#utility.yul\":19963:20094   */\n      tag_403\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19955:20094   */\n      swap1\n      pop\n        /* \"#utility.yul\":19682:20101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20107:20268   */\n    tag_404:\n        /* \"#utility.yul\":20247:20260   */\n      0x5a65726f20616d6f756e74000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20243:20244   */\n      0x00\n        /* \"#utility.yul\":20235:20241   */\n      dup3\n        /* \"#utility.yul\":20231:20245   */\n      add\n        /* \"#utility.yul\":20224:20261   */\n      mstore\n        /* \"#utility.yul\":20107:20268   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20274:20640   */\n    tag_405:\n        /* \"#utility.yul\":20416:20419   */\n      0x00\n        /* \"#utility.yul\":20437:20504   */\n      tag_602\n        /* \"#utility.yul\":20501:20503   */\n      0x0b\n        /* \"#utility.yul\":20496:20499   */\n      dup4\n        /* \"#utility.yul\":20437:20504   */\n      tag_385\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":20430:20504   */\n      swap2\n      pop\n        /* \"#utility.yul\":20513:20606   */\n      tag_603\n        /* \"#utility.yul\":20602:20605   */\n      dup3\n        /* \"#utility.yul\":20513:20606   */\n      tag_404\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20631:20633   */\n      0x20\n        /* \"#utility.yul\":20626:20629   */\n      dup3\n        /* \"#utility.yul\":20622:20634   */\n      add\n        /* \"#utility.yul\":20615:20634   */\n      swap1\n      pop\n        /* \"#utility.yul\":20274:20640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20646:21065   */\n    tag_203:\n        /* \"#utility.yul\":20812:20816   */\n      0x00\n        /* \"#utility.yul\":20850:20852   */\n      0x20\n        /* \"#utility.yul\":20839:20848   */\n      dup3\n        /* \"#utility.yul\":20835:20853   */\n      add\n        /* \"#utility.yul\":20827:20853   */\n      swap1\n      pop\n        /* \"#utility.yul\":20899:20908   */\n      dup2\n        /* \"#utility.yul\":20893:20897   */\n      dup2\n        /* \"#utility.yul\":20889:20909   */\n      sub\n        /* \"#utility.yul\":20885:20886   */\n      0x00\n        /* \"#utility.yul\":20874:20883   */\n      dup4\n        /* \"#utility.yul\":20870:20887   */\n      add\n        /* \"#utility.yul\":20863:20910   */\n      mstore\n        /* \"#utility.yul\":20927:21058   */\n      tag_605\n        /* \"#utility.yul\":21053:21057   */\n      dup2\n        /* \"#utility.yul\":20927:21058   */\n      tag_405\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":20919:21058   */\n      swap1\n      pop\n        /* \"#utility.yul\":20646:21065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21071:21501   */\n    tag_213:\n        /* \"#utility.yul\":21214:21218   */\n      0x00\n        /* \"#utility.yul\":21252:21254   */\n      0x60\n        /* \"#utility.yul\":21241:21250   */\n      dup3\n        /* \"#utility.yul\":21237:21255   */\n      add\n        /* \"#utility.yul\":21229:21255   */\n      swap1\n      pop\n        /* \"#utility.yul\":21265:21336   */\n      tag_607\n        /* \"#utility.yul\":21333:21334   */\n      0x00\n        /* \"#utility.yul\":21322:21331   */\n      dup4\n        /* \"#utility.yul\":21318:21335   */\n      add\n        /* \"#utility.yul\":21309:21315   */\n      dup7\n        /* \"#utility.yul\":21265:21336   */\n      tag_363\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":21346:21418   */\n      tag_608\n        /* \"#utility.yul\":21414:21416   */\n      0x20\n        /* \"#utility.yul\":21403:21412   */\n      dup4\n        /* \"#utility.yul\":21399:21417   */\n      add\n        /* \"#utility.yul\":21390:21396   */\n      dup6\n        /* \"#utility.yul\":21346:21418   */\n      tag_363\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21428:21494   */\n      tag_609\n        /* \"#utility.yul\":21490:21492   */\n      0x40\n        /* \"#utility.yul\":21479:21488   */\n      dup4\n        /* \"#utility.yul\":21475:21493   */\n      add\n        /* \"#utility.yul\":21466:21472   */\n      dup5\n        /* \"#utility.yul\":21428:21494   */\n      tag_378\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21071:21501   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21507:21669   */\n    tag_406:\n        /* \"#utility.yul\":21647:21661   */\n      0x41505920746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":21643:21644   */\n      0x00\n        /* \"#utility.yul\":21635:21641   */\n      dup3\n        /* \"#utility.yul\":21631:21645   */\n      add\n        /* \"#utility.yul\":21624:21662   */\n      mstore\n        /* \"#utility.yul\":21507:21669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21675:22041   */\n    tag_407:\n        /* \"#utility.yul\":21817:21820   */\n      0x00\n        /* \"#utility.yul\":21838:21905   */\n      tag_612\n        /* \"#utility.yul\":21902:21904   */\n      0x0c\n        /* \"#utility.yul\":21897:21900   */\n      dup4\n        /* \"#utility.yul\":21838:21905   */\n      tag_385\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21831:21905   */\n      swap2\n      pop\n        /* \"#utility.yul\":21914:22007   */\n      tag_613\n        /* \"#utility.yul\":22003:22006   */\n      dup3\n        /* \"#utility.yul\":21914:22007   */\n      tag_406\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":22032:22034   */\n      0x20\n        /* \"#utility.yul\":22027:22030   */\n      dup3\n        /* \"#utility.yul\":22023:22035   */\n      add\n        /* \"#utility.yul\":22016:22035   */\n      swap1\n      pop\n        /* \"#utility.yul\":21675:22041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22047:22466   */\n    tag_225:\n        /* \"#utility.yul\":22213:22217   */\n      0x00\n        /* \"#utility.yul\":22251:22253   */\n      0x20\n        /* \"#utility.yul\":22240:22249   */\n      dup3\n        /* \"#utility.yul\":22236:22254   */\n      add\n        /* \"#utility.yul\":22228:22254   */\n      swap1\n      pop\n        /* \"#utility.yul\":22300:22309   */\n      dup2\n        /* \"#utility.yul\":22294:22298   */\n      dup2\n        /* \"#utility.yul\":22290:22310   */\n      sub\n        /* \"#utility.yul\":22286:22287   */\n      0x00\n        /* \"#utility.yul\":22275:22284   */\n      dup4\n        /* \"#utility.yul\":22271:22288   */\n      add\n        /* \"#utility.yul\":22264:22311   */\n      mstore\n        /* \"#utility.yul\":22328:22459   */\n      tag_615\n        /* \"#utility.yul\":22454:22458   */\n      dup2\n        /* \"#utility.yul\":22328:22459   */\n      tag_407\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":22320:22459   */\n      swap1\n      pop\n        /* \"#utility.yul\":22047:22466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22472:22792   */\n    tag_247:\n        /* \"#utility.yul\":22587:22591   */\n      0x00\n        /* \"#utility.yul\":22625:22627   */\n      0x40\n        /* \"#utility.yul\":22614:22623   */\n      dup3\n        /* \"#utility.yul\":22610:22628   */\n      add\n        /* \"#utility.yul\":22602:22628   */\n      swap1\n      pop\n        /* \"#utility.yul\":22638:22709   */\n      tag_617\n        /* \"#utility.yul\":22706:22707   */\n      0x00\n        /* \"#utility.yul\":22695:22704   */\n      dup4\n        /* \"#utility.yul\":22691:22708   */\n      add\n        /* \"#utility.yul\":22682:22688   */\n      dup6\n        /* \"#utility.yul\":22638:22709   */\n      tag_363\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":22719:22785   */\n      tag_618\n        /* \"#utility.yul\":22781:22783   */\n      0x20\n        /* \"#utility.yul\":22770:22779   */\n      dup4\n        /* \"#utility.yul\":22766:22784   */\n      add\n        /* \"#utility.yul\":22757:22763   */\n      dup5\n        /* \"#utility.yul\":22719:22785   */\n      tag_378\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":22472:22792   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22798:22968   */\n    tag_408:\n        /* \"#utility.yul\":22938:22960   */\n      0x496e76616c696420666565207265636569766572000000000000000000000000\n        /* \"#utility.yul\":22934:22935   */\n      0x00\n        /* \"#utility.yul\":22926:22932   */\n      dup3\n        /* \"#utility.yul\":22922:22936   */\n      add\n        /* \"#utility.yul\":22915:22961   */\n      mstore\n        /* \"#utility.yul\":22798:22968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22974:23340   */\n    tag_409:\n        /* \"#utility.yul\":23116:23119   */\n      0x00\n        /* \"#utility.yul\":23137:23204   */\n      tag_621\n        /* \"#utility.yul\":23201:23203   */\n      0x14\n        /* \"#utility.yul\":23196:23199   */\n      dup4\n        /* \"#utility.yul\":23137:23204   */\n      tag_385\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":23130:23204   */\n      swap2\n      pop\n        /* \"#utility.yul\":23213:23306   */\n      tag_622\n        /* \"#utility.yul\":23302:23305   */\n      dup3\n        /* \"#utility.yul\":23213:23306   */\n      tag_408\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":23331:23333   */\n      0x20\n        /* \"#utility.yul\":23326:23329   */\n      dup3\n        /* \"#utility.yul\":23322:23334   */\n      add\n        /* \"#utility.yul\":23315:23334   */\n      swap1\n      pop\n        /* \"#utility.yul\":22974:23340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23346:23765   */\n    tag_293:\n        /* \"#utility.yul\":23512:23516   */\n      0x00\n        /* \"#utility.yul\":23550:23552   */\n      0x20\n        /* \"#utility.yul\":23539:23548   */\n      dup3\n        /* \"#utility.yul\":23535:23553   */\n      add\n        /* \"#utility.yul\":23527:23553   */\n      swap1\n      pop\n        /* \"#utility.yul\":23599:23608   */\n      dup2\n        /* \"#utility.yul\":23593:23597   */\n      dup2\n        /* \"#utility.yul\":23589:23609   */\n      sub\n        /* \"#utility.yul\":23585:23586   */\n      0x00\n        /* \"#utility.yul\":23574:23583   */\n      dup4\n        /* \"#utility.yul\":23570:23587   */\n      add\n        /* \"#utility.yul\":23563:23610   */\n      mstore\n        /* \"#utility.yul\":23627:23758   */\n      tag_624\n        /* \"#utility.yul\":23753:23757   */\n      dup2\n        /* \"#utility.yul\":23627:23758   */\n      tag_409\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":23619:23758   */\n      swap1\n      pop\n        /* \"#utility.yul\":23346:23765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23771:23943   */\n    tag_410:\n        /* \"#utility.yul\":23911:23935   */\n      0x4e6f207265776172647320746f20776974686472617700000000000000000000\n        /* \"#utility.yul\":23907:23908   */\n      0x00\n        /* \"#utility.yul\":23899:23905   */\n      dup3\n        /* \"#utility.yul\":23895:23909   */\n      add\n        /* \"#utility.yul\":23888:23936   */\n      mstore\n        /* \"#utility.yul\":23771:23943   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23949:24315   */\n    tag_411:\n        /* \"#utility.yul\":24091:24094   */\n      0x00\n        /* \"#utility.yul\":24112:24179   */\n      tag_627\n        /* \"#utility.yul\":24176:24178   */\n      0x16\n        /* \"#utility.yul\":24171:24174   */\n      dup4\n        /* \"#utility.yul\":24112:24179   */\n      tag_385\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":24105:24179   */\n      swap2\n      pop\n        /* \"#utility.yul\":24188:24281   */\n      tag_628\n        /* \"#utility.yul\":24277:24280   */\n      dup3\n        /* \"#utility.yul\":24188:24281   */\n      tag_410\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":24306:24308   */\n      0x20\n        /* \"#utility.yul\":24301:24304   */\n      dup3\n        /* \"#utility.yul\":24297:24309   */\n      add\n        /* \"#utility.yul\":24290:24309   */\n      swap1\n      pop\n        /* \"#utility.yul\":23949:24315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24321:24740   */\n    tag_299:\n        /* \"#utility.yul\":24487:24491   */\n      0x00\n        /* \"#utility.yul\":24525:24527   */\n      0x20\n        /* \"#utility.yul\":24514:24523   */\n      dup3\n        /* \"#utility.yul\":24510:24528   */\n      add\n        /* \"#utility.yul\":24502:24528   */\n      swap1\n      pop\n        /* \"#utility.yul\":24574:24583   */\n      dup2\n        /* \"#utility.yul\":24568:24572   */\n      dup2\n        /* \"#utility.yul\":24564:24584   */\n      sub\n        /* \"#utility.yul\":24560:24561   */\n      0x00\n        /* \"#utility.yul\":24549:24558   */\n      dup4\n        /* \"#utility.yul\":24545:24562   */\n      add\n        /* \"#utility.yul\":24538:24585   */\n      mstore\n        /* \"#utility.yul\":24602:24733   */\n      tag_630\n        /* \"#utility.yul\":24728:24732   */\n      dup2\n        /* \"#utility.yul\":24602:24733   */\n      tag_411\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":24594:24733   */\n      swap1\n      pop\n        /* \"#utility.yul\":24321:24740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24746:24916   */\n    tag_412:\n        /* \"#utility.yul\":24886:24908   */\n      0x496e76616c69642072657761726420746f6b656e000000000000000000000000\n        /* \"#utility.yul\":24882:24883   */\n      0x00\n        /* \"#utility.yul\":24874:24880   */\n      dup3\n        /* \"#utility.yul\":24870:24884   */\n      add\n        /* \"#utility.yul\":24863:24909   */\n      mstore\n        /* \"#utility.yul\":24746:24916   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24922:25288   */\n    tag_413:\n        /* \"#utility.yul\":25064:25067   */\n      0x00\n        /* \"#utility.yul\":25085:25152   */\n      tag_633\n        /* \"#utility.yul\":25149:25151   */\n      0x14\n        /* \"#utility.yul\":25144:25147   */\n      dup4\n        /* \"#utility.yul\":25085:25152   */\n      tag_385\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":25078:25152   */\n      swap2\n      pop\n        /* \"#utility.yul\":25161:25254   */\n      tag_634\n        /* \"#utility.yul\":25250:25253   */\n      dup3\n        /* \"#utility.yul\":25161:25254   */\n      tag_412\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":25279:25281   */\n      0x20\n        /* \"#utility.yul\":25274:25277   */\n      dup3\n        /* \"#utility.yul\":25270:25282   */\n      add\n        /* \"#utility.yul\":25263:25282   */\n      swap1\n      pop\n        /* \"#utility.yul\":24922:25288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25294:25713   */\n    tag_315:\n        /* \"#utility.yul\":25460:25464   */\n      0x00\n        /* \"#utility.yul\":25498:25500   */\n      0x20\n        /* \"#utility.yul\":25487:25496   */\n      dup3\n        /* \"#utility.yul\":25483:25501   */\n      add\n        /* \"#utility.yul\":25475:25501   */\n      swap1\n      pop\n        /* \"#utility.yul\":25547:25556   */\n      dup2\n        /* \"#utility.yul\":25541:25545   */\n      dup2\n        /* \"#utility.yul\":25537:25557   */\n      sub\n        /* \"#utility.yul\":25533:25534   */\n      0x00\n        /* \"#utility.yul\":25522:25531   */\n      dup4\n        /* \"#utility.yul\":25518:25535   */\n      add\n        /* \"#utility.yul\":25511:25558   */\n      mstore\n        /* \"#utility.yul\":25575:25706   */\n      tag_636\n        /* \"#utility.yul\":25701:25705   */\n      dup2\n        /* \"#utility.yul\":25575:25706   */\n      tag_413\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":25567:25706   */\n      swap1\n      pop\n        /* \"#utility.yul\":25294:25713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25719:25892   */\n    tag_414:\n        /* \"#utility.yul\":25859:25884   */\n      0x556e737570706f72746564206c6f636b20706572696f64000000000000000000\n        /* \"#utility.yul\":25855:25856   */\n      0x00\n        /* \"#utility.yul\":25847:25853   */\n      dup3\n        /* \"#utility.yul\":25843:25857   */\n      add\n        /* \"#utility.yul\":25836:25885   */\n      mstore\n        /* \"#utility.yul\":25719:25892   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25898:26264   */\n    tag_415:\n        /* \"#utility.yul\":26040:26043   */\n      0x00\n        /* \"#utility.yul\":26061:26128   */\n      tag_639\n        /* \"#utility.yul\":26125:26127   */\n      0x17\n        /* \"#utility.yul\":26120:26123   */\n      dup4\n        /* \"#utility.yul\":26061:26128   */\n      tag_385\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":26054:26128   */\n      swap2\n      pop\n        /* \"#utility.yul\":26137:26230   */\n      tag_640\n        /* \"#utility.yul\":26226:26229   */\n      dup3\n        /* \"#utility.yul\":26137:26230   */\n      tag_414\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":26255:26257   */\n      0x20\n        /* \"#utility.yul\":26250:26253   */\n      dup3\n        /* \"#utility.yul\":26246:26258   */\n      add\n        /* \"#utility.yul\":26239:26258   */\n      swap1\n      pop\n        /* \"#utility.yul\":25898:26264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26270:26689   */\n    tag_325:\n        /* \"#utility.yul\":26436:26440   */\n      0x00\n        /* \"#utility.yul\":26474:26476   */\n      0x20\n        /* \"#utility.yul\":26463:26472   */\n      dup3\n        /* \"#utility.yul\":26459:26477   */\n      add\n        /* \"#utility.yul\":26451:26477   */\n      swap1\n      pop\n        /* \"#utility.yul\":26523:26532   */\n      dup2\n        /* \"#utility.yul\":26517:26521   */\n      dup2\n        /* \"#utility.yul\":26513:26533   */\n      sub\n        /* \"#utility.yul\":26509:26510   */\n      0x00\n        /* \"#utility.yul\":26498:26507   */\n      dup4\n        /* \"#utility.yul\":26494:26511   */\n      add\n        /* \"#utility.yul\":26487:26534   */\n      mstore\n        /* \"#utility.yul\":26551:26682   */\n      tag_642\n        /* \"#utility.yul\":26677:26681   */\n      dup2\n        /* \"#utility.yul\":26551:26682   */\n      tag_415\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":26543:26682   */\n      swap1\n      pop\n        /* \"#utility.yul\":26270:26689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26695:26876   */\n    tag_416:\n        /* \"#utility.yul\":26835:26868   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":26831:26832   */\n      0x00\n        /* \"#utility.yul\":26823:26829   */\n      dup3\n        /* \"#utility.yul\":26819:26833   */\n      add\n        /* \"#utility.yul\":26812:26869   */\n      mstore\n        /* \"#utility.yul\":26695:26876   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26882:27248   */\n    tag_417:\n        /* \"#utility.yul\":27024:27027   */\n      0x00\n        /* \"#utility.yul\":27045:27112   */\n      tag_645\n        /* \"#utility.yul\":27109:27111   */\n      0x1f\n        /* \"#utility.yul\":27104:27107   */\n      dup4\n        /* \"#utility.yul\":27045:27112   */\n      tag_385\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":27038:27112   */\n      swap2\n      pop\n        /* \"#utility.yul\":27121:27214   */\n      tag_646\n        /* \"#utility.yul\":27210:27213   */\n      dup3\n        /* \"#utility.yul\":27121:27214   */\n      tag_416\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":27239:27241   */\n      0x20\n        /* \"#utility.yul\":27234:27237   */\n      dup3\n        /* \"#utility.yul\":27230:27242   */\n      add\n        /* \"#utility.yul\":27223:27242   */\n      swap1\n      pop\n        /* \"#utility.yul\":26882:27248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27254:27673   */\n    tag_329:\n        /* \"#utility.yul\":27420:27424   */\n      0x00\n        /* \"#utility.yul\":27458:27460   */\n      0x20\n        /* \"#utility.yul\":27447:27456   */\n      dup3\n        /* \"#utility.yul\":27443:27461   */\n      add\n        /* \"#utility.yul\":27435:27461   */\n      swap1\n      pop\n        /* \"#utility.yul\":27507:27516   */\n      dup2\n        /* \"#utility.yul\":27501:27505   */\n      dup2\n        /* \"#utility.yul\":27497:27517   */\n      sub\n        /* \"#utility.yul\":27493:27494   */\n      0x00\n        /* \"#utility.yul\":27482:27491   */\n      dup4\n        /* \"#utility.yul\":27478:27495   */\n      add\n        /* \"#utility.yul\":27471:27518   */\n      mstore\n        /* \"#utility.yul\":27535:27666   */\n      tag_648\n        /* \"#utility.yul\":27661:27665   */\n      dup2\n        /* \"#utility.yul\":27535:27666   */\n      tag_417\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":27527:27666   */\n      swap1\n      pop\n        /* \"#utility.yul\":27254:27673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27679:28121   */\n    tag_334:\n        /* \"#utility.yul\":27828:27832   */\n      0x00\n        /* \"#utility.yul\":27866:27868   */\n      0x60\n        /* \"#utility.yul\":27855:27864   */\n      dup3\n        /* \"#utility.yul\":27851:27869   */\n      add\n        /* \"#utility.yul\":27843:27869   */\n      swap1\n      pop\n        /* \"#utility.yul\":27879:27950   */\n      tag_650\n        /* \"#utility.yul\":27947:27948   */\n      0x00\n        /* \"#utility.yul\":27936:27945   */\n      dup4\n        /* \"#utility.yul\":27932:27949   */\n      add\n        /* \"#utility.yul\":27923:27929   */\n      dup7\n        /* \"#utility.yul\":27879:27950   */\n      tag_384\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":27960:28032   */\n      tag_651\n        /* \"#utility.yul\":28028:28030   */\n      0x20\n        /* \"#utility.yul\":28017:28026   */\n      dup4\n        /* \"#utility.yul\":28013:28031   */\n      add\n        /* \"#utility.yul\":28004:28010   */\n      dup6\n        /* \"#utility.yul\":27960:28032   */\n      tag_384\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":28042:28114   */\n      tag_652\n        /* \"#utility.yul\":28110:28112   */\n      0x40\n        /* \"#utility.yul\":28099:28108   */\n      dup4\n        /* \"#utility.yul\":28095:28113   */\n      add\n        /* \"#utility.yul\":28086:28092   */\n      dup5\n        /* \"#utility.yul\":28042:28114   */\n      tag_363\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":27679:28121   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28127:28459   */\n    tag_347:\n        /* \"#utility.yul\":28248:28252   */\n      0x00\n        /* \"#utility.yul\":28286:28288   */\n      0x40\n        /* \"#utility.yul\":28275:28284   */\n      dup3\n        /* \"#utility.yul\":28271:28289   */\n      add\n        /* \"#utility.yul\":28263:28289   */\n      swap1\n      pop\n        /* \"#utility.yul\":28299:28370   */\n      tag_654\n        /* \"#utility.yul\":28367:28368   */\n      0x00\n        /* \"#utility.yul\":28356:28365   */\n      dup4\n        /* \"#utility.yul\":28352:28369   */\n      add\n        /* \"#utility.yul\":28343:28349   */\n      dup6\n        /* \"#utility.yul\":28299:28370   */\n      tag_384\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":28380:28452   */\n      tag_655\n        /* \"#utility.yul\":28448:28450   */\n      0x20\n        /* \"#utility.yul\":28437:28446   */\n      dup4\n        /* \"#utility.yul\":28433:28451   */\n      add\n        /* \"#utility.yul\":28424:28430   */\n      dup5\n        /* \"#utility.yul\":28380:28452   */\n      tag_363\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":28127:28459   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220840ed1e62aa496d3cccabd3f402c8eaf5f6286f2dd4afaa18e99ad91fe4f86f564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 833,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4958:10",
										"nodeType": "YulBlock",
										"src": "0:4958:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "956:552:10",
													"nodeType": "YulBlock",
													"src": "956:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:10",
																"nodeType": "YulBlock",
																"src": "1002:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:10"
																			},
																			"nativeSrc": "1004:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:10"
																		},
																		"nativeSrc": "1004:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:10"
																		},
																		"nativeSrc": "973:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:10"
																},
																"nativeSrc": "969:32:10",
																"nodeType": "YulFunctionCall",
																"src": "969:32:10"
															},
															"nativeSrc": "966:119:10",
															"nodeType": "YulIf",
															"src": "966:119:10"
														},
														{
															"nativeSrc": "1095:128:10",
															"nodeType": "YulBlock",
															"src": "1095:128:10",
															"statements": [
																{
																	"nativeSrc": "1110:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:10"
																				},
																				"nativeSrc": "1181:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:10"
																		},
																		"nativeSrc": "1149:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:10",
															"nodeType": "YulBlock",
															"src": "1233:129:10",
															"statements": [
																{
																	"nativeSrc": "1248:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:10"
																				},
																				"nativeSrc": "1320:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:10"
																		},
																		"nativeSrc": "1288:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:10",
															"nodeType": "YulBlock",
															"src": "1372:129:10",
															"statements": [
																{
																	"nativeSrc": "1387:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:10"
																				},
																				"nativeSrc": "1459:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:10"
																		},
																		"nativeSrc": "1427:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:10",
														"nodeType": "YulTypedName",
														"src": "910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:10",
														"nodeType": "YulTypedName",
														"src": "921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:10",
														"nodeType": "YulTypedName",
														"src": "933:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:10",
														"nodeType": "YulTypedName",
														"src": "941:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:10",
														"nodeType": "YulTypedName",
														"src": "949:6:10",
														"type": ""
													}
												],
												"src": "845:663:10"
											},
											{
												"body": {
													"nativeSrc": "1579:53:10",
													"nodeType": "YulBlock",
													"src": "1579:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:10"
																		},
																		"nativeSrc": "1601:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																},
																"nativeSrc": "1589:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:10"
															},
															"nativeSrc": "1589:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:10",
														"nodeType": "YulTypedName",
														"src": "1567:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:10",
														"nodeType": "YulTypedName",
														"src": "1574:3:10",
														"type": ""
													}
												],
												"src": "1514:118:10"
											},
											{
												"body": {
													"nativeSrc": "1736:124:10",
													"nodeType": "YulBlock",
													"src": "1736:124:10",
													"statements": [
														{
															"nativeSrc": "1746:26:10",
															"nodeType": "YulAssignment",
															"src": "1746:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:10"
																},
																"nativeSrc": "1754:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:10"
																		},
																		"nativeSrc": "1835:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:10"
																},
																"nativeSrc": "1782:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:10"
															},
															"nativeSrc": "1782:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:10",
														"nodeType": "YulTypedName",
														"src": "1708:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:10",
														"nodeType": "YulTypedName",
														"src": "1720:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:10",
														"nodeType": "YulTypedName",
														"src": "1731:4:10",
														"type": ""
													}
												],
												"src": "1638:222:10"
											},
											{
												"body": {
													"nativeSrc": "1962:73:10",
													"nodeType": "YulBlock",
													"src": "1962:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1979:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1979:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1984:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:10"
																},
																"nativeSrc": "1972:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1972:19:10"
															},
															"nativeSrc": "1972:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1972:19:10"
														},
														{
															"nativeSrc": "2000:29:10",
															"nodeType": "YulAssignment",
															"src": "2000:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2019:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2015:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:10"
																},
																"nativeSrc": "2015:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2015:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2000:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2000:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1866:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1934:3:10",
														"nodeType": "YulTypedName",
														"src": "1934:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1939:6:10",
														"nodeType": "YulTypedName",
														"src": "1939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1950:11:10",
														"nodeType": "YulTypedName",
														"src": "1950:11:10",
														"type": ""
													}
												],
												"src": "1866:169:10"
											},
											{
												"body": {
													"nativeSrc": "2147:65:10",
													"nodeType": "YulBlock",
													"src": "2147:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2169:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2177:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2177:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:10"
																		},
																		"nativeSrc": "2165:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2165:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
																		"kind": "string",
																		"nativeSrc": "2181:23:10",
																		"nodeType": "YulLiteral",
																		"src": "2181:23:10",
																		"type": "",
																		"value": "Invalid staking token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2158:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:10"
																},
																"nativeSrc": "2158:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2158:47:10"
															},
															"nativeSrc": "2158:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2158:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
												"nativeSrc": "2041:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2139:6:10",
														"nodeType": "YulTypedName",
														"src": "2139:6:10",
														"type": ""
													}
												],
												"src": "2041:171:10"
											},
											{
												"body": {
													"nativeSrc": "2364:220:10",
													"nodeType": "YulBlock",
													"src": "2364:220:10",
													"statements": [
														{
															"nativeSrc": "2374:74:10",
															"nodeType": "YulAssignment",
															"src": "2374:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2440:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2440:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2445:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2381:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2381:58:10"
																},
																"nativeSrc": "2381:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2381:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2546:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																	"nativeSrc": "2457:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2457:88:10"
																},
																"nativeSrc": "2457:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2457:93:10"
															},
															"nativeSrc": "2457:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2457:93:10"
														},
														{
															"nativeSrc": "2559:19:10",
															"nodeType": "YulAssignment",
															"src": "2559:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2570:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2566:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:10"
																},
																"nativeSrc": "2566:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2566:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2559:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2218:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2352:3:10",
														"nodeType": "YulTypedName",
														"src": "2352:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2360:3:10",
														"nodeType": "YulTypedName",
														"src": "2360:3:10",
														"type": ""
													}
												],
												"src": "2218:366:10"
											},
											{
												"body": {
													"nativeSrc": "2761:248:10",
													"nodeType": "YulBlock",
													"src": "2761:248:10",
													"statements": [
														{
															"nativeSrc": "2771:26:10",
															"nodeType": "YulAssignment",
															"src": "2771:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2783:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2779:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:10"
																},
																"nativeSrc": "2779:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2771:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2771:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2818:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2829:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2814:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:10"
																		},
																		"nativeSrc": "2814:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2814:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2837:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2837:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2843:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:10"
																		},
																		"nativeSrc": "2833:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2807:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:10"
																},
																"nativeSrc": "2807:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2807:47:10"
															},
															"nativeSrc": "2807:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2807:47:10"
														},
														{
															"nativeSrc": "2863:139:10",
															"nodeType": "YulAssignment",
															"src": "2863:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2997:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2997:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2871:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2871:124:10"
																},
																"nativeSrc": "2871:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2871:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2863:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2590:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2741:9:10",
														"nodeType": "YulTypedName",
														"src": "2741:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2756:4:10",
														"nodeType": "YulTypedName",
														"src": "2756:4:10",
														"type": ""
													}
												],
												"src": "2590:419:10"
											},
											{
												"body": {
													"nativeSrc": "3121:64:10",
													"nodeType": "YulBlock",
													"src": "3121:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3151:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3151:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3139:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:10"
																		},
																		"nativeSrc": "3139:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "3155:22:10",
																		"nodeType": "YulLiteral",
																		"src": "3155:22:10",
																		"type": "",
																		"value": "Invalid reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:10"
																},
																"nativeSrc": "3132:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3132:46:10"
															},
															"nativeSrc": "3132:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3132:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
												"nativeSrc": "3015:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3113:6:10",
														"nodeType": "YulTypedName",
														"src": "3113:6:10",
														"type": ""
													}
												],
												"src": "3015:170:10"
											},
											{
												"body": {
													"nativeSrc": "3337:220:10",
													"nodeType": "YulBlock",
													"src": "3337:220:10",
													"statements": [
														{
															"nativeSrc": "3347:74:10",
															"nodeType": "YulAssignment",
															"src": "3347:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3418:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3418:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3354:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3354:58:10"
																},
																"nativeSrc": "3354:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3354:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3347:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3519:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3519:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																	"nativeSrc": "3430:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3430:88:10"
																},
																"nativeSrc": "3430:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3430:93:10"
															},
															"nativeSrc": "3430:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3430:93:10"
														},
														{
															"nativeSrc": "3532:19:10",
															"nodeType": "YulAssignment",
															"src": "3532:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:10"
																},
																"nativeSrc": "3539:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3539:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3532:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3191:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3325:3:10",
														"nodeType": "YulTypedName",
														"src": "3325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3333:3:10",
														"nodeType": "YulTypedName",
														"src": "3333:3:10",
														"type": ""
													}
												],
												"src": "3191:366:10"
											},
											{
												"body": {
													"nativeSrc": "3734:248:10",
													"nodeType": "YulBlock",
													"src": "3734:248:10",
													"statements": [
														{
															"nativeSrc": "3744:26:10",
															"nodeType": "YulAssignment",
															"src": "3744:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3756:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3756:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3767:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3752:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:10"
																},
																"nativeSrc": "3752:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3752:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3744:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3744:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3791:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3802:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3802:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:10"
																		},
																		"nativeSrc": "3787:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3810:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3810:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3816:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3816:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:10"
																		},
																		"nativeSrc": "3806:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:10"
																},
																"nativeSrc": "3780:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3780:47:10"
															},
															"nativeSrc": "3780:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3780:47:10"
														},
														{
															"nativeSrc": "3836:139:10",
															"nodeType": "YulAssignment",
															"src": "3836:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3970:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3970:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3844:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3844:124:10"
																},
																"nativeSrc": "3844:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3844:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3836:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3563:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3714:9:10",
														"nodeType": "YulTypedName",
														"src": "3714:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3729:4:10",
														"nodeType": "YulTypedName",
														"src": "3729:4:10",
														"type": ""
													}
												],
												"src": "3563:419:10"
											},
											{
												"body": {
													"nativeSrc": "4094:64:10",
													"nodeType": "YulBlock",
													"src": "4094:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4116:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4116:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4124:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4124:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:3:10"
																		},
																		"nativeSrc": "4112:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420666565207265636569766572",
																		"kind": "string",
																		"nativeSrc": "4128:22:10",
																		"nodeType": "YulLiteral",
																		"src": "4128:22:10",
																		"type": "",
																		"value": "Invalid fee receiver"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4105:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:10"
																},
																"nativeSrc": "4105:46:10",
																"nodeType": "YulFunctionCall",
																"src": "4105:46:10"
															},
															"nativeSrc": "4105:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "4105:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
												"nativeSrc": "3988:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4086:6:10",
														"nodeType": "YulTypedName",
														"src": "4086:6:10",
														"type": ""
													}
												],
												"src": "3988:170:10"
											},
											{
												"body": {
													"nativeSrc": "4310:220:10",
													"nodeType": "YulBlock",
													"src": "4310:220:10",
													"statements": [
														{
															"nativeSrc": "4320:74:10",
															"nodeType": "YulAssignment",
															"src": "4320:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4386:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4386:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4327:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4327:58:10"
																},
																"nativeSrc": "4327:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4327:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4320:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4320:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4492:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																	"nativeSrc": "4403:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4403:88:10"
																},
																"nativeSrc": "4403:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4403:93:10"
															},
															"nativeSrc": "4403:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4403:93:10"
														},
														{
															"nativeSrc": "4505:19:10",
															"nodeType": "YulAssignment",
															"src": "4505:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4516:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4516:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4521:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4512:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:10"
																},
																"nativeSrc": "4512:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4512:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4164:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4298:3:10",
														"nodeType": "YulTypedName",
														"src": "4298:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4306:3:10",
														"nodeType": "YulTypedName",
														"src": "4306:3:10",
														"type": ""
													}
												],
												"src": "4164:366:10"
											},
											{
												"body": {
													"nativeSrc": "4707:248:10",
													"nodeType": "YulBlock",
													"src": "4707:248:10",
													"statements": [
														{
															"nativeSrc": "4717:26:10",
															"nodeType": "YulAssignment",
															"src": "4717:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4729:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4725:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:10"
																},
																"nativeSrc": "4725:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4725:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4717:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4760:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4760:3:10"
																		},
																		"nativeSrc": "4760:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4760:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4783:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4783:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4789:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4789:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4779:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:10"
																		},
																		"nativeSrc": "4779:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:10"
																},
																"nativeSrc": "4753:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4753:47:10"
															},
															"nativeSrc": "4753:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4753:47:10"
														},
														{
															"nativeSrc": "4809:139:10",
															"nodeType": "YulAssignment",
															"src": "4809:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4943:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4943:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4817:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4817:124:10"
																},
																"nativeSrc": "4817:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4817:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4809:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4809:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4536:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4687:9:10",
														"nodeType": "YulTypedName",
														"src": "4687:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4702:4:10",
														"nodeType": "YulTypedName",
														"src": "4702:4:10",
														"type": ""
													}
												],
												"src": "4536:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid staking token\")\n\n    }\n\n    function abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee receiver\")\n\n    }\n\n    function abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x278D00 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4F1A00 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x76A700 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 SWAP1 PUSH1 0x3 PUSH2 0x47 SWAP3 SWAP2 SWAP1 PUSH2 0x402 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5DC PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH1 0x7 SWAP1 PUSH1 0x3 PUSH2 0x85 SWAP3 SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x33B6 CODESIZE SUB DUP1 PUSH2 0x33B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x508 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x133 DUP2 PUSH2 0x341 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x6C8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x438 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x437 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH3 0xFFFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x3 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x47E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x47D JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x45C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x490 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP2 EQ PUSH2 0x4F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x502 DUP2 PUSH2 0x4DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52C DUP7 DUP3 DUP8 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x53D DUP7 DUP3 DUP8 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x54E DUP7 DUP3 DUP8 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x561 DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x57A PUSH0 DUP4 ADD DUP5 PUSH2 0x558 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720746F6B656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C4 PUSH1 0x15 DUP4 PUSH2 0x580 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CF DUP3 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F1 DUP2 PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x62C PUSH1 0x14 DUP4 PUSH2 0x580 JUMP JUMPDEST SWAP2 POP PUSH2 0x637 DUP3 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x659 DUP2 PUSH2 0x620 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420666565207265636569766572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x694 PUSH1 0x14 DUP4 PUSH2 0x580 JUMP JUMPDEST SWAP2 POP PUSH2 0x69F DUP3 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6C1 DUP2 PUSH2 0x688 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2CCF PUSH2 0x6E7 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xCDC ADD MSTORE PUSH2 0x1038 ADD MSTORE PUSH2 0x2CCF PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A5C08AE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBBD36B61 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE6A69AB8 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x47E JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBBD36B61 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xC69BEBE4 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x41C JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x7A5C08AE EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95A29060 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3C6 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x561B2463 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x561B2463 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x5ACD2E4C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x6B494DEF EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x316 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x630E463 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1747E0B0 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x38BCEAAC EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4060E257 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x4C8F2A78 EQ PUSH2 0x23F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0xBD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x1023 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x23F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x16F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x17DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH2 0x18D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x23F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1AFA JUMP JUMPDEST STOP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x599 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x50D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP1 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68C SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x796 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD DUP1 ISZERO PUSH2 0x7B7 JUMPI POP DUP1 TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x7C0 JUMPI TIMESTAMP SWAP1 POP JUMPDEST PUSH0 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7F0 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x806 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD SLOAD SWAP1 POP PUSH0 DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH0 ADD MLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST DUP5 DUP4 DUP4 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x86F PUSH2 0x1C78 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D4 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9B3 JUMPI PUSH2 0x9B2 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAB5 DUP4 DUP6 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST TIMESTAMP PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x593662CBE53E88DF3FEF748665B8C3D3142E5D34DC1B24290F7E953537A00183 DUP6 DUP5 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xBAA SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xBBD PUSH2 0x1CC7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xBCF JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBE1 PUSH2 0x1C78 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCB SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD21 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CD0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD SLOAD TIMESTAMP PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP4 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3DF45CB339F96AE4BDB793EFCB6E22100DD0DC4FD739A4EE2033FE67EA35AF96 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xEB3 PUSH2 0x1CC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xED1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0xF2B PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xF6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x29F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xFC8 JUMPI PUSH2 0xFC7 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH32 0x787A1FCA55641CE34A438271930BBB9401DF20DB2B4F510D4F252227D85DF43D DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFFE SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1019 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x102B PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1034 PUSH0 PUSH2 0x1DD9 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110A SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1163 JUMPI PUSH2 0x1162 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B9 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA2D7B35E7CC82247C5AE7E8AE2DC078C2B144B76A6B1068887B3C8892C15DA5 DUP5 DUP4 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1249 SWAP3 SWAP2 SWAP1 PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x125E PUSH2 0x1C78 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1349 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13A2 JUMPI PUSH2 0x13A1 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F8 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143F SWAP1 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1453 DUP4 DUP6 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1491 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14D7 JUMPI POP PUSH0 DUP3 PUSH1 0x4 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x1602 JUMPI PUSH0 DUP2 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x32 DUP4 PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1519 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x166E JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x16B6 SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x16C9 PUSH2 0x1CC7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1732 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1789 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CD0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x21D99275A51DF78F567D33E4B0C6EA547B7675BCE0EAB2CCCA69E131BF047ABE DUP2 PUSH1 0x40 MLOAD PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x17E3 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1851 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1848 SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x18DF PUSH2 0x1C78 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1959 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19F0 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E9A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBD1EA9966F82CCB966523D3922A6E4AD4BF3EA70E9201BD7A106DE847CC5E616 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1A47 PUSH2 0x1CC7 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x1A59 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC0 SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD2 DUP2 PUSH2 0x1DD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B02 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B67 SWAP1 PUSH2 0x2B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5289BA11778999F4DFB9415023783188D42BBB5DB0612CBFBE55999069612A0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x4 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 SUB PUSH2 0x1C2A JUMPI DUP1 SWAP2 POP POP PUSH2 0x1C73 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1BFC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6A SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1CBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB4 SWAP1 PUSH2 0x2C1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D4C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F19 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D5A PUSH2 0x1FB4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D78 PUSH2 0x1066 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DD7 JUMPI PUSH2 0x1D9B PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1F14 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1ECD SWAP3 SWAP2 SWAP1 PUSH2 0x2C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F19 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1F51 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F6C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FAE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA5 SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE8 DUP3 PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2002 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2013 DUP2 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH2 0x202D PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x203B DUP5 DUP3 DUP6 ADD PUSH2 0x2005 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2056 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206F PUSH0 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A7 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x20AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x20DB PUSH0 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x20EE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2101 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2114 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x20B8 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2127 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x20B8 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x213A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214B DUP4 DUP4 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x216D DUP3 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x2177 DUP2 DUP6 PUSH2 0x207F JUMP JUMPDEST SWAP4 POP PUSH2 0x2182 DUP4 PUSH2 0x208F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B2 JUMPI DUP2 MLOAD PUSH2 0x2199 DUP9 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP8 POP PUSH2 0x21A4 DUP4 PUSH2 0x2157 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2185 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D7 DUP2 DUP5 PUSH2 0x2163 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E8 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2203 DUP2 PUSH2 0x21DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x221F JUMPI PUSH2 0x221E PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222C DUP6 DUP3 DUP7 ADD PUSH2 0x2005 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x223D DUP6 DUP3 DUP7 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225C JUMPI PUSH2 0x225B PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2269 DUP5 DUP3 DUP6 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x227B DUP2 PUSH2 0x20AD JUMP JUMPDEST DUP2 EQ PUSH2 0x2285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2296 DUP2 PUSH2 0x2272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B3 JUMPI PUSH2 0x22B2 PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C0 DUP7 DUP3 DUP8 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22D1 DUP7 DUP3 DUP8 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22E2 DUP7 DUP3 DUP8 ADD PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x22F5 DUP2 PUSH2 0x20AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x230E PUSH0 DUP4 ADD DUP10 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x231B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2328 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x234F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2370 JUMPI PUSH2 0x236F PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x237D DUP6 DUP3 DUP7 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x238E DUP6 DUP3 DUP7 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23BB PUSH2 0x23B6 PUSH2 0x23B1 DUP5 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x2398 JUMP JUMPDEST PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23CC DUP3 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23DD DUP3 PUSH2 0x23C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23ED DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2406 PUSH0 DUP4 ADD DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2415 DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242E PUSH0 DUP4 ADD DUP5 PUSH2 0x240C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206163636F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2478 PUSH1 0xF DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2483 DUP3 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A5 DUP2 PUSH2 0x246C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24E0 PUSH1 0x13 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EB DUP3 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250D DUP2 PUSH2 0x24D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2575 PUSH1 0xF DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2580 DUP3 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25A2 DUP2 PUSH2 0x2569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25E0 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x25EB DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2602 PUSH2 0x25A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2613 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x261E DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2636 JUMPI PUSH2 0x2635 PUSH2 0x25A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2646 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x2651 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x265F DUP2 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2676 JUMPI PUSH2 0x2675 PUSH2 0x25A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26B4 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BF DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26CF JUMPI PUSH2 0x26CE PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206D75737420626520454F410000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x270E PUSH1 0x12 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2719 DUP3 PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x273B DUP2 PUSH2 0x2702 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4175746F2D7374616B696E672064697361626C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2776 PUSH1 0x15 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2781 DUP3 PUSH2 0x2742 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27A3 DUP2 PUSH2 0x276A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374696C6C206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27DE PUSH1 0xC DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E9 DUP3 PUSH2 0x27AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x280B DUP2 PUSH2 0x27D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2846 PUSH1 0x18 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2851 DUP3 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2873 DUP2 PUSH2 0x283A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x288D PUSH0 DUP4 ADD DUP6 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x289A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420706572696F6420696E646578000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D5 PUSH1 0x14 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E0 DUP3 PUSH2 0x28A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 PUSH2 0x28C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x293D PUSH1 0xB DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2948 DUP3 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x296A DUP2 PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2984 PUSH0 DUP4 ADD DUP7 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2991 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x299E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x41505920746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29DA PUSH1 0xC DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E5 DUP3 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A07 DUP2 PUSH2 0x29CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A21 PUSH0 DUP4 ADD DUP6 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2A2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22EC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420666565207265636569766572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A69 PUSH1 0x14 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A74 DUP3 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A96 DUP2 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD1 PUSH1 0x16 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADC DUP3 PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AFE DUP2 PUSH2 0x2AC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B39 PUSH1 0x14 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B44 DUP3 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B66 DUP2 PUSH2 0x2B2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E737570706F72746564206C6F636B20706572696F64000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BA1 PUSH1 0x17 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAC DUP3 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCE DUP2 PUSH2 0x2B95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C09 PUSH1 0x1F DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C14 DUP3 PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C36 DUP2 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C50 PUSH0 DUP4 ADD DUP7 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2C5D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2C6A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C85 PUSH0 DUP4 ADD DUP6 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2C92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE DATALOADN 0xE62A LOG4 SWAP7 0xD3 0xCC 0xCA 0xBD EXTCODEHASH BLOCKHASH 0x2C DUP15 0xAF PUSH0 PUSH3 0x86F2DD BLOBBASEFEE STATICCALL LOG1 DUP15 SWAP10 0xAD SWAP2 INVALID 0x4F DUP7 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "418:9350:9:-:0;;;730:59;;;;;;;;763:7;730:59;;;;;;772:7;730:59;;;;;;781:7;730:59;;;;;;;;;;;;;:::i;:::-;;795:46;;;;;;;;825:3;795:46;;;;;;830:4;795:46;;;;;;836:4;795:46;;;;;;;;;;;;;:::i;:::-;;2084:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2215:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2277:1:9::1;2245:34;;:20;:34;;::::0;2237:68:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2354:1;2323:33;;:19;:33;;::::0;2315:66:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2423:1;2399:26;;:12;:26;;::::0;2391:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2483:20;2461:43;;;;;;;;::::0;::::1;2535:19;2514:11;;:41;;;;;;;;;;;;;;;;;;2579:12;2565:11;;:26;;;;;;;;;;;;;;;;;;2084:514:::0;;;418:9350;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;418:9350:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;1866:169::-;1950:11;1984:6;1979:3;1972:19;2024:4;2019:3;2015:14;2000:29;;1866:169;;;;:::o;2041:171::-;2181:23;2177:1;2169:6;2165:14;2158:47;2041:171;:::o;2218:366::-;2360:3;2381:67;2445:2;2440:3;2381:67;:::i;:::-;2374:74;;2457:93;2546:3;2457:93;:::i;:::-;2575:2;2570:3;2566:12;2559:19;;2218:366;;;:::o;2590:419::-;2756:4;2794:2;2783:9;2779:18;2771:26;;2843:9;2837:4;2833:20;2829:1;2818:9;2814:17;2807:47;2871:131;2997:4;2871:131;:::i;:::-;2863:139;;2590:419;;;:::o;3015:170::-;3155:22;3151:1;3143:6;3139:14;3132:46;3015:170;:::o;3191:366::-;3333:3;3354:67;3418:2;3413:3;3354:67;:::i;:::-;3347:74;;3430:93;3519:3;3430:93;:::i;:::-;3548:2;3543:3;3539:12;3532:19;;3191:366;;;:::o;3563:419::-;3729:4;3767:2;3756:9;3752:18;3744:26;;3816:9;3810:4;3806:20;3802:1;3791:9;3787:17;3780:47;3844:131;3970:4;3844:131;:::i;:::-;3836:139;;3563:419;;;:::o;3988:170::-;4128:22;4124:1;4116:6;4112:14;4105:46;3988:170;:::o;4164:366::-;4306:3;4327:67;4391:2;4386:3;4327:67;:::i;:::-;4320:74;;4403:93;4492:3;4403:93;:::i;:::-;4521:2;4516:3;4512:12;4505:19;;4164:366;;;:::o;4536:419::-;4702:4;4740:2;4729:9;4725:18;4717:26;;4789:9;4783:4;4779:20;4775:1;4764:9;4760:17;4753:47;4817:131;4943:4;4817:131;:::i;:::-;4809:139;;4536:419;;;:::o;418:9350:9:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AUTO_COMPOUND_FEE_913": {
									"entryPoint": 2146,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SECONDS_PER_YEAR_910": {
									"entryPoint": 6729,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 7961,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7506,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 8116,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 7367,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 7288,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7641,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewardPoolFunds_1688": {
									"entryPoint": 5873,
									"id": 1688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@apyRates_931": {
									"entryPoint": 4106,
									"id": 931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateReward_1278": {
									"entryPoint": 1444,
									"id": 1278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimReward_1448": {
									"entryPoint": 4694,
									"id": 1448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compoundReward_1652": {
									"entryPoint": 2151,
									"id": 1652,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeReceiver_915": {
									"entryPoint": 5836,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getActiveStakes_1796": {
									"entryPoint": 1199,
									"id": 1796,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPeriodIndex_1313": {
									"entryPoint": 7158,
									"id": 1313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockPeriods_923": {
									"entryPoint": 3008,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 4198,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingRewardWithdrawals_954": {
									"entryPoint": 1178,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4131,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPoolBalance_958": {
									"entryPoint": 4186,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_907": {
									"entryPoint": 6869,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 7376,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 7834,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAPY_1725": {
									"entryPoint": 3875,
									"id": 1725,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_1169": {
									"entryPoint": 3033,
									"id": 1169,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakes_950": {
									"entryPoint": 3768,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_904": {
									"entryPoint": 4150,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toggleAutoStake_1543": {
									"entryPoint": 4237,
									"id": 1543,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalStaked_956": {
									"entryPoint": 4192,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 6737,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateFeeReceiver_1781": {
									"entryPoint": 6107,
									"id": 1781,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardToken_1754": {
									"entryPoint": 6906,
									"id": 1754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawRewards_1490": {
									"entryPoint": 6359,
									"id": 1490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11325,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 9203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 10766,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 10609,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 9171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf": {
									"entryPoint": 10050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070": {
									"entryPoint": 9388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8": {
									"entryPoint": 10258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9": {
									"entryPoint": 11117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4": {
									"entryPoint": 10505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5": {
									"entryPoint": 10662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c": {
									"entryPoint": 10909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c": {
									"entryPoint": 10401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf": {
									"entryPoint": 9537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583": {
									"entryPoint": 10154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab": {
									"entryPoint": 9946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375": {
									"entryPoint": 10805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd": {
									"entryPoint": 11013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28462:10",
										"nodeType": "YulBlock",
										"src": "0:28462:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "907:263:10",
													"nodeType": "YulBlock",
													"src": "907:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:10",
																"nodeType": "YulBlock",
																"src": "953:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:10"
																			},
																			"nativeSrc": "955:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:10"
																		},
																		"nativeSrc": "955:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:10"
																		},
																		"nativeSrc": "924:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:10",
																		"nodeType": "YulLiteral",
																		"src": "949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:10"
																},
																"nativeSrc": "920:32:10",
																"nodeType": "YulFunctionCall",
																"src": "920:32:10"
															},
															"nativeSrc": "917:119:10",
															"nodeType": "YulIf",
															"src": "917:119:10"
														},
														{
															"nativeSrc": "1046:117:10",
															"nodeType": "YulBlock",
															"src": "1046:117:10",
															"statements": [
																{
																	"nativeSrc": "1061:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:10"
																				},
																				"nativeSrc": "1121:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:10"
																		},
																		"nativeSrc": "1100:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:10",
														"nodeType": "YulTypedName",
														"src": "877:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:10",
														"nodeType": "YulTypedName",
														"src": "888:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:10",
														"nodeType": "YulTypedName",
														"src": "900:6:10",
														"type": ""
													}
												],
												"src": "841:329:10"
											},
											{
												"body": {
													"nativeSrc": "1221:32:10",
													"nodeType": "YulBlock",
													"src": "1221:32:10",
													"statements": [
														{
															"nativeSrc": "1231:16:10",
															"nodeType": "YulAssignment",
															"src": "1231:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:10",
																"nodeType": "YulIdentifier",
																"src": "1242:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:10",
														"nodeType": "YulTypedName",
														"src": "1203:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:10",
														"nodeType": "YulTypedName",
														"src": "1213:7:10",
														"type": ""
													}
												],
												"src": "1176:77:10"
											},
											{
												"body": {
													"nativeSrc": "1324:53:10",
													"nodeType": "YulBlock",
													"src": "1324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:10"
																		},
																		"nativeSrc": "1346:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:10"
															},
															"nativeSrc": "1334:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:10",
														"nodeType": "YulTypedName",
														"src": "1319:3:10",
														"type": ""
													}
												],
												"src": "1259:118:10"
											},
											{
												"body": {
													"nativeSrc": "1481:124:10",
													"nodeType": "YulBlock",
													"src": "1481:124:10",
													"statements": [
														{
															"nativeSrc": "1491:26:10",
															"nodeType": "YulAssignment",
															"src": "1491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:10"
																},
																"nativeSrc": "1499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:10"
																		},
																		"nativeSrc": "1580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:10"
																},
																"nativeSrc": "1527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:10"
															},
															"nativeSrc": "1527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:10",
														"nodeType": "YulTypedName",
														"src": "1453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:10",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:10",
														"nodeType": "YulTypedName",
														"src": "1476:4:10",
														"type": ""
													}
												],
												"src": "1383:222:10"
											},
											{
												"body": {
													"nativeSrc": "1711:40:10",
													"nodeType": "YulBlock",
													"src": "1711:40:10",
													"statements": [
														{
															"nativeSrc": "1722:22:10",
															"nodeType": "YulAssignment",
															"src": "1722:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1738:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1732:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1732:5:10"
																},
																"nativeSrc": "1732:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1732:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1722:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1611:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1694:5:10",
														"nodeType": "YulTypedName",
														"src": "1694:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1704:6:10",
														"nodeType": "YulTypedName",
														"src": "1704:6:10",
														"type": ""
													}
												],
												"src": "1611:140:10"
											},
											{
												"body": {
													"nativeSrc": "1894:73:10",
													"nodeType": "YulBlock",
													"src": "1894:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1911:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1911:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1916:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1904:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:10"
																},
																"nativeSrc": "1904:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1904:19:10"
															},
															"nativeSrc": "1904:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1904:19:10"
														},
														{
															"nativeSrc": "1932:29:10",
															"nodeType": "YulAssignment",
															"src": "1932:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1956:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1947:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:10"
																},
																"nativeSrc": "1947:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1947:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1932:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1932:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1757:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1866:3:10",
														"nodeType": "YulTypedName",
														"src": "1866:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1871:6:10",
														"nodeType": "YulTypedName",
														"src": "1871:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1882:11:10",
														"nodeType": "YulTypedName",
														"src": "1882:11:10",
														"type": ""
													}
												],
												"src": "1757:210:10"
											},
											{
												"body": {
													"nativeSrc": "2071:60:10",
													"nodeType": "YulBlock",
													"src": "2071:60:10",
													"statements": [
														{
															"nativeSrc": "2081:11:10",
															"nodeType": "YulAssignment",
															"src": "2081:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2089:3:10",
																"nodeType": "YulIdentifier",
																"src": "2089:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2081:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:10"
																}
															]
														},
														{
															"nativeSrc": "2102:22:10",
															"nodeType": "YulAssignment",
															"src": "2102:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2114:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2114:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2119:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2119:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2110:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:10"
																},
																"nativeSrc": "2110:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2110:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2102:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2102:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1973:158:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2058:3:10",
														"nodeType": "YulTypedName",
														"src": "2058:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2066:4:10",
														"nodeType": "YulTypedName",
														"src": "2066:4:10",
														"type": ""
													}
												],
												"src": "1973:158:10"
											},
											{
												"body": {
													"nativeSrc": "2192:53:10",
													"nodeType": "YulBlock",
													"src": "2192:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2209:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2232:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2232:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2214:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2214:17:10"
																		},
																		"nativeSrc": "2214:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:10"
																},
																"nativeSrc": "2202:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2202:37:10"
															},
															"nativeSrc": "2202:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2202:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2137:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2180:5:10",
														"nodeType": "YulTypedName",
														"src": "2180:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2187:3:10",
														"nodeType": "YulTypedName",
														"src": "2187:3:10",
														"type": ""
													}
												],
												"src": "2137:108:10"
											},
											{
												"body": {
													"nativeSrc": "2293:48:10",
													"nodeType": "YulBlock",
													"src": "2293:48:10",
													"statements": [
														{
															"nativeSrc": "2303:32:10",
															"nodeType": "YulAssignment",
															"src": "2303:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2328:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2328:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2321:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2321:6:10"
																		},
																		"nativeSrc": "2321:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2321:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2314:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:10"
																},
																"nativeSrc": "2314:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2314:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2303:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2303:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2251:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2275:5:10",
														"nodeType": "YulTypedName",
														"src": "2275:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2285:7:10",
														"nodeType": "YulTypedName",
														"src": "2285:7:10",
														"type": ""
													}
												],
												"src": "2251:90:10"
											},
											{
												"body": {
													"nativeSrc": "2396:50:10",
													"nodeType": "YulBlock",
													"src": "2396:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2413:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2433:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2433:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2418:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "2418:14:10"
																		},
																		"nativeSrc": "2418:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2406:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2406:6:10"
																},
																"nativeSrc": "2406:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2406:34:10"
															},
															"nativeSrc": "2406:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2406:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "2347:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2384:5:10",
														"nodeType": "YulTypedName",
														"src": "2384:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2391:3:10",
														"nodeType": "YulTypedName",
														"src": "2391:3:10",
														"type": ""
													}
												],
												"src": "2347:99:10"
											},
											{
												"body": {
													"nativeSrc": "2628:1110:10",
													"nodeType": "YulBlock",
													"src": "2628:1110:10",
													"statements": [
														{
															"nativeSrc": "2638:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2638:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2654:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2654:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2659:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2659:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2650:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:10"
																},
																"nativeSrc": "2650:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2650:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2642:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2642:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2674:166:10",
															"nodeType": "YulBlock",
															"src": "2674:166:10",
															"statements": [
																{
																	"nativeSrc": "2711:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2711:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2741:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2741:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2748:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2748:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2737:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:10"
																				},
																				"nativeSrc": "2737:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2737:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2731:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2731:5:10"
																		},
																		"nativeSrc": "2731:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2715:12:10",
																			"nodeType": "YulTypedName",
																			"src": "2715:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2801:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "2801:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2819:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2819:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2824:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2824:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2815:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2815:3:10"
																				},
																				"nativeSrc": "2815:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2815:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2767:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "2767:33:10"
																		},
																		"nativeSrc": "2767:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:63:10"
																	},
																	"nativeSrc": "2767:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "2767:63:10"
																}
															]
														},
														{
															"nativeSrc": "2850:169:10",
															"nodeType": "YulBlock",
															"src": "2850:169:10",
															"statements": [
																{
																	"nativeSrc": "2890:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2890:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2920:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2920:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2927:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2927:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2916:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2916:3:10"
																				},
																				"nativeSrc": "2916:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2916:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2910:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2910:5:10"
																		},
																		"nativeSrc": "2910:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2894:12:10",
																			"nodeType": "YulTypedName",
																			"src": "2894:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2980:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "2980:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2998:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2998:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3003:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3003:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2994:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2994:3:10"
																				},
																				"nativeSrc": "2994:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2994:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2946:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "2946:33:10"
																		},
																		"nativeSrc": "2946:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2946:63:10"
																	},
																	"nativeSrc": "2946:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "2946:63:10"
																}
															]
														},
														{
															"nativeSrc": "3029:170:10",
															"nodeType": "YulBlock",
															"src": "3029:170:10",
															"statements": [
																{
																	"nativeSrc": "3070:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3070:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3100:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3100:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3107:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3107:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3096:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:10"
																				},
																				"nativeSrc": "3096:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3096:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3090:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3090:5:10"
																		},
																		"nativeSrc": "3090:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3090:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3074:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3074:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3160:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3160:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3178:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3178:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3183:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3183:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3174:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3174:3:10"
																				},
																				"nativeSrc": "3174:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3174:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3126:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "3126:33:10"
																		},
																		"nativeSrc": "3126:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3126:63:10"
																	},
																	"nativeSrc": "3126:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3126:63:10"
																}
															]
														},
														{
															"nativeSrc": "3209:161:10",
															"nodeType": "YulBlock",
															"src": "3209:161:10",
															"statements": [
																{
																	"nativeSrc": "3247:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3247:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3277:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3277:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3284:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3284:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3273:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3273:3:10"
																				},
																				"nativeSrc": "3273:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3273:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3267:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3267:5:10"
																		},
																		"nativeSrc": "3267:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3267:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3251:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3251:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3331:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3331:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3349:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3349:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3354:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3354:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3345:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3345:3:10"
																				},
																				"nativeSrc": "3345:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3345:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "3303:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3303:27:10"
																		},
																		"nativeSrc": "3303:57:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:57:10"
																	},
																	"nativeSrc": "3303:57:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3303:57:10"
																}
															]
														},
														{
															"nativeSrc": "3380:165:10",
															"nodeType": "YulBlock",
															"src": "3380:165:10",
															"statements": [
																{
																	"nativeSrc": "3422:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3422:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3452:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3452:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3459:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3459:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3448:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:10"
																				},
																				"nativeSrc": "3448:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3448:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3442:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3442:5:10"
																		},
																		"nativeSrc": "3442:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3426:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3426:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3506:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3506:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3524:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3524:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3529:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3529:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3520:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3520:3:10"
																				},
																				"nativeSrc": "3520:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3520:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "3478:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3478:27:10"
																		},
																		"nativeSrc": "3478:57:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:57:10"
																	},
																	"nativeSrc": "3478:57:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3478:57:10"
																}
															]
														},
														{
															"nativeSrc": "3555:176:10",
															"nodeType": "YulBlock",
															"src": "3555:176:10",
															"statements": [
																{
																	"nativeSrc": "3602:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3602:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3632:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3632:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3639:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3639:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3628:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3628:3:10"
																				},
																				"nativeSrc": "3628:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3628:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3622:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3622:5:10"
																		},
																		"nativeSrc": "3622:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3606:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3606:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3692:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3692:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3710:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3710:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3715:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3715:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3706:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3706:3:10"
																				},
																				"nativeSrc": "3706:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3706:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3658:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "3658:33:10"
																		},
																		"nativeSrc": "3658:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3658:63:10"
																	},
																	"nativeSrc": "3658:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3658:63:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr",
												"nativeSrc": "2520:1218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2615:5:10",
														"nodeType": "YulTypedName",
														"src": "2615:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2622:3:10",
														"nodeType": "YulTypedName",
														"src": "2622:3:10",
														"type": ""
													}
												],
												"src": "2520:1218:10"
											},
											{
												"body": {
													"nativeSrc": "3876:151:10",
													"nodeType": "YulBlock",
													"src": "3876:151:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3972:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3980:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3980:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr",
																	"nativeSrc": "3886:85:10",
																	"nodeType": "YulIdentifier",
																	"src": "3886:85:10"
																},
																"nativeSrc": "3886:98:10",
																"nodeType": "YulFunctionCall",
																"src": "3886:98:10"
															},
															"nativeSrc": "3886:98:10",
															"nodeType": "YulExpressionStatement",
															"src": "3886:98:10"
														},
														{
															"nativeSrc": "3993:28:10",
															"nodeType": "YulAssignment",
															"src": "3993:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4011:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4011:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4016:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4016:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4007:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4007:3:10"
																},
																"nativeSrc": "4007:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4007:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3993:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "3993:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr",
												"nativeSrc": "3744:283:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3849:6:10",
														"nodeType": "YulTypedName",
														"src": "3849:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3857:3:10",
														"nodeType": "YulTypedName",
														"src": "3857:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3865:10:10",
														"nodeType": "YulTypedName",
														"src": "3865:10:10",
														"type": ""
													}
												],
												"src": "3744:283:10"
											},
											{
												"body": {
													"nativeSrc": "4134:38:10",
													"nodeType": "YulBlock",
													"src": "4134:38:10",
													"statements": [
														{
															"nativeSrc": "4144:22:10",
															"nodeType": "YulAssignment",
															"src": "4144:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4156:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4156:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4161:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4161:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4152:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:10"
																},
																"nativeSrc": "4152:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4152:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "4144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4033:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4121:3:10",
														"nodeType": "YulTypedName",
														"src": "4121:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "4129:4:10",
														"nodeType": "YulTypedName",
														"src": "4129:4:10",
														"type": ""
													}
												],
												"src": "4033:139:10"
											},
											{
												"body": {
													"nativeSrc": "4426:764:10",
													"nodeType": "YulBlock",
													"src": "4426:764:10",
													"statements": [
														{
															"nativeSrc": "4436:94:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4436:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4524:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4524:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4450:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "4450:73:10"
																},
																"nativeSrc": "4450:80:10",
																"nodeType": "YulFunctionCall",
																"src": "4450:80:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4440:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4440:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4539:119:10",
															"nodeType": "YulAssignment",
															"src": "4539:119:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4646:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4646:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4546:99:10",
																	"nodeType": "YulIdentifier",
																	"src": "4546:99:10"
																},
																"nativeSrc": "4546:112:10",
																"nodeType": "YulFunctionCall",
																"src": "4546:112:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:10"
																}
															]
														},
														{
															"nativeSrc": "4667:97:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4667:97:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4758:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4758:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4682:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "4682:75:10"
																},
																"nativeSrc": "4682:82:10",
																"nodeType": "YulFunctionCall",
																"src": "4682:82:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4671:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4671:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4773:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4773:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4787:7:10",
																"nodeType": "YulIdentifier",
																"src": "4787:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4777:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4777:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4863:302:10",
																"nodeType": "YulBlock",
																"src": "4863:302:10",
																"statements": [
																	{
																		"nativeSrc": "4877:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4877:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4904:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4904:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4898:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4898:5:10"
																			},
																			"nativeSrc": "4898:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4898:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4881:13:10",
																				"nodeType": "YulTypedName",
																				"src": "4881:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4924:122:10",
																		"nodeType": "YulAssignment",
																		"src": "4924:122:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "5027:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "5027:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "5042:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5042:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr",
																				"nativeSrc": "4931:95:10",
																				"nodeType": "YulIdentifier",
																				"src": "4931:95:10"
																			},
																			"nativeSrc": "4931:115:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:115:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4924:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4924:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5059:96:10",
																		"nodeType": "YulAssignment",
																		"src": "5059:96:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5148:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5148:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "5069:78:10",
																				"nodeType": "YulIdentifier",
																				"src": "5069:78:10"
																			},
																			"nativeSrc": "5069:86:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5069:86:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5059:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5059:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4825:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4825:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4828:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4828:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4822:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4822:2:10"
																},
																"nativeSrc": "4822:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4822:13:10"
															},
															"nativeSrc": "4803:362:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4836:18:10",
																"nodeType": "YulBlock",
																"src": "4836:18:10",
																"statements": [
																	{
																		"nativeSrc": "4838:14:10",
																		"nodeType": "YulAssignment",
																		"src": "4838:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4847:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "4847:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4850:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4850:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4843:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4843:3:10"
																			},
																			"nativeSrc": "4843:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4843:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4838:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4838:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4807:14:10",
																"nodeType": "YulBlock",
																"src": "4807:14:10",
																"statements": [
																	{
																		"nativeSrc": "4809:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4809:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4818:1:10",
																			"nodeType": "YulLiteral",
																			"src": "4818:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4813:1:10",
																				"nodeType": "YulTypedName",
																				"src": "4813:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4803:362:10"
														},
														{
															"nativeSrc": "5174:10:10",
															"nodeType": "YulAssignment",
															"src": "5174:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "5181:3:10",
																"nodeType": "YulIdentifier",
																"src": "5181:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5174:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5174:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4250:940:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4405:5:10",
														"nodeType": "YulTypedName",
														"src": "4405:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4412:3:10",
														"nodeType": "YulTypedName",
														"src": "4412:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4421:3:10",
														"nodeType": "YulTypedName",
														"src": "4421:3:10",
														"type": ""
													}
												],
												"src": "4250:940:10"
											},
											{
												"body": {
													"nativeSrc": "5396:277:10",
													"nodeType": "YulBlock",
													"src": "5396:277:10",
													"statements": [
														{
															"nativeSrc": "5406:26:10",
															"nodeType": "YulAssignment",
															"src": "5406:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5418:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5418:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5429:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5414:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:10"
																},
																"nativeSrc": "5414:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5414:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5406:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5453:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5453:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5464:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5464:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:10"
																		},
																		"nativeSrc": "5449:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5472:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5472:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5478:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5478:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5468:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:10"
																		},
																		"nativeSrc": "5468:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:10"
																},
																"nativeSrc": "5442:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5442:47:10"
															},
															"nativeSrc": "5442:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5442:47:10"
														},
														{
															"nativeSrc": "5498:168:10",
															"nodeType": "YulAssignment",
															"src": "5498:168:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5652:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5652:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5661:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5661:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5506:145:10",
																	"nodeType": "YulIdentifier",
																	"src": "5506:145:10"
																},
																"nativeSrc": "5506:160:10",
																"nodeType": "YulFunctionCall",
																"src": "5506:160:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5498:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5498:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5196:477:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5368:9:10",
														"nodeType": "YulTypedName",
														"src": "5368:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5380:6:10",
														"nodeType": "YulTypedName",
														"src": "5380:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5391:4:10",
														"nodeType": "YulTypedName",
														"src": "5391:4:10",
														"type": ""
													}
												],
												"src": "5196:477:10"
											},
											{
												"body": {
													"nativeSrc": "5722:79:10",
													"nodeType": "YulBlock",
													"src": "5722:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5779:16:10",
																"nodeType": "YulBlock",
																"src": "5779:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5788:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5788:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5791:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5791:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5781:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5781:6:10"
																			},
																			"nativeSrc": "5781:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5781:12:10"
																		},
																		"nativeSrc": "5781:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5781:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5745:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5745:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5770:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5770:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5752:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5752:17:10"
																				},
																				"nativeSrc": "5752:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5752:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5742:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5742:2:10"
																		},
																		"nativeSrc": "5742:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:10"
																},
																"nativeSrc": "5735:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5735:43:10"
															},
															"nativeSrc": "5732:63:10",
															"nodeType": "YulIf",
															"src": "5732:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5679:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5715:5:10",
														"nodeType": "YulTypedName",
														"src": "5715:5:10",
														"type": ""
													}
												],
												"src": "5679:122:10"
											},
											{
												"body": {
													"nativeSrc": "5859:87:10",
													"nodeType": "YulBlock",
													"src": "5859:87:10",
													"statements": [
														{
															"nativeSrc": "5869:29:10",
															"nodeType": "YulAssignment",
															"src": "5869:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5891:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5878:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5878:12:10"
																},
																"nativeSrc": "5878:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5878:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5869:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5869:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5934:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5934:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5907:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "5907:26:10"
																},
																"nativeSrc": "5907:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5907:33:10"
															},
															"nativeSrc": "5907:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5907:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5807:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5837:6:10",
														"nodeType": "YulTypedName",
														"src": "5837:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5845:3:10",
														"nodeType": "YulTypedName",
														"src": "5845:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5853:5:10",
														"nodeType": "YulTypedName",
														"src": "5853:5:10",
														"type": ""
													}
												],
												"src": "5807:139:10"
											},
											{
												"body": {
													"nativeSrc": "6035:391:10",
													"nodeType": "YulBlock",
													"src": "6035:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6081:83:10",
																"nodeType": "YulBlock",
																"src": "6081:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6083:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6083:77:10"
																			},
																			"nativeSrc": "6083:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6083:79:10"
																		},
																		"nativeSrc": "6083:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6083:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6056:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6056:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6065:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6065:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6052:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:10"
																		},
																		"nativeSrc": "6052:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6052:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6048:3:10"
																},
																"nativeSrc": "6048:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6048:32:10"
															},
															"nativeSrc": "6045:119:10",
															"nodeType": "YulIf",
															"src": "6045:119:10"
														},
														{
															"nativeSrc": "6174:117:10",
															"nodeType": "YulBlock",
															"src": "6174:117:10",
															"statements": [
																{
																	"nativeSrc": "6189:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6189:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6203:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6203:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6193:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6193:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6218:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6218:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6253:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6253:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6264:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6264:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6249:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6249:3:10"
																				},
																				"nativeSrc": "6249:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6249:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6273:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6273:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6228:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6228:20:10"
																		},
																		"nativeSrc": "6228:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6228:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6218:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6218:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6301:118:10",
															"nodeType": "YulBlock",
															"src": "6301:118:10",
															"statements": [
																{
																	"nativeSrc": "6316:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6316:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6330:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6330:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6320:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6320:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6346:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6346:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6381:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6381:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6392:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6392:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6377:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6377:3:10"
																				},
																				"nativeSrc": "6377:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6377:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6401:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6401:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6356:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6356:20:10"
																		},
																		"nativeSrc": "6356:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6356:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6346:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6346:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5952:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5997:9:10",
														"nodeType": "YulTypedName",
														"src": "5997:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6008:7:10",
														"nodeType": "YulTypedName",
														"src": "6008:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6020:6:10",
														"nodeType": "YulTypedName",
														"src": "6020:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6028:6:10",
														"nodeType": "YulTypedName",
														"src": "6028:6:10",
														"type": ""
													}
												],
												"src": "5952:474:10"
											},
											{
												"body": {
													"nativeSrc": "6498:263:10",
													"nodeType": "YulBlock",
													"src": "6498:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6544:83:10",
																"nodeType": "YulBlock",
																"src": "6544:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6546:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6546:77:10"
																			},
																			"nativeSrc": "6546:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6546:79:10"
																		},
																		"nativeSrc": "6546:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6546:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6519:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6519:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6528:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6528:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6515:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:10"
																		},
																		"nativeSrc": "6515:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6515:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6540:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6540:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:10"
																},
																"nativeSrc": "6511:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6511:32:10"
															},
															"nativeSrc": "6508:119:10",
															"nodeType": "YulIf",
															"src": "6508:119:10"
														},
														{
															"nativeSrc": "6637:117:10",
															"nodeType": "YulBlock",
															"src": "6637:117:10",
															"statements": [
																{
																	"nativeSrc": "6652:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6652:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6666:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6666:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6656:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6656:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6681:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6681:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6716:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6716:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6727:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6727:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6712:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6712:3:10"
																				},
																				"nativeSrc": "6712:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6712:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6736:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6736:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6691:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6691:20:10"
																		},
																		"nativeSrc": "6691:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6691:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6681:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6681:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6432:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6468:9:10",
														"nodeType": "YulTypedName",
														"src": "6468:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6479:7:10",
														"nodeType": "YulTypedName",
														"src": "6479:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6491:6:10",
														"nodeType": "YulTypedName",
														"src": "6491:6:10",
														"type": ""
													}
												],
												"src": "6432:329:10"
											},
											{
												"body": {
													"nativeSrc": "6807:76:10",
													"nodeType": "YulBlock",
													"src": "6807:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6861:16:10",
																"nodeType": "YulBlock",
																"src": "6861:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6870:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6870:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6873:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6873:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6863:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:10"
																			},
																			"nativeSrc": "6863:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6863:12:10"
																		},
																		"nativeSrc": "6863:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6863:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6830:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6852:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6852:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6837:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "6837:14:10"
																				},
																				"nativeSrc": "6837:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6837:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6827:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6827:2:10"
																		},
																		"nativeSrc": "6827:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6827:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6820:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:10"
																},
																"nativeSrc": "6820:40:10",
																"nodeType": "YulFunctionCall",
																"src": "6820:40:10"
															},
															"nativeSrc": "6817:60:10",
															"nodeType": "YulIf",
															"src": "6817:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6767:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6800:5:10",
														"nodeType": "YulTypedName",
														"src": "6800:5:10",
														"type": ""
													}
												],
												"src": "6767:116:10"
											},
											{
												"body": {
													"nativeSrc": "6938:84:10",
													"nodeType": "YulBlock",
													"src": "6938:84:10",
													"statements": [
														{
															"nativeSrc": "6948:29:10",
															"nodeType": "YulAssignment",
															"src": "6948:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6970:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6957:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6957:12:10"
																},
																"nativeSrc": "6957:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6957:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6948:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6948:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7010:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7010:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6986:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "6986:23:10"
																},
																"nativeSrc": "6986:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6986:30:10"
															},
															"nativeSrc": "6986:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6986:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6889:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6916:6:10",
														"nodeType": "YulTypedName",
														"src": "6916:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6924:3:10",
														"nodeType": "YulTypedName",
														"src": "6924:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6932:5:10",
														"nodeType": "YulTypedName",
														"src": "6932:5:10",
														"type": ""
													}
												],
												"src": "6889:133:10"
											},
											{
												"body": {
													"nativeSrc": "7125:516:10",
													"nodeType": "YulBlock",
													"src": "7125:516:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7171:83:10",
																"nodeType": "YulBlock",
																"src": "7171:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7173:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7173:77:10"
																			},
																			"nativeSrc": "7173:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7173:79:10"
																		},
																		"nativeSrc": "7173:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7173:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7146:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7146:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7155:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7155:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7142:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:10"
																		},
																		"nativeSrc": "7142:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7142:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7167:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7167:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7138:3:10"
																},
																"nativeSrc": "7138:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7138:32:10"
															},
															"nativeSrc": "7135:119:10",
															"nodeType": "YulIf",
															"src": "7135:119:10"
														},
														{
															"nativeSrc": "7264:117:10",
															"nodeType": "YulBlock",
															"src": "7264:117:10",
															"statements": [
																{
																	"nativeSrc": "7279:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7279:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7293:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7283:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7283:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7308:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7308:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7343:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7343:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7354:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7354:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7339:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7339:3:10"
																				},
																				"nativeSrc": "7339:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7339:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7363:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7363:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7318:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7318:20:10"
																		},
																		"nativeSrc": "7318:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7318:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7308:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7308:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7391:118:10",
															"nodeType": "YulBlock",
															"src": "7391:118:10",
															"statements": [
																{
																	"nativeSrc": "7406:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7406:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7420:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7420:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7410:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7410:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7436:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7436:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7471:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7471:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7482:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7482:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7467:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7467:3:10"
																				},
																				"nativeSrc": "7467:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7467:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7491:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7491:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7446:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7446:20:10"
																		},
																		"nativeSrc": "7446:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7436:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7436:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7519:115:10",
															"nodeType": "YulBlock",
															"src": "7519:115:10",
															"statements": [
																{
																	"nativeSrc": "7534:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7534:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7548:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7538:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7538:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7564:60:10",
																	"nodeType": "YulAssignment",
																	"src": "7564:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7596:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7596:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7607:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7607:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7592:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7592:3:10"
																				},
																				"nativeSrc": "7592:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7592:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7616:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7616:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7574:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7574:17:10"
																		},
																		"nativeSrc": "7574:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7574:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7564:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7564:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "7028:613:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7079:9:10",
														"nodeType": "YulTypedName",
														"src": "7079:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7090:7:10",
														"nodeType": "YulTypedName",
														"src": "7090:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7102:6:10",
														"nodeType": "YulTypedName",
														"src": "7102:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7110:6:10",
														"nodeType": "YulTypedName",
														"src": "7110:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7118:6:10",
														"nodeType": "YulTypedName",
														"src": "7118:6:10",
														"type": ""
													}
												],
												"src": "7028:613:10"
											},
											{
												"body": {
													"nativeSrc": "7706:50:10",
													"nodeType": "YulBlock",
													"src": "7706:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7723:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7723:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7743:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7743:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "7728:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "7728:14:10"
																		},
																		"nativeSrc": "7728:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7728:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7716:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:10"
																},
																"nativeSrc": "7716:34:10",
																"nodeType": "YulFunctionCall",
																"src": "7716:34:10"
															},
															"nativeSrc": "7716:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "7716:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "7647:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7694:5:10",
														"nodeType": "YulTypedName",
														"src": "7694:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7701:3:10",
														"nodeType": "YulTypedName",
														"src": "7701:3:10",
														"type": ""
													}
												],
												"src": "7647:109:10"
											},
											{
												"body": {
													"nativeSrc": "7988:525:10",
													"nodeType": "YulBlock",
													"src": "7988:525:10",
													"statements": [
														{
															"nativeSrc": "7998:27:10",
															"nodeType": "YulAssignment",
															"src": "7998:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8010:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8010:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8021:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8021:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8006:3:10"
																},
																"nativeSrc": "8006:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8006:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7998:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7998:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8079:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8079:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8092:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8092:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8103:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8103:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8088:3:10"
																		},
																		"nativeSrc": "8088:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8088:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8035:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8035:43:10"
																},
																"nativeSrc": "8035:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8035:71:10"
															},
															"nativeSrc": "8035:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8035:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8160:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8160:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8173:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8173:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8184:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8184:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:10"
																		},
																		"nativeSrc": "8169:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8169:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8116:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8116:43:10"
																},
																"nativeSrc": "8116:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8116:72:10"
															},
															"nativeSrc": "8116:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8116:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8242:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8242:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8255:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8255:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8266:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8266:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8251:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8251:3:10"
																		},
																		"nativeSrc": "8251:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8251:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8198:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8198:43:10"
																},
																"nativeSrc": "8198:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8198:72:10"
															},
															"nativeSrc": "8198:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8198:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8318:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8318:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8331:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8331:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8342:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8342:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8327:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:10"
																		},
																		"nativeSrc": "8327:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8280:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "8280:37:10"
																},
																"nativeSrc": "8280:66:10",
																"nodeType": "YulFunctionCall",
																"src": "8280:66:10"
															},
															"nativeSrc": "8280:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "8280:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8394:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8394:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8407:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8418:3:10",
																				"nodeType": "YulLiteral",
																				"src": "8418:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8403:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8403:3:10"
																		},
																		"nativeSrc": "8403:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8403:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8356:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "8356:37:10"
																},
																"nativeSrc": "8356:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8356:67:10"
															},
															"nativeSrc": "8356:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8356:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8477:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8477:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8490:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8501:3:10",
																				"nodeType": "YulLiteral",
																				"src": "8501:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8486:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:10"
																		},
																		"nativeSrc": "8486:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8486:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8433:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8433:43:10"
																},
																"nativeSrc": "8433:73:10",
																"nodeType": "YulFunctionCall",
																"src": "8433:73:10"
															},
															"nativeSrc": "8433:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "8433:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "7762:751:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7920:9:10",
														"nodeType": "YulTypedName",
														"src": "7920:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7932:6:10",
														"nodeType": "YulTypedName",
														"src": "7932:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7940:6:10",
														"nodeType": "YulTypedName",
														"src": "7940:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7948:6:10",
														"nodeType": "YulTypedName",
														"src": "7948:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7956:6:10",
														"nodeType": "YulTypedName",
														"src": "7956:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7964:6:10",
														"nodeType": "YulTypedName",
														"src": "7964:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7972:6:10",
														"nodeType": "YulTypedName",
														"src": "7972:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7983:4:10",
														"nodeType": "YulTypedName",
														"src": "7983:4:10",
														"type": ""
													}
												],
												"src": "7762:751:10"
											},
											{
												"body": {
													"nativeSrc": "8602:391:10",
													"nodeType": "YulBlock",
													"src": "8602:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8648:83:10",
																"nodeType": "YulBlock",
																"src": "8648:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8650:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8650:77:10"
																			},
																			"nativeSrc": "8650:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8650:79:10"
																		},
																		"nativeSrc": "8650:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8650:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8623:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8623:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8632:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8632:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8619:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:10"
																		},
																		"nativeSrc": "8619:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8619:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8644:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8644:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8615:3:10"
																},
																"nativeSrc": "8615:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8615:32:10"
															},
															"nativeSrc": "8612:119:10",
															"nodeType": "YulIf",
															"src": "8612:119:10"
														},
														{
															"nativeSrc": "8741:117:10",
															"nodeType": "YulBlock",
															"src": "8741:117:10",
															"statements": [
																{
																	"nativeSrc": "8756:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8756:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8770:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8770:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8760:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8760:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8785:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8785:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8820:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8820:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8831:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8831:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8816:3:10"
																				},
																				"nativeSrc": "8816:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8816:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8840:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8840:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8795:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8795:20:10"
																		},
																		"nativeSrc": "8795:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8795:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8785:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8785:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8868:118:10",
															"nodeType": "YulBlock",
															"src": "8868:118:10",
															"statements": [
																{
																	"nativeSrc": "8883:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8883:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8897:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8897:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8887:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8887:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8913:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8913:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8948:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8948:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8959:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8959:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8944:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8944:3:10"
																				},
																				"nativeSrc": "8944:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8944:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8968:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8968:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8923:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8923:20:10"
																		},
																		"nativeSrc": "8923:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8913:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8913:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8519:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8564:9:10",
														"nodeType": "YulTypedName",
														"src": "8564:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8575:7:10",
														"nodeType": "YulTypedName",
														"src": "8575:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8587:6:10",
														"nodeType": "YulTypedName",
														"src": "8587:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8595:6:10",
														"nodeType": "YulTypedName",
														"src": "8595:6:10",
														"type": ""
													}
												],
												"src": "8519:474:10"
											},
											{
												"body": {
													"nativeSrc": "9031:28:10",
													"nodeType": "YulBlock",
													"src": "9031:28:10",
													"statements": [
														{
															"nativeSrc": "9041:12:10",
															"nodeType": "YulAssignment",
															"src": "9041:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "9048:5:10",
																"nodeType": "YulIdentifier",
																"src": "9048:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9041:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "8999:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9017:5:10",
														"nodeType": "YulTypedName",
														"src": "9017:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9027:3:10",
														"nodeType": "YulTypedName",
														"src": "9027:3:10",
														"type": ""
													}
												],
												"src": "8999:60:10"
											},
											{
												"body": {
													"nativeSrc": "9125:82:10",
													"nodeType": "YulBlock",
													"src": "9125:82:10",
													"statements": [
														{
															"nativeSrc": "9135:66:10",
															"nodeType": "YulAssignment",
															"src": "9135:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9193:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9193:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "9175:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "9175:17:10"
																				},
																				"nativeSrc": "9175:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9175:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9166:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "9166:8:10"
																		},
																		"nativeSrc": "9166:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9166:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9148:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9148:17:10"
																},
																"nativeSrc": "9148:53:10",
																"nodeType": "YulFunctionCall",
																"src": "9148:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9135:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9135:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "9065:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9105:5:10",
														"nodeType": "YulTypedName",
														"src": "9105:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9115:9:10",
														"nodeType": "YulTypedName",
														"src": "9115:9:10",
														"type": ""
													}
												],
												"src": "9065:142:10"
											},
											{
												"body": {
													"nativeSrc": "9273:66:10",
													"nodeType": "YulBlock",
													"src": "9273:66:10",
													"statements": [
														{
															"nativeSrc": "9283:50:10",
															"nodeType": "YulAssignment",
															"src": "9283:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9327:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9327:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "9296:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "9296:30:10"
																},
																"nativeSrc": "9296:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9296:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9283:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9283:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "9213:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9253:5:10",
														"nodeType": "YulTypedName",
														"src": "9253:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9263:9:10",
														"nodeType": "YulTypedName",
														"src": "9263:9:10",
														"type": ""
													}
												],
												"src": "9213:126:10"
											},
											{
												"body": {
													"nativeSrc": "9419:66:10",
													"nodeType": "YulBlock",
													"src": "9419:66:10",
													"statements": [
														{
															"nativeSrc": "9429:50:10",
															"nodeType": "YulAssignment",
															"src": "9429:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9473:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9473:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9442:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "9442:30:10"
																},
																"nativeSrc": "9442:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9442:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9429:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9429:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "9345:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9399:5:10",
														"nodeType": "YulTypedName",
														"src": "9399:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9409:9:10",
														"nodeType": "YulTypedName",
														"src": "9409:9:10",
														"type": ""
													}
												],
												"src": "9345:140:10"
											},
											{
												"body": {
													"nativeSrc": "9570:80:10",
													"nodeType": "YulBlock",
													"src": "9570:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9587:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9587:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9637:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9637:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "9592:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "9592:44:10"
																		},
																		"nativeSrc": "9592:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9592:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9580:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9580:6:10"
																},
																"nativeSrc": "9580:64:10",
																"nodeType": "YulFunctionCall",
																"src": "9580:64:10"
															},
															"nativeSrc": "9580:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "9580:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "9491:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9558:5:10",
														"nodeType": "YulTypedName",
														"src": "9558:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9565:3:10",
														"nodeType": "YulTypedName",
														"src": "9565:3:10",
														"type": ""
													}
												],
												"src": "9491:159:10"
											},
											{
												"body": {
													"nativeSrc": "9768:138:10",
													"nodeType": "YulBlock",
													"src": "9768:138:10",
													"statements": [
														{
															"nativeSrc": "9778:26:10",
															"nodeType": "YulAssignment",
															"src": "9778:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9790:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9790:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9801:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9801:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9786:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9786:3:10"
																},
																"nativeSrc": "9786:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9786:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9778:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9778:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9872:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9872:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9885:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9885:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9896:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9896:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9881:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9881:3:10"
																		},
																		"nativeSrc": "9881:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9881:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "9814:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "9814:57:10"
																},
																"nativeSrc": "9814:85:10",
																"nodeType": "YulFunctionCall",
																"src": "9814:85:10"
															},
															"nativeSrc": "9814:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "9814:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "9656:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9740:9:10",
														"nodeType": "YulTypedName",
														"src": "9740:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9752:6:10",
														"nodeType": "YulTypedName",
														"src": "9752:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9763:4:10",
														"nodeType": "YulTypedName",
														"src": "9763:4:10",
														"type": ""
													}
												],
												"src": "9656:250:10"
											},
											{
												"body": {
													"nativeSrc": "9977:53:10",
													"nodeType": "YulBlock",
													"src": "9977:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9994:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9994:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10017:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10017:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9999:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9999:17:10"
																		},
																		"nativeSrc": "9999:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9999:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9987:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9987:6:10"
																},
																"nativeSrc": "9987:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9987:37:10"
															},
															"nativeSrc": "9987:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9987:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9912:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9965:5:10",
														"nodeType": "YulTypedName",
														"src": "9965:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9972:3:10",
														"nodeType": "YulTypedName",
														"src": "9972:3:10",
														"type": ""
													}
												],
												"src": "9912:118:10"
											},
											{
												"body": {
													"nativeSrc": "10134:124:10",
													"nodeType": "YulBlock",
													"src": "10134:124:10",
													"statements": [
														{
															"nativeSrc": "10144:26:10",
															"nodeType": "YulAssignment",
															"src": "10144:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10156:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10156:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10167:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10167:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10152:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10152:3:10"
																},
																"nativeSrc": "10152:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10152:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10144:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10224:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10224:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10237:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10237:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10248:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10248:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10233:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10233:3:10"
																		},
																		"nativeSrc": "10233:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10233:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10180:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10180:43:10"
																},
																"nativeSrc": "10180:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10180:71:10"
															},
															"nativeSrc": "10180:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10180:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10036:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10106:9:10",
														"nodeType": "YulTypedName",
														"src": "10106:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10118:6:10",
														"nodeType": "YulTypedName",
														"src": "10118:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10129:4:10",
														"nodeType": "YulTypedName",
														"src": "10129:4:10",
														"type": ""
													}
												],
												"src": "10036:222:10"
											},
											{
												"body": {
													"nativeSrc": "10360:73:10",
													"nodeType": "YulBlock",
													"src": "10360:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10377:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10377:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10382:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10382:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10370:6:10"
																},
																"nativeSrc": "10370:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10370:19:10"
															},
															"nativeSrc": "10370:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "10370:19:10"
														},
														{
															"nativeSrc": "10398:29:10",
															"nodeType": "YulAssignment",
															"src": "10398:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10417:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10417:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10422:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10422:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10413:3:10"
																},
																"nativeSrc": "10413:14:10",
																"nodeType": "YulFunctionCall",
																"src": "10413:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10398:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "10398:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10264:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10332:3:10",
														"nodeType": "YulTypedName",
														"src": "10332:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10337:6:10",
														"nodeType": "YulTypedName",
														"src": "10337:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10348:11:10",
														"nodeType": "YulTypedName",
														"src": "10348:11:10",
														"type": ""
													}
												],
												"src": "10264:169:10"
											},
											{
												"body": {
													"nativeSrc": "10545:59:10",
													"nodeType": "YulBlock",
													"src": "10545:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10567:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10567:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10575:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10575:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10563:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:10"
																		},
																		"nativeSrc": "10563:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10563:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e74",
																		"kind": "string",
																		"nativeSrc": "10579:17:10",
																		"nodeType": "YulLiteral",
																		"src": "10579:17:10",
																		"type": "",
																		"value": "Invalid account"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10556:6:10"
																},
																"nativeSrc": "10556:41:10",
																"nodeType": "YulFunctionCall",
																"src": "10556:41:10"
															},
															"nativeSrc": "10556:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "10556:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
												"nativeSrc": "10439:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10537:6:10",
														"nodeType": "YulTypedName",
														"src": "10537:6:10",
														"type": ""
													}
												],
												"src": "10439:165:10"
											},
											{
												"body": {
													"nativeSrc": "10756:220:10",
													"nodeType": "YulBlock",
													"src": "10756:220:10",
													"statements": [
														{
															"nativeSrc": "10766:74:10",
															"nodeType": "YulAssignment",
															"src": "10766:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10832:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10832:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10837:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10837:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10773:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10773:58:10"
																},
																"nativeSrc": "10773:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10773:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10766:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10766:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10938:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10938:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
																	"nativeSrc": "10849:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10849:88:10"
																},
																"nativeSrc": "10849:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10849:93:10"
															},
															"nativeSrc": "10849:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10849:93:10"
														},
														{
															"nativeSrc": "10951:19:10",
															"nodeType": "YulAssignment",
															"src": "10951:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10962:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10962:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10967:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10967:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10958:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10958:3:10"
																},
																"nativeSrc": "10958:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10958:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10951:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10951:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10610:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10744:3:10",
														"nodeType": "YulTypedName",
														"src": "10744:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10752:3:10",
														"nodeType": "YulTypedName",
														"src": "10752:3:10",
														"type": ""
													}
												],
												"src": "10610:366:10"
											},
											{
												"body": {
													"nativeSrc": "11153:248:10",
													"nodeType": "YulBlock",
													"src": "11153:248:10",
													"statements": [
														{
															"nativeSrc": "11163:26:10",
															"nodeType": "YulAssignment",
															"src": "11163:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11175:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11175:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11186:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11186:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11171:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11171:3:10"
																},
																"nativeSrc": "11171:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11171:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11163:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11163:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11210:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11210:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11221:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11221:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11206:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:10"
																		},
																		"nativeSrc": "11206:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11206:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11229:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11229:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11235:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11235:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11225:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11225:3:10"
																		},
																		"nativeSrc": "11225:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11225:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11199:6:10"
																},
																"nativeSrc": "11199:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11199:47:10"
															},
															"nativeSrc": "11199:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11199:47:10"
														},
														{
															"nativeSrc": "11255:139:10",
															"nodeType": "YulAssignment",
															"src": "11255:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11389:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11389:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11263:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11263:124:10"
																},
																"nativeSrc": "11263:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11263:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11255:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11255:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10982:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11133:9:10",
														"nodeType": "YulTypedName",
														"src": "11133:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11148:4:10",
														"nodeType": "YulTypedName",
														"src": "11148:4:10",
														"type": ""
													}
												],
												"src": "10982:419:10"
											},
											{
												"body": {
													"nativeSrc": "11513:63:10",
													"nodeType": "YulBlock",
													"src": "11513:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11535:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11535:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11543:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11543:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11531:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11531:3:10"
																		},
																		"nativeSrc": "11531:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11531:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b6520696e646578",
																		"kind": "string",
																		"nativeSrc": "11547:21:10",
																		"nodeType": "YulLiteral",
																		"src": "11547:21:10",
																		"type": "",
																		"value": "Invalid stake index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11524:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11524:6:10"
																},
																"nativeSrc": "11524:45:10",
																"nodeType": "YulFunctionCall",
																"src": "11524:45:10"
															},
															"nativeSrc": "11524:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "11524:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
												"nativeSrc": "11407:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11505:6:10",
														"nodeType": "YulTypedName",
														"src": "11505:6:10",
														"type": ""
													}
												],
												"src": "11407:169:10"
											},
											{
												"body": {
													"nativeSrc": "11728:220:10",
													"nodeType": "YulBlock",
													"src": "11728:220:10",
													"statements": [
														{
															"nativeSrc": "11738:74:10",
															"nodeType": "YulAssignment",
															"src": "11738:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11804:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11804:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11809:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11809:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11745:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11745:58:10"
																},
																"nativeSrc": "11745:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11745:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11738:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11910:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11910:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																	"nativeSrc": "11821:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11821:88:10"
																},
																"nativeSrc": "11821:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11821:93:10"
															},
															"nativeSrc": "11821:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11821:93:10"
														},
														{
															"nativeSrc": "11923:19:10",
															"nodeType": "YulAssignment",
															"src": "11923:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11934:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11934:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11939:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11939:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11930:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11930:3:10"
																},
																"nativeSrc": "11930:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11930:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11923:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11923:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11582:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11716:3:10",
														"nodeType": "YulTypedName",
														"src": "11716:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11724:3:10",
														"nodeType": "YulTypedName",
														"src": "11724:3:10",
														"type": ""
													}
												],
												"src": "11582:366:10"
											},
											{
												"body": {
													"nativeSrc": "12125:248:10",
													"nodeType": "YulBlock",
													"src": "12125:248:10",
													"statements": [
														{
															"nativeSrc": "12135:26:10",
															"nodeType": "YulAssignment",
															"src": "12135:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12147:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12147:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12158:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12143:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12143:3:10"
																},
																"nativeSrc": "12143:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12143:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12135:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12135:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12182:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12182:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12193:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12193:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:10"
																		},
																		"nativeSrc": "12178:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12178:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12201:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12201:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12207:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12207:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12197:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12197:3:10"
																		},
																		"nativeSrc": "12197:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12197:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12171:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12171:6:10"
																},
																"nativeSrc": "12171:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12171:47:10"
															},
															"nativeSrc": "12171:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12171:47:10"
														},
														{
															"nativeSrc": "12227:139:10",
															"nodeType": "YulAssignment",
															"src": "12227:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12361:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12361:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12235:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12235:124:10"
																},
																"nativeSrc": "12235:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12235:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12227:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12227:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11954:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12105:9:10",
														"nodeType": "YulTypedName",
														"src": "12105:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12120:4:10",
														"nodeType": "YulTypedName",
														"src": "12120:4:10",
														"type": ""
													}
												],
												"src": "11954:419:10"
											},
											{
												"body": {
													"nativeSrc": "12407:152:10",
													"nodeType": "YulBlock",
													"src": "12407:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12424:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12424:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12427:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12427:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12417:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12417:6:10"
																},
																"nativeSrc": "12417:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12417:88:10"
															},
															"nativeSrc": "12417:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12417:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12521:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12521:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12524:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12524:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12514:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12514:6:10"
																},
																"nativeSrc": "12514:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12514:15:10"
															},
															"nativeSrc": "12514:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12514:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12545:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12545:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12548:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12548:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12538:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12538:6:10"
																},
																"nativeSrc": "12538:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12538:15:10"
															},
															"nativeSrc": "12538:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12538:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12379:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12379:180:10"
											},
											{
												"body": {
													"nativeSrc": "12671:59:10",
													"nodeType": "YulBlock",
													"src": "12671:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12693:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12701:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12701:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12689:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12689:3:10"
																		},
																		"nativeSrc": "12689:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12689:14:10"
																	},
																	{
																		"hexValue": "416c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "12705:17:10",
																		"nodeType": "YulLiteral",
																		"src": "12705:17:10",
																		"type": "",
																		"value": "Already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12682:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12682:6:10"
																},
																"nativeSrc": "12682:41:10",
																"nodeType": "YulFunctionCall",
																"src": "12682:41:10"
															},
															"nativeSrc": "12682:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "12682:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
												"nativeSrc": "12565:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12663:6:10",
														"nodeType": "YulTypedName",
														"src": "12663:6:10",
														"type": ""
													}
												],
												"src": "12565:165:10"
											},
											{
												"body": {
													"nativeSrc": "12882:220:10",
													"nodeType": "YulBlock",
													"src": "12882:220:10",
													"statements": [
														{
															"nativeSrc": "12892:74:10",
															"nodeType": "YulAssignment",
															"src": "12892:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12958:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12958:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12963:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12899:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12899:58:10"
																},
																"nativeSrc": "12899:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12899:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12892:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13064:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13064:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																	"nativeSrc": "12975:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12975:88:10"
																},
																"nativeSrc": "12975:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12975:93:10"
															},
															"nativeSrc": "12975:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12975:93:10"
														},
														{
															"nativeSrc": "13077:19:10",
															"nodeType": "YulAssignment",
															"src": "13077:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13088:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13088:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13093:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13093:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13084:3:10"
																},
																"nativeSrc": "13084:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13084:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13077:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13077:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12736:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12870:3:10",
														"nodeType": "YulTypedName",
														"src": "12870:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12878:3:10",
														"nodeType": "YulTypedName",
														"src": "12878:3:10",
														"type": ""
													}
												],
												"src": "12736:366:10"
											},
											{
												"body": {
													"nativeSrc": "13279:248:10",
													"nodeType": "YulBlock",
													"src": "13279:248:10",
													"statements": [
														{
															"nativeSrc": "13289:26:10",
															"nodeType": "YulAssignment",
															"src": "13289:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13301:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13301:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13312:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13312:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13297:3:10"
																},
																"nativeSrc": "13297:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13297:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13289:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13289:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13336:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13336:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13347:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13347:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13332:3:10"
																		},
																		"nativeSrc": "13332:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13332:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13355:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13355:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13361:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13361:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13351:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13351:3:10"
																		},
																		"nativeSrc": "13351:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13351:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13325:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13325:6:10"
																},
																"nativeSrc": "13325:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13325:47:10"
															},
															"nativeSrc": "13325:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13325:47:10"
														},
														{
															"nativeSrc": "13381:139:10",
															"nodeType": "YulAssignment",
															"src": "13381:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13515:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13515:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13389:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13389:124:10"
																},
																"nativeSrc": "13389:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13389:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13381:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13381:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13108:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13259:9:10",
														"nodeType": "YulTypedName",
														"src": "13259:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13274:4:10",
														"nodeType": "YulTypedName",
														"src": "13274:4:10",
														"type": ""
													}
												],
												"src": "13108:419:10"
											},
											{
												"body": {
													"nativeSrc": "13561:152:10",
													"nodeType": "YulBlock",
													"src": "13561:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13578:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13578:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13581:77:10",
																		"nodeType": "YulLiteral",
																		"src": "13581:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13571:6:10"
																},
																"nativeSrc": "13571:88:10",
																"nodeType": "YulFunctionCall",
																"src": "13571:88:10"
															},
															"nativeSrc": "13571:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "13571:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13675:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13675:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13678:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13678:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13668:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13668:6:10"
																},
																"nativeSrc": "13668:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13668:15:10"
															},
															"nativeSrc": "13668:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13668:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13699:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13699:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13702:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13702:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13692:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13692:6:10"
																},
																"nativeSrc": "13692:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13692:15:10"
															},
															"nativeSrc": "13692:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13692:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13533:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "13533:180:10"
											},
											{
												"body": {
													"nativeSrc": "13764:149:10",
													"nodeType": "YulBlock",
													"src": "13764:149:10",
													"statements": [
														{
															"nativeSrc": "13774:25:10",
															"nodeType": "YulAssignment",
															"src": "13774:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13797:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13797:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13779:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13779:17:10"
																},
																"nativeSrc": "13779:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13779:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13774:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13774:1:10"
																}
															]
														},
														{
															"nativeSrc": "13808:25:10",
															"nodeType": "YulAssignment",
															"src": "13808:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13831:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13831:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13813:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13813:17:10"
																},
																"nativeSrc": "13813:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13813:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13808:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13808:1:10"
																}
															]
														},
														{
															"nativeSrc": "13842:17:10",
															"nodeType": "YulAssignment",
															"src": "13842:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13854:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13854:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13857:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13857:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13850:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13850:3:10"
																},
																"nativeSrc": "13850:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13850:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13842:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13842:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13884:22:10",
																"nodeType": "YulBlock",
																"src": "13884:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13886:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13886:16:10"
																			},
																			"nativeSrc": "13886:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13886:18:10"
																		},
																		"nativeSrc": "13886:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13886:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13875:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13875:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13881:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13881:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13872:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13872:2:10"
																},
																"nativeSrc": "13872:11:10",
																"nodeType": "YulFunctionCall",
																"src": "13872:11:10"
															},
															"nativeSrc": "13869:37:10",
															"nodeType": "YulIf",
															"src": "13869:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13719:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13750:1:10",
														"nodeType": "YulTypedName",
														"src": "13750:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13753:1:10",
														"nodeType": "YulTypedName",
														"src": "13753:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13759:4:10",
														"nodeType": "YulTypedName",
														"src": "13759:4:10",
														"type": ""
													}
												],
												"src": "13719:194:10"
											},
											{
												"body": {
													"nativeSrc": "13963:147:10",
													"nodeType": "YulBlock",
													"src": "13963:147:10",
													"statements": [
														{
															"nativeSrc": "13973:25:10",
															"nodeType": "YulAssignment",
															"src": "13973:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13996:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13996:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13978:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13978:17:10"
																},
																"nativeSrc": "13978:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13978:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13973:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13973:1:10"
																}
															]
														},
														{
															"nativeSrc": "14007:25:10",
															"nodeType": "YulAssignment",
															"src": "14007:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14030:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14030:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14012:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14012:17:10"
																},
																"nativeSrc": "14012:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14012:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14007:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14007:1:10"
																}
															]
														},
														{
															"nativeSrc": "14041:16:10",
															"nodeType": "YulAssignment",
															"src": "14041:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14052:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14052:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14055:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14055:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14048:3:10"
																},
																"nativeSrc": "14048:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14048:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14041:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14041:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14081:22:10",
																"nodeType": "YulBlock",
																"src": "14081:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14083:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14083:16:10"
																			},
																			"nativeSrc": "14083:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14083:18:10"
																		},
																		"nativeSrc": "14083:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14083:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14073:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14073:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14076:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14070:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14070:2:10"
																},
																"nativeSrc": "14070:10:10",
																"nodeType": "YulFunctionCall",
																"src": "14070:10:10"
															},
															"nativeSrc": "14067:36:10",
															"nodeType": "YulIf",
															"src": "14067:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13919:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13950:1:10",
														"nodeType": "YulTypedName",
														"src": "13950:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13953:1:10",
														"nodeType": "YulTypedName",
														"src": "13953:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13959:3:10",
														"nodeType": "YulTypedName",
														"src": "13959:3:10",
														"type": ""
													}
												],
												"src": "13919:191:10"
											},
											{
												"body": {
													"nativeSrc": "14164:362:10",
													"nodeType": "YulBlock",
													"src": "14164:362:10",
													"statements": [
														{
															"nativeSrc": "14174:25:10",
															"nodeType": "YulAssignment",
															"src": "14174:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14197:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14197:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14179:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14179:17:10"
																},
																"nativeSrc": "14179:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14179:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14174:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14174:1:10"
																}
															]
														},
														{
															"nativeSrc": "14208:25:10",
															"nodeType": "YulAssignment",
															"src": "14208:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14231:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14231:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14213:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14213:17:10"
																},
																"nativeSrc": "14213:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14213:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14208:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14208:1:10"
																}
															]
														},
														{
															"nativeSrc": "14242:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14242:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14265:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14265:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14268:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14268:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14261:3:10"
																},
																"nativeSrc": "14261:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14261:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14246:11:10",
																	"nodeType": "YulTypedName",
																	"src": "14246:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14279:41:10",
															"nodeType": "YulAssignment",
															"src": "14279:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14308:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "14308:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14290:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14290:17:10"
																},
																"nativeSrc": "14290:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14290:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14279:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14279:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14497:22:10",
																"nodeType": "YulBlock",
																"src": "14497:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14499:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14499:16:10"
																			},
																			"nativeSrc": "14499:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14499:18:10"
																		},
																		"nativeSrc": "14499:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14499:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14430:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14430:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14423:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14423:6:10"
																				},
																				"nativeSrc": "14423:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14423:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14453:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14453:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14460:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "14460:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14469:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "14469:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14456:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "14456:3:10"
																						},
																						"nativeSrc": "14456:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14456:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14450:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "14450:2:10"
																				},
																				"nativeSrc": "14450:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14450:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14403:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14403:2:10"
																		},
																		"nativeSrc": "14403:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14403:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14383:6:10"
																},
																"nativeSrc": "14383:113:10",
																"nodeType": "YulFunctionCall",
																"src": "14383:113:10"
															},
															"nativeSrc": "14380:139:10",
															"nodeType": "YulIf",
															"src": "14380:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14116:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14147:1:10",
														"nodeType": "YulTypedName",
														"src": "14147:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14150:1:10",
														"nodeType": "YulTypedName",
														"src": "14150:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14156:7:10",
														"nodeType": "YulTypedName",
														"src": "14156:7:10",
														"type": ""
													}
												],
												"src": "14116:410:10"
											},
											{
												"body": {
													"nativeSrc": "14560:152:10",
													"nodeType": "YulBlock",
													"src": "14560:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14577:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14577:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14580:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14580:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14570:6:10"
																},
																"nativeSrc": "14570:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14570:88:10"
															},
															"nativeSrc": "14570:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14570:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14674:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14674:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14677:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14677:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14667:6:10"
																},
																"nativeSrc": "14667:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14667:15:10"
															},
															"nativeSrc": "14667:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14667:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14698:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14698:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14701:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14701:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14691:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14691:6:10"
																},
																"nativeSrc": "14691:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14691:15:10"
															},
															"nativeSrc": "14691:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14691:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14532:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14532:180:10"
											},
											{
												"body": {
													"nativeSrc": "14760:143:10",
													"nodeType": "YulBlock",
													"src": "14760:143:10",
													"statements": [
														{
															"nativeSrc": "14770:25:10",
															"nodeType": "YulAssignment",
															"src": "14770:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14793:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14793:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14775:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14775:17:10"
																},
																"nativeSrc": "14775:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14775:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14770:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14770:1:10"
																}
															]
														},
														{
															"nativeSrc": "14804:25:10",
															"nodeType": "YulAssignment",
															"src": "14804:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14827:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14827:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14809:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14809:17:10"
																},
																"nativeSrc": "14809:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14809:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14804:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14804:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14851:22:10",
																"nodeType": "YulBlock",
																"src": "14851:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14853:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14853:16:10"
																			},
																			"nativeSrc": "14853:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14853:18:10"
																		},
																		"nativeSrc": "14853:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14853:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14848:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14848:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14841:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14841:6:10"
																},
																"nativeSrc": "14841:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14841:9:10"
															},
															"nativeSrc": "14838:35:10",
															"nodeType": "YulIf",
															"src": "14838:35:10"
														},
														{
															"nativeSrc": "14883:14:10",
															"nodeType": "YulAssignment",
															"src": "14883:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14892:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14892:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14895:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14895:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14888:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14888:3:10"
																},
																"nativeSrc": "14888:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14888:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14883:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14883:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14718:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14749:1:10",
														"nodeType": "YulTypedName",
														"src": "14749:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14752:1:10",
														"nodeType": "YulTypedName",
														"src": "14752:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14758:1:10",
														"nodeType": "YulTypedName",
														"src": "14758:1:10",
														"type": ""
													}
												],
												"src": "14718:185:10"
											},
											{
												"body": {
													"nativeSrc": "15015:62:10",
													"nodeType": "YulBlock",
													"src": "15015:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15037:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15037:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15045:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15045:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15033:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15033:3:10"
																		},
																		"nativeSrc": "15033:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15033:14:10"
																	},
																	{
																		"hexValue": "43616c6c6572206d75737420626520454f41",
																		"kind": "string",
																		"nativeSrc": "15049:20:10",
																		"nodeType": "YulLiteral",
																		"src": "15049:20:10",
																		"type": "",
																		"value": "Caller must be EOA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15026:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15026:6:10"
																},
																"nativeSrc": "15026:44:10",
																"nodeType": "YulFunctionCall",
																"src": "15026:44:10"
															},
															"nativeSrc": "15026:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "15026:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab",
												"nativeSrc": "14909:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15007:6:10",
														"nodeType": "YulTypedName",
														"src": "15007:6:10",
														"type": ""
													}
												],
												"src": "14909:168:10"
											},
											{
												"body": {
													"nativeSrc": "15229:220:10",
													"nodeType": "YulBlock",
													"src": "15229:220:10",
													"statements": [
														{
															"nativeSrc": "15239:74:10",
															"nodeType": "YulAssignment",
															"src": "15239:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15305:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15305:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15310:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15310:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15246:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15246:58:10"
																},
																"nativeSrc": "15246:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15246:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15239:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15411:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab",
																	"nativeSrc": "15322:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15322:88:10"
																},
																"nativeSrc": "15322:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15322:93:10"
															},
															"nativeSrc": "15322:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15322:93:10"
														},
														{
															"nativeSrc": "15424:19:10",
															"nodeType": "YulAssignment",
															"src": "15424:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15435:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15435:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15440:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15440:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15431:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15431:3:10"
																},
																"nativeSrc": "15431:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15431:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15424:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15424:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15083:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15217:3:10",
														"nodeType": "YulTypedName",
														"src": "15217:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15225:3:10",
														"nodeType": "YulTypedName",
														"src": "15225:3:10",
														"type": ""
													}
												],
												"src": "15083:366:10"
											},
											{
												"body": {
													"nativeSrc": "15626:248:10",
													"nodeType": "YulBlock",
													"src": "15626:248:10",
													"statements": [
														{
															"nativeSrc": "15636:26:10",
															"nodeType": "YulAssignment",
															"src": "15636:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15648:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15648:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15659:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15659:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15644:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:10"
																},
																"nativeSrc": "15644:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15644:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15636:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15636:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15683:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15683:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15694:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15694:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15679:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15679:3:10"
																		},
																		"nativeSrc": "15679:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15679:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15702:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15702:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15708:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15708:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15698:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15698:3:10"
																		},
																		"nativeSrc": "15698:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15698:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15672:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15672:6:10"
																},
																"nativeSrc": "15672:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15672:47:10"
															},
															"nativeSrc": "15672:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15672:47:10"
														},
														{
															"nativeSrc": "15728:139:10",
															"nodeType": "YulAssignment",
															"src": "15728:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15862:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15862:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15736:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15736:124:10"
																},
																"nativeSrc": "15736:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15736:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15728:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15728:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15455:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15606:9:10",
														"nodeType": "YulTypedName",
														"src": "15606:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15621:4:10",
														"nodeType": "YulTypedName",
														"src": "15621:4:10",
														"type": ""
													}
												],
												"src": "15455:419:10"
											},
											{
												"body": {
													"nativeSrc": "15986:65:10",
													"nodeType": "YulBlock",
													"src": "15986:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16008:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16008:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16016:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16016:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16004:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16004:3:10"
																		},
																		"nativeSrc": "16004:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16004:14:10"
																	},
																	{
																		"hexValue": "4175746f2d7374616b696e672064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "16020:23:10",
																		"nodeType": "YulLiteral",
																		"src": "16020:23:10",
																		"type": "",
																		"value": "Auto-staking disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15997:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15997:6:10"
																},
																"nativeSrc": "15997:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15997:47:10"
															},
															"nativeSrc": "15997:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15997:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
												"nativeSrc": "15880:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15978:6:10",
														"nodeType": "YulTypedName",
														"src": "15978:6:10",
														"type": ""
													}
												],
												"src": "15880:171:10"
											},
											{
												"body": {
													"nativeSrc": "16203:220:10",
													"nodeType": "YulBlock",
													"src": "16203:220:10",
													"statements": [
														{
															"nativeSrc": "16213:74:10",
															"nodeType": "YulAssignment",
															"src": "16213:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16279:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16284:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16284:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16220:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16220:58:10"
																},
																"nativeSrc": "16220:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16220:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16213:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16213:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16385:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16385:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
																	"nativeSrc": "16296:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16296:88:10"
																},
																"nativeSrc": "16296:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16296:93:10"
															},
															"nativeSrc": "16296:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16296:93:10"
														},
														{
															"nativeSrc": "16398:19:10",
															"nodeType": "YulAssignment",
															"src": "16398:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16409:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16409:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16414:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16414:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16405:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16405:3:10"
																},
																"nativeSrc": "16405:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16405:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16398:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16398:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16057:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16191:3:10",
														"nodeType": "YulTypedName",
														"src": "16191:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16199:3:10",
														"nodeType": "YulTypedName",
														"src": "16199:3:10",
														"type": ""
													}
												],
												"src": "16057:366:10"
											},
											{
												"body": {
													"nativeSrc": "16600:248:10",
													"nodeType": "YulBlock",
													"src": "16600:248:10",
													"statements": [
														{
															"nativeSrc": "16610:26:10",
															"nodeType": "YulAssignment",
															"src": "16610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16622:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16622:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16633:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16633:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16618:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16618:3:10"
																},
																"nativeSrc": "16618:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16618:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16610:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16610:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16657:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16657:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16668:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16668:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16653:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16653:3:10"
																		},
																		"nativeSrc": "16653:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16653:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16676:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16676:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16682:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16672:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16672:3:10"
																		},
																		"nativeSrc": "16672:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16672:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16646:6:10"
																},
																"nativeSrc": "16646:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16646:47:10"
															},
															"nativeSrc": "16646:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16646:47:10"
														},
														{
															"nativeSrc": "16702:139:10",
															"nodeType": "YulAssignment",
															"src": "16702:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16836:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16836:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16710:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16710:124:10"
																},
																"nativeSrc": "16710:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16710:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16702:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16702:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16429:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16580:9:10",
														"nodeType": "YulTypedName",
														"src": "16580:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16595:4:10",
														"nodeType": "YulTypedName",
														"src": "16595:4:10",
														"type": ""
													}
												],
												"src": "16429:419:10"
											},
											{
												"body": {
													"nativeSrc": "16960:56:10",
													"nodeType": "YulBlock",
													"src": "16960:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16982:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16982:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16990:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16990:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16978:3:10"
																		},
																		"nativeSrc": "16978:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16978:14:10"
																	},
																	{
																		"hexValue": "5374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "16994:14:10",
																		"nodeType": "YulLiteral",
																		"src": "16994:14:10",
																		"type": "",
																		"value": "Still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16971:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16971:6:10"
																},
																"nativeSrc": "16971:38:10",
																"nodeType": "YulFunctionCall",
																"src": "16971:38:10"
															},
															"nativeSrc": "16971:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "16971:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
												"nativeSrc": "16854:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16952:6:10",
														"nodeType": "YulTypedName",
														"src": "16952:6:10",
														"type": ""
													}
												],
												"src": "16854:162:10"
											},
											{
												"body": {
													"nativeSrc": "17168:220:10",
													"nodeType": "YulBlock",
													"src": "17168:220:10",
													"statements": [
														{
															"nativeSrc": "17178:74:10",
															"nodeType": "YulAssignment",
															"src": "17178:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17244:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17244:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17249:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17249:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17185:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17185:58:10"
																},
																"nativeSrc": "17185:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17185:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17178:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17178:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17350:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17350:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																	"nativeSrc": "17261:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17261:88:10"
																},
																"nativeSrc": "17261:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17261:93:10"
															},
															"nativeSrc": "17261:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17261:93:10"
														},
														{
															"nativeSrc": "17363:19:10",
															"nodeType": "YulAssignment",
															"src": "17363:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17374:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17374:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17379:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17379:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17370:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17370:3:10"
																},
																"nativeSrc": "17370:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17370:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17363:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17363:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17022:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17156:3:10",
														"nodeType": "YulTypedName",
														"src": "17156:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17164:3:10",
														"nodeType": "YulTypedName",
														"src": "17164:3:10",
														"type": ""
													}
												],
												"src": "17022:366:10"
											},
											{
												"body": {
													"nativeSrc": "17565:248:10",
													"nodeType": "YulBlock",
													"src": "17565:248:10",
													"statements": [
														{
															"nativeSrc": "17575:26:10",
															"nodeType": "YulAssignment",
															"src": "17575:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17587:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17587:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17598:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17598:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17583:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17583:3:10"
																},
																"nativeSrc": "17583:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17583:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17575:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17575:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17622:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17622:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17633:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17633:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17618:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17618:3:10"
																		},
																		"nativeSrc": "17618:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17618:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17641:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17641:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17647:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17647:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17637:3:10"
																		},
																		"nativeSrc": "17637:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17637:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17611:6:10"
																},
																"nativeSrc": "17611:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17611:47:10"
															},
															"nativeSrc": "17611:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17611:47:10"
														},
														{
															"nativeSrc": "17667:139:10",
															"nodeType": "YulAssignment",
															"src": "17667:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17801:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17801:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17675:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17675:124:10"
																},
																"nativeSrc": "17675:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17675:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17667:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17667:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17394:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17545:9:10",
														"nodeType": "YulTypedName",
														"src": "17545:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17560:4:10",
														"nodeType": "YulTypedName",
														"src": "17560:4:10",
														"type": ""
													}
												],
												"src": "17394:419:10"
											},
											{
												"body": {
													"nativeSrc": "17925:68:10",
													"nodeType": "YulBlock",
													"src": "17925:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17947:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17947:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17955:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17955:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17943:3:10"
																		},
																		"nativeSrc": "17943:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17943:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
																		"kind": "string",
																		"nativeSrc": "17959:26:10",
																		"nodeType": "YulLiteral",
																		"src": "17959:26:10",
																		"type": "",
																		"value": "Insufficient reward pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17936:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17936:6:10"
																},
																"nativeSrc": "17936:50:10",
																"nodeType": "YulFunctionCall",
																"src": "17936:50:10"
															},
															"nativeSrc": "17936:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "17936:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
												"nativeSrc": "17819:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17917:6:10",
														"nodeType": "YulTypedName",
														"src": "17917:6:10",
														"type": ""
													}
												],
												"src": "17819:174:10"
											},
											{
												"body": {
													"nativeSrc": "18145:220:10",
													"nodeType": "YulBlock",
													"src": "18145:220:10",
													"statements": [
														{
															"nativeSrc": "18155:74:10",
															"nodeType": "YulAssignment",
															"src": "18155:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18221:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18221:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18226:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18226:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18162:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18162:58:10"
																},
																"nativeSrc": "18162:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18162:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18155:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18327:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18327:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																	"nativeSrc": "18238:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18238:88:10"
																},
																"nativeSrc": "18238:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18238:93:10"
															},
															"nativeSrc": "18238:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18238:93:10"
														},
														{
															"nativeSrc": "18340:19:10",
															"nodeType": "YulAssignment",
															"src": "18340:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18351:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18351:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18356:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18356:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18347:3:10"
																},
																"nativeSrc": "18347:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18347:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18340:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17999:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18133:3:10",
														"nodeType": "YulTypedName",
														"src": "18133:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18141:3:10",
														"nodeType": "YulTypedName",
														"src": "18141:3:10",
														"type": ""
													}
												],
												"src": "17999:366:10"
											},
											{
												"body": {
													"nativeSrc": "18542:248:10",
													"nodeType": "YulBlock",
													"src": "18542:248:10",
													"statements": [
														{
															"nativeSrc": "18552:26:10",
															"nodeType": "YulAssignment",
															"src": "18552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18560:3:10"
																},
																"nativeSrc": "18560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18552:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18599:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18610:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18610:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18595:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18595:3:10"
																		},
																		"nativeSrc": "18595:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18595:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18618:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18618:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18624:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18624:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18614:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18614:3:10"
																		},
																		"nativeSrc": "18614:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18614:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18588:6:10"
																},
																"nativeSrc": "18588:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18588:47:10"
															},
															"nativeSrc": "18588:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18588:47:10"
														},
														{
															"nativeSrc": "18644:139:10",
															"nodeType": "YulAssignment",
															"src": "18644:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18778:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18778:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18652:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18652:124:10"
																},
																"nativeSrc": "18652:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18652:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18644:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18371:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18522:9:10",
														"nodeType": "YulTypedName",
														"src": "18522:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18537:4:10",
														"nodeType": "YulTypedName",
														"src": "18537:4:10",
														"type": ""
													}
												],
												"src": "18371:419:10"
											},
											{
												"body": {
													"nativeSrc": "18922:206:10",
													"nodeType": "YulBlock",
													"src": "18922:206:10",
													"statements": [
														{
															"nativeSrc": "18932:26:10",
															"nodeType": "YulAssignment",
															"src": "18932:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18944:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18944:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18955:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18955:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18940:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18940:3:10"
																},
																"nativeSrc": "18940:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18940:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18932:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18932:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19012:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19012:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19025:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19025:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19036:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19036:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19021:3:10"
																		},
																		"nativeSrc": "19021:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19021:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18968:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18968:43:10"
																},
																"nativeSrc": "18968:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18968:71:10"
															},
															"nativeSrc": "18968:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18968:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19093:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19093:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19106:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19106:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19117:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19117:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19102:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19102:3:10"
																		},
																		"nativeSrc": "19102:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19102:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19049:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "19049:43:10"
																},
																"nativeSrc": "19049:72:10",
																"nodeType": "YulFunctionCall",
																"src": "19049:72:10"
															},
															"nativeSrc": "19049:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "19049:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18796:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18886:9:10",
														"nodeType": "YulTypedName",
														"src": "18886:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18898:6:10",
														"nodeType": "YulTypedName",
														"src": "18898:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18906:6:10",
														"nodeType": "YulTypedName",
														"src": "18906:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18917:4:10",
														"nodeType": "YulTypedName",
														"src": "18917:4:10",
														"type": ""
													}
												],
												"src": "18796:332:10"
											},
											{
												"body": {
													"nativeSrc": "19240:64:10",
													"nodeType": "YulBlock",
													"src": "19240:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19262:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19262:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19270:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19270:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19258:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19258:3:10"
																		},
																		"nativeSrc": "19258:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19258:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420706572696f6420696e646578",
																		"kind": "string",
																		"nativeSrc": "19274:22:10",
																		"nodeType": "YulLiteral",
																		"src": "19274:22:10",
																		"type": "",
																		"value": "Invalid period index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19251:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19251:6:10"
																},
																"nativeSrc": "19251:46:10",
																"nodeType": "YulFunctionCall",
																"src": "19251:46:10"
															},
															"nativeSrc": "19251:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "19251:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
												"nativeSrc": "19134:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19232:6:10",
														"nodeType": "YulTypedName",
														"src": "19232:6:10",
														"type": ""
													}
												],
												"src": "19134:170:10"
											},
											{
												"body": {
													"nativeSrc": "19456:220:10",
													"nodeType": "YulBlock",
													"src": "19456:220:10",
													"statements": [
														{
															"nativeSrc": "19466:74:10",
															"nodeType": "YulAssignment",
															"src": "19466:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19532:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19532:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19537:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19537:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19473:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19473:58:10"
																},
																"nativeSrc": "19473:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19473:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19466:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19638:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19638:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																	"nativeSrc": "19549:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19549:88:10"
																},
																"nativeSrc": "19549:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19549:93:10"
															},
															"nativeSrc": "19549:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19549:93:10"
														},
														{
															"nativeSrc": "19651:19:10",
															"nodeType": "YulAssignment",
															"src": "19651:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19662:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19662:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19667:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19667:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19658:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19658:3:10"
																},
																"nativeSrc": "19658:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19658:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19651:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19651:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19310:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19444:3:10",
														"nodeType": "YulTypedName",
														"src": "19444:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19452:3:10",
														"nodeType": "YulTypedName",
														"src": "19452:3:10",
														"type": ""
													}
												],
												"src": "19310:366:10"
											},
											{
												"body": {
													"nativeSrc": "19853:248:10",
													"nodeType": "YulBlock",
													"src": "19853:248:10",
													"statements": [
														{
															"nativeSrc": "19863:26:10",
															"nodeType": "YulAssignment",
															"src": "19863:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19875:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19875:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19886:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19886:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19871:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19871:3:10"
																},
																"nativeSrc": "19871:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19871:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19863:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19863:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19910:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19910:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19921:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19921:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19906:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19906:3:10"
																		},
																		"nativeSrc": "19906:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19906:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19929:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19929:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19935:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19935:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19925:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19925:3:10"
																		},
																		"nativeSrc": "19925:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19925:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19899:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19899:6:10"
																},
																"nativeSrc": "19899:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19899:47:10"
															},
															"nativeSrc": "19899:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19899:47:10"
														},
														{
															"nativeSrc": "19955:139:10",
															"nodeType": "YulAssignment",
															"src": "19955:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20089:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20089:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19963:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19963:124:10"
																},
																"nativeSrc": "19963:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19963:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19955:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19955:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19682:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19833:9:10",
														"nodeType": "YulTypedName",
														"src": "19833:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19848:4:10",
														"nodeType": "YulTypedName",
														"src": "19848:4:10",
														"type": ""
													}
												],
												"src": "19682:419:10"
											},
											{
												"body": {
													"nativeSrc": "20213:55:10",
													"nodeType": "YulBlock",
													"src": "20213:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20235:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20235:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20243:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20243:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20231:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20231:3:10"
																		},
																		"nativeSrc": "20231:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20231:14:10"
																	},
																	{
																		"hexValue": "5a65726f20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "20247:13:10",
																		"nodeType": "YulLiteral",
																		"src": "20247:13:10",
																		"type": "",
																		"value": "Zero amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20224:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20224:6:10"
																},
																"nativeSrc": "20224:37:10",
																"nodeType": "YulFunctionCall",
																"src": "20224:37:10"
															},
															"nativeSrc": "20224:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "20224:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
												"nativeSrc": "20107:161:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20205:6:10",
														"nodeType": "YulTypedName",
														"src": "20205:6:10",
														"type": ""
													}
												],
												"src": "20107:161:10"
											},
											{
												"body": {
													"nativeSrc": "20420:220:10",
													"nodeType": "YulBlock",
													"src": "20420:220:10",
													"statements": [
														{
															"nativeSrc": "20430:74:10",
															"nodeType": "YulAssignment",
															"src": "20430:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20496:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20496:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20501:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20501:2:10",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20437:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20437:58:10"
																},
																"nativeSrc": "20437:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20437:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20430:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20430:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20602:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20602:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"nativeSrc": "20513:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20513:88:10"
																},
																"nativeSrc": "20513:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20513:93:10"
															},
															"nativeSrc": "20513:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20513:93:10"
														},
														{
															"nativeSrc": "20615:19:10",
															"nodeType": "YulAssignment",
															"src": "20615:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20626:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20626:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20631:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20631:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20622:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20622:3:10"
																},
																"nativeSrc": "20622:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20622:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20615:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20274:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20408:3:10",
														"nodeType": "YulTypedName",
														"src": "20408:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20416:3:10",
														"nodeType": "YulTypedName",
														"src": "20416:3:10",
														"type": ""
													}
												],
												"src": "20274:366:10"
											},
											{
												"body": {
													"nativeSrc": "20817:248:10",
													"nodeType": "YulBlock",
													"src": "20817:248:10",
													"statements": [
														{
															"nativeSrc": "20827:26:10",
															"nodeType": "YulAssignment",
															"src": "20827:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20839:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20839:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20850:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20835:3:10"
																},
																"nativeSrc": "20835:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20835:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20827:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20827:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20874:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20874:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20885:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20885:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20870:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20870:3:10"
																		},
																		"nativeSrc": "20870:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20870:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20893:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20893:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20899:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20899:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20889:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20889:3:10"
																		},
																		"nativeSrc": "20889:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20889:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20863:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20863:6:10"
																},
																"nativeSrc": "20863:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20863:47:10"
															},
															"nativeSrc": "20863:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20863:47:10"
														},
														{
															"nativeSrc": "20919:139:10",
															"nodeType": "YulAssignment",
															"src": "20919:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21053:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21053:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20927:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20927:124:10"
																},
																"nativeSrc": "20927:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20927:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20919:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20919:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20646:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20797:9:10",
														"nodeType": "YulTypedName",
														"src": "20797:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20812:4:10",
														"nodeType": "YulTypedName",
														"src": "20812:4:10",
														"type": ""
													}
												],
												"src": "20646:419:10"
											},
											{
												"body": {
													"nativeSrc": "21219:282:10",
													"nodeType": "YulBlock",
													"src": "21219:282:10",
													"statements": [
														{
															"nativeSrc": "21229:26:10",
															"nodeType": "YulAssignment",
															"src": "21229:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21241:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21241:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21252:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21252:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21237:3:10"
																},
																"nativeSrc": "21237:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21237:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21229:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21229:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21309:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21309:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21322:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21322:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21333:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21333:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21318:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21318:3:10"
																		},
																		"nativeSrc": "21318:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21318:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21265:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21265:43:10"
																},
																"nativeSrc": "21265:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21265:71:10"
															},
															"nativeSrc": "21265:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21265:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21390:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21390:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21403:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21403:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21414:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21414:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21399:3:10"
																		},
																		"nativeSrc": "21399:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21399:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21346:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21346:43:10"
																},
																"nativeSrc": "21346:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21346:72:10"
															},
															"nativeSrc": "21346:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21346:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21466:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21466:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21479:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21479:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21490:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21490:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21475:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21475:3:10"
																		},
																		"nativeSrc": "21475:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21475:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "21428:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "21428:37:10"
																},
																"nativeSrc": "21428:66:10",
																"nodeType": "YulFunctionCall",
																"src": "21428:66:10"
															},
															"nativeSrc": "21428:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "21428:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "21071:430:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21175:9:10",
														"nodeType": "YulTypedName",
														"src": "21175:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21187:6:10",
														"nodeType": "YulTypedName",
														"src": "21187:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21195:6:10",
														"nodeType": "YulTypedName",
														"src": "21195:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21203:6:10",
														"nodeType": "YulTypedName",
														"src": "21203:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21214:4:10",
														"nodeType": "YulTypedName",
														"src": "21214:4:10",
														"type": ""
													}
												],
												"src": "21071:430:10"
											},
											{
												"body": {
													"nativeSrc": "21613:56:10",
													"nodeType": "YulBlock",
													"src": "21613:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21635:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21635:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21643:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21643:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21631:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21631:3:10"
																		},
																		"nativeSrc": "21631:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21631:14:10"
																	},
																	{
																		"hexValue": "41505920746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "21647:14:10",
																		"nodeType": "YulLiteral",
																		"src": "21647:14:10",
																		"type": "",
																		"value": "APY too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21624:6:10"
																},
																"nativeSrc": "21624:38:10",
																"nodeType": "YulFunctionCall",
																"src": "21624:38:10"
															},
															"nativeSrc": "21624:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "21624:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
												"nativeSrc": "21507:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21605:6:10",
														"nodeType": "YulTypedName",
														"src": "21605:6:10",
														"type": ""
													}
												],
												"src": "21507:162:10"
											},
											{
												"body": {
													"nativeSrc": "21821:220:10",
													"nodeType": "YulBlock",
													"src": "21821:220:10",
													"statements": [
														{
															"nativeSrc": "21831:74:10",
															"nodeType": "YulAssignment",
															"src": "21831:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21897:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21897:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21902:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21902:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21838:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21838:58:10"
																},
																"nativeSrc": "21838:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21838:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21831:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21831:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22003:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22003:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
																	"nativeSrc": "21914:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21914:88:10"
																},
																"nativeSrc": "21914:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21914:93:10"
															},
															"nativeSrc": "21914:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21914:93:10"
														},
														{
															"nativeSrc": "22016:19:10",
															"nodeType": "YulAssignment",
															"src": "22016:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22027:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22027:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22032:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22032:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22023:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22023:3:10"
																},
																"nativeSrc": "22023:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22023:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22016:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22016:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21675:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21809:3:10",
														"nodeType": "YulTypedName",
														"src": "21809:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21817:3:10",
														"nodeType": "YulTypedName",
														"src": "21817:3:10",
														"type": ""
													}
												],
												"src": "21675:366:10"
											},
											{
												"body": {
													"nativeSrc": "22218:248:10",
													"nodeType": "YulBlock",
													"src": "22218:248:10",
													"statements": [
														{
															"nativeSrc": "22228:26:10",
															"nodeType": "YulAssignment",
															"src": "22228:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22240:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22240:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22251:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22251:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22236:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22236:3:10"
																},
																"nativeSrc": "22236:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22236:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22228:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22228:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22275:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22275:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22286:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22286:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22271:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22271:3:10"
																		},
																		"nativeSrc": "22271:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22271:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22294:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22294:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22300:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22300:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22290:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22290:3:10"
																		},
																		"nativeSrc": "22290:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22290:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22264:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22264:6:10"
																},
																"nativeSrc": "22264:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22264:47:10"
															},
															"nativeSrc": "22264:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22264:47:10"
														},
														{
															"nativeSrc": "22320:139:10",
															"nodeType": "YulAssignment",
															"src": "22320:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22454:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22454:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22328:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22328:124:10"
																},
																"nativeSrc": "22328:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22328:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22320:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22320:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22047:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22198:9:10",
														"nodeType": "YulTypedName",
														"src": "22198:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22213:4:10",
														"nodeType": "YulTypedName",
														"src": "22213:4:10",
														"type": ""
													}
												],
												"src": "22047:419:10"
											},
											{
												"body": {
													"nativeSrc": "22592:200:10",
													"nodeType": "YulBlock",
													"src": "22592:200:10",
													"statements": [
														{
															"nativeSrc": "22602:26:10",
															"nodeType": "YulAssignment",
															"src": "22602:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22614:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22614:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22625:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22625:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22610:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22610:3:10"
																},
																"nativeSrc": "22610:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22610:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22602:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22602:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22682:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22682:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22695:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22695:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22706:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22706:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22691:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22691:3:10"
																		},
																		"nativeSrc": "22691:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22691:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22638:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22638:43:10"
																},
																"nativeSrc": "22638:71:10",
																"nodeType": "YulFunctionCall",
																"src": "22638:71:10"
															},
															"nativeSrc": "22638:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "22638:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22757:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22757:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22770:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22770:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22781:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22781:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22766:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22766:3:10"
																		},
																		"nativeSrc": "22766:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22766:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "22719:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "22719:37:10"
																},
																"nativeSrc": "22719:66:10",
																"nodeType": "YulFunctionCall",
																"src": "22719:66:10"
															},
															"nativeSrc": "22719:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "22719:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "22472:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22556:9:10",
														"nodeType": "YulTypedName",
														"src": "22556:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22568:6:10",
														"nodeType": "YulTypedName",
														"src": "22568:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22576:6:10",
														"nodeType": "YulTypedName",
														"src": "22576:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22587:4:10",
														"nodeType": "YulTypedName",
														"src": "22587:4:10",
														"type": ""
													}
												],
												"src": "22472:320:10"
											},
											{
												"body": {
													"nativeSrc": "22904:64:10",
													"nodeType": "YulBlock",
													"src": "22904:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22926:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22926:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22934:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22934:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22922:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22922:3:10"
																		},
																		"nativeSrc": "22922:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22922:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420666565207265636569766572",
																		"kind": "string",
																		"nativeSrc": "22938:22:10",
																		"nodeType": "YulLiteral",
																		"src": "22938:22:10",
																		"type": "",
																		"value": "Invalid fee receiver"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22915:6:10"
																},
																"nativeSrc": "22915:46:10",
																"nodeType": "YulFunctionCall",
																"src": "22915:46:10"
															},
															"nativeSrc": "22915:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "22915:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
												"nativeSrc": "22798:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22896:6:10",
														"nodeType": "YulTypedName",
														"src": "22896:6:10",
														"type": ""
													}
												],
												"src": "22798:170:10"
											},
											{
												"body": {
													"nativeSrc": "23120:220:10",
													"nodeType": "YulBlock",
													"src": "23120:220:10",
													"statements": [
														{
															"nativeSrc": "23130:74:10",
															"nodeType": "YulAssignment",
															"src": "23130:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23196:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23196:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23201:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23137:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23137:58:10"
																},
																"nativeSrc": "23137:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23137:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23130:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23130:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23302:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23302:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																	"nativeSrc": "23213:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "23213:88:10"
																},
																"nativeSrc": "23213:93:10",
																"nodeType": "YulFunctionCall",
																"src": "23213:93:10"
															},
															"nativeSrc": "23213:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "23213:93:10"
														},
														{
															"nativeSrc": "23315:19:10",
															"nodeType": "YulAssignment",
															"src": "23315:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23326:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23326:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23331:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23331:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23322:3:10"
																},
																"nativeSrc": "23322:12:10",
																"nodeType": "YulFunctionCall",
																"src": "23322:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23315:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23315:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22974:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23108:3:10",
														"nodeType": "YulTypedName",
														"src": "23108:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23116:3:10",
														"nodeType": "YulTypedName",
														"src": "23116:3:10",
														"type": ""
													}
												],
												"src": "22974:366:10"
											},
											{
												"body": {
													"nativeSrc": "23517:248:10",
													"nodeType": "YulBlock",
													"src": "23517:248:10",
													"statements": [
														{
															"nativeSrc": "23527:26:10",
															"nodeType": "YulAssignment",
															"src": "23527:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23539:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23539:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23550:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23550:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23535:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23535:3:10"
																},
																"nativeSrc": "23535:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23535:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23527:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23527:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23574:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23574:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23585:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23585:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23570:3:10"
																		},
																		"nativeSrc": "23570:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23570:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23593:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23593:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23599:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23589:3:10"
																		},
																		"nativeSrc": "23589:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23589:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23563:6:10"
																},
																"nativeSrc": "23563:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23563:47:10"
															},
															"nativeSrc": "23563:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23563:47:10"
														},
														{
															"nativeSrc": "23619:139:10",
															"nodeType": "YulAssignment",
															"src": "23619:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23753:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23753:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23627:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23627:124:10"
																},
																"nativeSrc": "23627:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23627:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23619:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23619:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23346:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23497:9:10",
														"nodeType": "YulTypedName",
														"src": "23497:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23512:4:10",
														"nodeType": "YulTypedName",
														"src": "23512:4:10",
														"type": ""
													}
												],
												"src": "23346:419:10"
											},
											{
												"body": {
													"nativeSrc": "23877:66:10",
													"nodeType": "YulBlock",
													"src": "23877:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23899:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23899:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23907:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23907:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23895:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23895:3:10"
																		},
																		"nativeSrc": "23895:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23895:14:10"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "23911:24:10",
																		"nodeType": "YulLiteral",
																		"src": "23911:24:10",
																		"type": "",
																		"value": "No rewards to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23888:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23888:6:10"
																},
																"nativeSrc": "23888:48:10",
																"nodeType": "YulFunctionCall",
																"src": "23888:48:10"
															},
															"nativeSrc": "23888:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "23888:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
												"nativeSrc": "23771:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23869:6:10",
														"nodeType": "YulTypedName",
														"src": "23869:6:10",
														"type": ""
													}
												],
												"src": "23771:172:10"
											},
											{
												"body": {
													"nativeSrc": "24095:220:10",
													"nodeType": "YulBlock",
													"src": "24095:220:10",
													"statements": [
														{
															"nativeSrc": "24105:74:10",
															"nodeType": "YulAssignment",
															"src": "24105:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24171:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24176:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24176:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24112:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "24112:58:10"
																},
																"nativeSrc": "24112:67:10",
																"nodeType": "YulFunctionCall",
																"src": "24112:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24105:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24105:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24277:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																	"nativeSrc": "24188:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24188:88:10"
																},
																"nativeSrc": "24188:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24188:93:10"
															},
															"nativeSrc": "24188:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24188:93:10"
														},
														{
															"nativeSrc": "24290:19:10",
															"nodeType": "YulAssignment",
															"src": "24290:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24301:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24301:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24306:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24306:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24297:3:10"
																},
																"nativeSrc": "24297:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24297:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24290:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24290:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23949:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24083:3:10",
														"nodeType": "YulTypedName",
														"src": "24083:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24091:3:10",
														"nodeType": "YulTypedName",
														"src": "24091:3:10",
														"type": ""
													}
												],
												"src": "23949:366:10"
											},
											{
												"body": {
													"nativeSrc": "24492:248:10",
													"nodeType": "YulBlock",
													"src": "24492:248:10",
													"statements": [
														{
															"nativeSrc": "24502:26:10",
															"nodeType": "YulAssignment",
															"src": "24502:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24514:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24514:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24525:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24525:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24510:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24510:3:10"
																},
																"nativeSrc": "24510:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24510:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24502:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24502:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24549:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24549:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24560:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24560:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24545:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24545:3:10"
																		},
																		"nativeSrc": "24545:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24545:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24568:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24568:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24574:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24574:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24564:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24564:3:10"
																		},
																		"nativeSrc": "24564:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24564:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24538:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24538:6:10"
																},
																"nativeSrc": "24538:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24538:47:10"
															},
															"nativeSrc": "24538:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24538:47:10"
														},
														{
															"nativeSrc": "24594:139:10",
															"nodeType": "YulAssignment",
															"src": "24594:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24728:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "24728:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24602:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24602:124:10"
																},
																"nativeSrc": "24602:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24602:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24594:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24594:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24321:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24472:9:10",
														"nodeType": "YulTypedName",
														"src": "24472:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24487:4:10",
														"nodeType": "YulTypedName",
														"src": "24487:4:10",
														"type": ""
													}
												],
												"src": "24321:419:10"
											},
											{
												"body": {
													"nativeSrc": "24852:64:10",
													"nodeType": "YulBlock",
													"src": "24852:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24874:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24874:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24882:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24882:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24870:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24870:3:10"
																		},
																		"nativeSrc": "24870:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24870:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "24886:22:10",
																		"nodeType": "YulLiteral",
																		"src": "24886:22:10",
																		"type": "",
																		"value": "Invalid reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24863:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24863:6:10"
																},
																"nativeSrc": "24863:46:10",
																"nodeType": "YulFunctionCall",
																"src": "24863:46:10"
															},
															"nativeSrc": "24863:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "24863:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
												"nativeSrc": "24746:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24844:6:10",
														"nodeType": "YulTypedName",
														"src": "24844:6:10",
														"type": ""
													}
												],
												"src": "24746:170:10"
											},
											{
												"body": {
													"nativeSrc": "25068:220:10",
													"nodeType": "YulBlock",
													"src": "25068:220:10",
													"statements": [
														{
															"nativeSrc": "25078:74:10",
															"nodeType": "YulAssignment",
															"src": "25078:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25144:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25144:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25149:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25149:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25085:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "25085:58:10"
																},
																"nativeSrc": "25085:67:10",
																"nodeType": "YulFunctionCall",
																"src": "25085:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25078:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25078:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25250:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25250:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																	"nativeSrc": "25161:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "25161:88:10"
																},
																"nativeSrc": "25161:93:10",
																"nodeType": "YulFunctionCall",
																"src": "25161:93:10"
															},
															"nativeSrc": "25161:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "25161:93:10"
														},
														{
															"nativeSrc": "25263:19:10",
															"nodeType": "YulAssignment",
															"src": "25263:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25274:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25274:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25279:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25279:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25270:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25270:3:10"
																},
																"nativeSrc": "25270:12:10",
																"nodeType": "YulFunctionCall",
																"src": "25270:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25263:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25263:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24922:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25056:3:10",
														"nodeType": "YulTypedName",
														"src": "25056:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25064:3:10",
														"nodeType": "YulTypedName",
														"src": "25064:3:10",
														"type": ""
													}
												],
												"src": "24922:366:10"
											},
											{
												"body": {
													"nativeSrc": "25465:248:10",
													"nodeType": "YulBlock",
													"src": "25465:248:10",
													"statements": [
														{
															"nativeSrc": "25475:26:10",
															"nodeType": "YulAssignment",
															"src": "25475:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25487:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25487:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25498:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25498:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25483:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25483:3:10"
																},
																"nativeSrc": "25483:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25483:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25475:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25475:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25522:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25522:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25533:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25533:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25518:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25518:3:10"
																		},
																		"nativeSrc": "25518:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25518:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25541:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "25541:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25547:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25547:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25537:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25537:3:10"
																		},
																		"nativeSrc": "25537:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25537:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25511:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25511:6:10"
																},
																"nativeSrc": "25511:47:10",
																"nodeType": "YulFunctionCall",
																"src": "25511:47:10"
															},
															"nativeSrc": "25511:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "25511:47:10"
														},
														{
															"nativeSrc": "25567:139:10",
															"nodeType": "YulAssignment",
															"src": "25567:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25701:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "25701:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25575:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "25575:124:10"
																},
																"nativeSrc": "25575:131:10",
																"nodeType": "YulFunctionCall",
																"src": "25575:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25567:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25567:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25294:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25445:9:10",
														"nodeType": "YulTypedName",
														"src": "25445:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25460:4:10",
														"nodeType": "YulTypedName",
														"src": "25460:4:10",
														"type": ""
													}
												],
												"src": "25294:419:10"
											},
											{
												"body": {
													"nativeSrc": "25825:67:10",
													"nodeType": "YulBlock",
													"src": "25825:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25847:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "25847:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25855:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25855:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25843:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25843:3:10"
																		},
																		"nativeSrc": "25843:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25843:14:10"
																	},
																	{
																		"hexValue": "556e737570706f72746564206c6f636b20706572696f64",
																		"kind": "string",
																		"nativeSrc": "25859:25:10",
																		"nodeType": "YulLiteral",
																		"src": "25859:25:10",
																		"type": "",
																		"value": "Unsupported lock period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25836:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25836:6:10"
																},
																"nativeSrc": "25836:49:10",
																"nodeType": "YulFunctionCall",
																"src": "25836:49:10"
															},
															"nativeSrc": "25836:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "25836:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
												"nativeSrc": "25719:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25817:6:10",
														"nodeType": "YulTypedName",
														"src": "25817:6:10",
														"type": ""
													}
												],
												"src": "25719:173:10"
											},
											{
												"body": {
													"nativeSrc": "26044:220:10",
													"nodeType": "YulBlock",
													"src": "26044:220:10",
													"statements": [
														{
															"nativeSrc": "26054:74:10",
															"nodeType": "YulAssignment",
															"src": "26054:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26120:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26120:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26125:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26125:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26061:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "26061:58:10"
																},
																"nativeSrc": "26061:67:10",
																"nodeType": "YulFunctionCall",
																"src": "26061:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26054:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26054:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26226:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26226:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
																	"nativeSrc": "26137:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "26137:88:10"
																},
																"nativeSrc": "26137:93:10",
																"nodeType": "YulFunctionCall",
																"src": "26137:93:10"
															},
															"nativeSrc": "26137:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "26137:93:10"
														},
														{
															"nativeSrc": "26239:19:10",
															"nodeType": "YulAssignment",
															"src": "26239:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26250:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26250:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26255:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26255:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26246:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26246:3:10"
																},
																"nativeSrc": "26246:12:10",
																"nodeType": "YulFunctionCall",
																"src": "26246:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26239:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25898:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26032:3:10",
														"nodeType": "YulTypedName",
														"src": "26032:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26040:3:10",
														"nodeType": "YulTypedName",
														"src": "26040:3:10",
														"type": ""
													}
												],
												"src": "25898:366:10"
											},
											{
												"body": {
													"nativeSrc": "26441:248:10",
													"nodeType": "YulBlock",
													"src": "26441:248:10",
													"statements": [
														{
															"nativeSrc": "26451:26:10",
															"nodeType": "YulAssignment",
															"src": "26451:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26463:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26463:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26474:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26459:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26459:3:10"
																},
																"nativeSrc": "26459:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26459:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26451:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26451:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26498:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26498:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26509:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26509:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26494:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26494:3:10"
																		},
																		"nativeSrc": "26494:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26494:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26517:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "26517:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26523:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26523:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26513:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26513:3:10"
																		},
																		"nativeSrc": "26513:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26513:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26487:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26487:6:10"
																},
																"nativeSrc": "26487:47:10",
																"nodeType": "YulFunctionCall",
																"src": "26487:47:10"
															},
															"nativeSrc": "26487:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "26487:47:10"
														},
														{
															"nativeSrc": "26543:139:10",
															"nodeType": "YulAssignment",
															"src": "26543:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26677:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "26677:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26551:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "26551:124:10"
																},
																"nativeSrc": "26551:131:10",
																"nodeType": "YulFunctionCall",
																"src": "26551:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26543:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26543:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26270:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26421:9:10",
														"nodeType": "YulTypedName",
														"src": "26421:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26436:4:10",
														"nodeType": "YulTypedName",
														"src": "26436:4:10",
														"type": ""
													}
												],
												"src": "26270:419:10"
											},
											{
												"body": {
													"nativeSrc": "26801:75:10",
													"nodeType": "YulBlock",
													"src": "26801:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26823:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "26823:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26831:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26831:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26819:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26819:3:10"
																		},
																		"nativeSrc": "26819:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26819:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "26835:33:10",
																		"nodeType": "YulLiteral",
																		"src": "26835:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26812:6:10"
																},
																"nativeSrc": "26812:57:10",
																"nodeType": "YulFunctionCall",
																"src": "26812:57:10"
															},
															"nativeSrc": "26812:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "26812:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "26695:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26793:6:10",
														"nodeType": "YulTypedName",
														"src": "26793:6:10",
														"type": ""
													}
												],
												"src": "26695:181:10"
											},
											{
												"body": {
													"nativeSrc": "27028:220:10",
													"nodeType": "YulBlock",
													"src": "27028:220:10",
													"statements": [
														{
															"nativeSrc": "27038:74:10",
															"nodeType": "YulAssignment",
															"src": "27038:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27104:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27104:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27109:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27109:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27045:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "27045:58:10"
																},
																"nativeSrc": "27045:67:10",
																"nodeType": "YulFunctionCall",
																"src": "27045:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27038:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27038:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27210:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27210:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "27121:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "27121:88:10"
																},
																"nativeSrc": "27121:93:10",
																"nodeType": "YulFunctionCall",
																"src": "27121:93:10"
															},
															"nativeSrc": "27121:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "27121:93:10"
														},
														{
															"nativeSrc": "27223:19:10",
															"nodeType": "YulAssignment",
															"src": "27223:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27234:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27239:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27239:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27230:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27230:3:10"
																},
																"nativeSrc": "27230:12:10",
																"nodeType": "YulFunctionCall",
																"src": "27230:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27223:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27223:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26882:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27016:3:10",
														"nodeType": "YulTypedName",
														"src": "27016:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27024:3:10",
														"nodeType": "YulTypedName",
														"src": "27024:3:10",
														"type": ""
													}
												],
												"src": "26882:366:10"
											},
											{
												"body": {
													"nativeSrc": "27425:248:10",
													"nodeType": "YulBlock",
													"src": "27425:248:10",
													"statements": [
														{
															"nativeSrc": "27435:26:10",
															"nodeType": "YulAssignment",
															"src": "27435:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27447:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "27447:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27458:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27458:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27443:3:10"
																},
																"nativeSrc": "27443:18:10",
																"nodeType": "YulFunctionCall",
																"src": "27443:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27435:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27435:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27482:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27482:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27493:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27493:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27478:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27478:3:10"
																		},
																		"nativeSrc": "27478:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27478:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "27501:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27507:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27507:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27497:3:10"
																		},
																		"nativeSrc": "27497:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27497:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27471:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27471:6:10"
																},
																"nativeSrc": "27471:47:10",
																"nodeType": "YulFunctionCall",
																"src": "27471:47:10"
															},
															"nativeSrc": "27471:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "27471:47:10"
														},
														{
															"nativeSrc": "27527:139:10",
															"nodeType": "YulAssignment",
															"src": "27527:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27661:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "27661:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27535:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "27535:124:10"
																},
																"nativeSrc": "27535:131:10",
																"nodeType": "YulFunctionCall",
																"src": "27535:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27527:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27527:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27254:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27405:9:10",
														"nodeType": "YulTypedName",
														"src": "27405:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27420:4:10",
														"nodeType": "YulTypedName",
														"src": "27420:4:10",
														"type": ""
													}
												],
												"src": "27254:419:10"
											},
											{
												"body": {
													"nativeSrc": "27833:288:10",
													"nodeType": "YulBlock",
													"src": "27833:288:10",
													"statements": [
														{
															"nativeSrc": "27843:26:10",
															"nodeType": "YulAssignment",
															"src": "27843:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27855:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "27855:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27866:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27866:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27851:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27851:3:10"
																},
																"nativeSrc": "27851:18:10",
																"nodeType": "YulFunctionCall",
																"src": "27851:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27843:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27843:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27923:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27923:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27936:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27936:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27947:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27947:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27932:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27932:3:10"
																		},
																		"nativeSrc": "27932:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27932:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27879:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "27879:43:10"
																},
																"nativeSrc": "27879:71:10",
																"nodeType": "YulFunctionCall",
																"src": "27879:71:10"
															},
															"nativeSrc": "27879:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "27879:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28004:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28004:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28017:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28017:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28028:2:10",
																				"nodeType": "YulLiteral",
																				"src": "28028:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28013:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28013:3:10"
																		},
																		"nativeSrc": "28013:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28013:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27960:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "27960:43:10"
																},
																"nativeSrc": "27960:72:10",
																"nodeType": "YulFunctionCall",
																"src": "27960:72:10"
															},
															"nativeSrc": "27960:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "27960:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28086:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28086:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28099:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28099:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28110:2:10",
																				"nodeType": "YulLiteral",
																				"src": "28110:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28095:3:10"
																		},
																		"nativeSrc": "28095:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28095:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28042:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28042:43:10"
																},
																"nativeSrc": "28042:72:10",
																"nodeType": "YulFunctionCall",
																"src": "28042:72:10"
															},
															"nativeSrc": "28042:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "28042:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "27679:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27789:9:10",
														"nodeType": "YulTypedName",
														"src": "27789:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27801:6:10",
														"nodeType": "YulTypedName",
														"src": "27801:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27809:6:10",
														"nodeType": "YulTypedName",
														"src": "27809:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27817:6:10",
														"nodeType": "YulTypedName",
														"src": "27817:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27828:4:10",
														"nodeType": "YulTypedName",
														"src": "27828:4:10",
														"type": ""
													}
												],
												"src": "27679:442:10"
											},
											{
												"body": {
													"nativeSrc": "28253:206:10",
													"nodeType": "YulBlock",
													"src": "28253:206:10",
													"statements": [
														{
															"nativeSrc": "28263:26:10",
															"nodeType": "YulAssignment",
															"src": "28263:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28275:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "28275:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28286:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28286:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28271:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28271:3:10"
																},
																"nativeSrc": "28271:18:10",
																"nodeType": "YulFunctionCall",
																"src": "28271:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28263:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "28263:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28343:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28343:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28356:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28356:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28367:1:10",
																				"nodeType": "YulLiteral",
																				"src": "28367:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28352:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28352:3:10"
																		},
																		"nativeSrc": "28352:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28352:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28299:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28299:43:10"
																},
																"nativeSrc": "28299:71:10",
																"nodeType": "YulFunctionCall",
																"src": "28299:71:10"
															},
															"nativeSrc": "28299:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "28299:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28424:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28424:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28437:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28437:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28448:2:10",
																				"nodeType": "YulLiteral",
																				"src": "28448:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28433:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28433:3:10"
																		},
																		"nativeSrc": "28433:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28433:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28380:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28380:43:10"
																},
																"nativeSrc": "28380:72:10",
																"nodeType": "YulFunctionCall",
																"src": "28380:72:10"
															},
															"nativeSrc": "28380:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "28380:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "28127:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28217:9:10",
														"nodeType": "YulTypedName",
														"src": "28217:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28229:6:10",
														"nodeType": "YulTypedName",
														"src": "28229:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28237:6:10",
														"nodeType": "YulTypedName",
														"src": "28237:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28248:4:10",
														"nodeType": "YulTypedName",
														"src": "28248:4:10",
														"type": ""
													}
												],
												"src": "28127:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct AutoStaking.StakeInfo -> struct AutoStaking.StakeInfo\n    function abi_encode_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakeTime\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // unlockTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimed\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // autoStaking\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // compoundedAmount\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct AutoStaking.StakeInfo[] -> struct AutoStaking.StakeInfo[]\n    function abi_encode_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_StakeInfo_$944_memory_ptr_to_t_struct$_StakeInfo_$944_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid account\")\n\n    }\n\n    function abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake index\")\n\n    }\n\n    function abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller must be EOA\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auto-staking disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583(memPtr) {\n\n        mstore(add(memPtr, 0), \"Still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid period index\")\n\n    }\n\n    function abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"APY too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee receiver\")\n\n    }\n\n    function abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unsupported lock period\")\n\n    }\n\n    function abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"904": [
									{
										"length": 32,
										"start": 3292
									},
									{
										"length": 32,
										"start": 4152
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610171575f3560e01c80637a5c08ae116100dc578063bbd36b6111610095578063e6a69ab81161006f578063e6a69ab814610426578063f2fde38b14610444578063f7c618c114610460578063f8cf31cb1461047e57610171565b8063bbd36b61146103e4578063c69bebe414610400578063c7b8981c1461041c57610171565b80637a5c08ae14610334578063817b1cd2146103525780638da5cb5b1461037057806395a290601461038e578063ae169a50146103aa578063b3f00674146103c657610171565b8063561b24631161012e578063561b24631461026f578063584b62a11461028b5780635acd2e4c146102c05780636b494def146102dc578063715018a61461030c57806372f702f31461031657610171565b80630630e463146101755780631747e0b0146101a55780631852e8d9146101d557806338bceaac146102055780634060e257146102235780634c8f2a781461023f575b5f5ffd5b61018f600480360381019061018a9190612019565b61049a565b60405161019c919061205c565b60405180910390f35b6101bf60048036038101906101ba9190612019565b6104af565b6040516101cc91906121bf565b60405180910390f35b6101ef60048036038101906101ea9190612209565b6105a4565b6040516101fc919061205c565b60405180910390f35b61020d610862565b60405161021a919061205c565b60405180910390f35b61023d60048036038101906102389190612247565b610867565b005b61025960048036038101906102549190612247565b610bc0565b604051610266919061205c565b60405180910390f35b6102896004803603810190610284919061229c565b610bd9565b005b6102a560048036038101906102a09190612209565b610eb8565b6040516102b7969594939291906122fb565b60405180910390f35b6102da60048036038101906102d5919061235a565b610f23565b005b6102f660048036038101906102f19190612247565b61100a565b604051610303919061205c565b60405180910390f35b610314611023565b005b61031e611036565b60405161032b91906123f3565b60405180910390f35b61033c61105a565b604051610349919061205c565b60405180910390f35b61035a611060565b604051610367919061205c565b60405180910390f35b610378611066565b604051610385919061241b565b60405180910390f35b6103a860048036038101906103a39190612247565b61108d565b005b6103c460048036038101906103bf9190612247565b611256565b005b6103ce6116cc565b6040516103db919061241b565b60405180910390f35b6103fe60048036038101906103f99190612247565b6116f1565b005b61041a60048036038101906104159190612019565b6117db565b005b6104246118d7565b005b61042e611a49565b60405161043b919061205c565b60405180910390f35b61045e60048036038101906104599190612019565b611a51565b005b610468611ad5565b60405161047591906123f3565b60405180910390f35b61049860048036038101906104939190612019565b611afa565b005b600b602052805f5260405f205f915090505481565b6060600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610599578382905f5260205f2090600502016040518060c00160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581526020016003820160019054906101000a900460ff161515151581526020016004820154815250508152602001906001019061050d565b505050509050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a9061248e565b60405180910390fd5b600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508210610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c906124f6565b60405180910390fd5b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106106e5576106e4612514565b5b905f5260205f2090600502016040518060c00160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581526020016003820160019054906101000a900460ff16151515158152602001600482015481525050905080606001511561079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107969061258b565b60405180910390fd5b5f81604001519050816080015180156107b757508042115b156107c0574290505b5f8260200151826107d191906125d6565b90505f6107f0846020015185604001516107eb91906125d6565b611bf6565b90505f6007826003811061080757610806612514565b5b015490505f8560a00151865f015161081f9190612609565b90506301e13380612710610833919061263c565b848383610840919061263c565b61084a919061263c565b61085491906126aa565b965050505050505092915050565b603281565b61086f611c78565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146108dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d490612724565b60405180910390fd5b5f339050600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508210610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906124f6565b60405180910390fd5b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106109b3576109b2612514565b5b905f5260205f2090600502019050806003015f9054906101000a900460ff1615610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a099061258b565b60405180910390fd5b8060030160019054906101000a900460ff16610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a9061278c565b60405180910390fd5b8060020154421015610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa1906127f4565b60405180910390fd5b5f610ab583856105a4565b905080600d541015610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af39061285c565b60405180910390fd5b42826001018190555081600101548260020154610b1991906125d6565b42610b249190612609565b826002018190555080826004015f828254610b3f9190612609565b9250508190555080600d5f828254610b5791906125d6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f593662cbe53e88df3fef748665b8c3d3142e5d34dc1b24290f7e953537a00183858460040154604051610baa92919061287a565b60405180910390a2505050610bbd611cc7565b50565b60048160038110610bcf575f80fd5b015f915090505481565b610be1611c78565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690612724565b60405180910390fd5b60038210610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c89906128eb565b60405180910390fd5b5f8311610cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccb90612953565b60405180910390fd5b610d213330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611cd0909392919063ffffffff16565b5f60048360038110610d3657610d35612514565b5b015442610d439190612609565b9050600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060c001604052808681526020014281526020018381526020015f1515815260200184151581526020015f815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a08201518160040155505083600c5f828254610e519190612609565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f3df45cb339f96ae4bdb793efcb6e22100dd0dc4fd739a4ee2033fe67ea35af96858585604051610ea293929190612971565b60405180910390a250610eb3611cc7565b505050565b600a602052815f5260405f208181548110610ed1575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015f9054906101000a900460ff16908060030160019054906101000a900460ff16908060040154905086565b610f2b611d52565b60038210610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f65906128eb565b60405180910390fd5b612710811115610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa906129f0565b60405180910390fd5b8060078360038110610fc857610fc7612514565b5b01819055507f787a1fca55641ce34a438271930bbb9401df20db2b4f510d4f252227d85df43d8282604051610ffe92919061287a565b60405180910390a15050565b60078160038110611019575f80fd5b015f915090505481565b61102b611d52565b6110345f611dd9565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b600d5481565b600c5481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f339050600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508210611113576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110a906124f6565b60405180910390fd5b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20838154811061116357611162612514565b5b905f5260205f2090600502019050806003015f9054906101000a900460ff16156111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b99061258b565b60405180910390fd5b8060030160019054906101000a900460ff16158160030160016101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ffa2d7b35e7cc82247c5ae7e8ae2dc078c2b144b76a6b1068887b3c8892c15da5848360030160019054906101000a900460ff16604051611249929190612a0e565b60405180910390a2505050565b61125e611c78565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390612724565b60405180910390fd5b5f339050600a5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508210611352576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611349906124f6565b60405180910390fd5b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106113a2576113a1612514565b5b905f5260205f2090600502019050806003015f9054906101000a900460ff1615611401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f89061258b565b60405180910390fd5b8060020154421015611448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143f906127f4565b60405180910390fd5b5f61145383856105a4565b905080600d54101561149a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114919061285c565b60405180910390fd5b6001826003015f6101000a81548160ff0219169083151502179055508160030160019054906101000a900460ff1680156114d757505f8260040154115b15611602575f8183600401546114ed9190612609565b90505f612710603283611500919061263c565b61150a91906126aa565b90505f818361151991906125d6565b905080600b5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546115679190612609565b9250508190555081600b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546115db9190612609565b9250508190555082600d5f8282546115f391906125d6565b9250508190555050505061166e565b80600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461164e9190612609565b9250508190555080600d5f82825461166691906125d6565b925050819055505b8273ffffffffffffffffffffffffffffffffffffffff167f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a82866040516116b692919061287a565b60405180910390a25050506116c9611cc7565b50565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6116f9611d52565b5f811161173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173290612953565b60405180910390fd5b61178933308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611cd0909392919063ffffffff16565b80600d5f82825461179a9190612609565b925050819055507f21d99275a51df78f567d33e4b0c6ea547b7675bce0eab2ccca69e131bf047abe816040516117d0919061205c565b60405180910390a150565b6117e3611d52565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184890612a7f565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee60405160405180910390a250565b6118df611c78565b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195990612ae7565b60405180910390fd5b5f600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506119f0338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e9a9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fbd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e61682604051611a36919061205c565b60405180910390a250611a47611cc7565b565b6301e1338081565b611a59611d52565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ac9575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611ac0919061241b565b60405180910390fd5b611ad281611dd9565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611b02611d52565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6790612b4f565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fa5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a060405160405180910390a250565b5f5f5f90505b6003811015611c375760048160038110611c1957611c18612514565b5b01548303611c2a5780915050611c73565b8080600101915050611bfc565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6a90612bb7565b60405180910390fd5b919050565b600260015403611cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb490612c1f565b60405180910390fd5b6002600181905550565b60018081905550565b611d4c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611d0593929190612c3d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f19565b50505050565b611d5a611fb4565b73ffffffffffffffffffffffffffffffffffffffff16611d78611066565b73ffffffffffffffffffffffffffffffffffffffff1614611dd757611d9b611fb4565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611dce919061241b565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611f14838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611ecd929190612c72565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f19565b505050565b5f5f60205f8451602086015f885af180611f38576040513d5f823e3d81fd5b3d92505f519150505f8214611f51576001811415611f6c565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611fae57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fa5919061241b565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fe882611fbf565b9050919050565b611ff881611fde565b8114612002575f5ffd5b50565b5f8135905061201381611fef565b92915050565b5f6020828403121561202e5761202d611fbb565b5b5f61203b84828501612005565b91505092915050565b5f819050919050565b61205681612044565b82525050565b5f60208201905061206f5f83018461204d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6120a781612044565b82525050565b5f8115159050919050565b6120c1816120ad565b82525050565b60c082015f8201516120db5f85018261209e565b5060208201516120ee602085018261209e565b506040820151612101604085018261209e565b50606082015161211460608501826120b8565b50608082015161212760808501826120b8565b5060a082015161213a60a085018261209e565b50505050565b5f61214b83836120c7565b60c08301905092915050565b5f602082019050919050565b5f61216d82612075565b612177818561207f565b93506121828361208f565b805f5b838110156121b25781516121998882612140565b97506121a483612157565b925050600181019050612185565b5085935050505092915050565b5f6020820190508181035f8301526121d78184612163565b905092915050565b6121e881612044565b81146121f2575f5ffd5b50565b5f81359050612203816121df565b92915050565b5f5f6040838503121561221f5761221e611fbb565b5b5f61222c85828601612005565b925050602061223d858286016121f5565b9150509250929050565b5f6020828403121561225c5761225b611fbb565b5b5f612269848285016121f5565b91505092915050565b61227b816120ad565b8114612285575f5ffd5b50565b5f8135905061229681612272565b92915050565b5f5f5f606084860312156122b3576122b2611fbb565b5b5f6122c0868287016121f5565b93505060206122d1868287016121f5565b92505060406122e286828701612288565b9150509250925092565b6122f5816120ad565b82525050565b5f60c08201905061230e5f83018961204d565b61231b602083018861204d565b612328604083018761204d565b61233560608301866122ec565b61234260808301856122ec565b61234f60a083018461204d565b979650505050505050565b5f5f604083850312156123705761236f611fbb565b5b5f61237d858286016121f5565b925050602061238e858286016121f5565b9150509250929050565b5f819050919050565b5f6123bb6123b66123b184611fbf565b612398565b611fbf565b9050919050565b5f6123cc826123a1565b9050919050565b5f6123dd826123c2565b9050919050565b6123ed816123d3565b82525050565b5f6020820190506124065f8301846123e4565b92915050565b61241581611fde565b82525050565b5f60208201905061242e5f83018461240c565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206163636f756e7400000000000000000000000000000000005f82015250565b5f612478600f83612434565b915061248382612444565b602082019050919050565b5f6020820190508181035f8301526124a58161246c565b9050919050565b7f496e76616c6964207374616b6520696e646578000000000000000000000000005f82015250565b5f6124e0601383612434565b91506124eb826124ac565b602082019050919050565b5f6020820190508181035f83015261250d816124d4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f612575600f83612434565b915061258082612541565b602082019050919050565b5f6020820190508181035f8301526125a281612569565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125e082612044565b91506125eb83612044565b9250828203905081811115612603576126026125a9565b5b92915050565b5f61261382612044565b915061261e83612044565b9250828201905080821115612636576126356125a9565b5b92915050565b5f61264682612044565b915061265183612044565b925082820261265f81612044565b91508282048414831517612676576126756125a9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6126b482612044565b91506126bf83612044565b9250826126cf576126ce61267d565b5b828204905092915050565b7f43616c6c6572206d75737420626520454f4100000000000000000000000000005f82015250565b5f61270e601283612434565b9150612719826126da565b602082019050919050565b5f6020820190508181035f83015261273b81612702565b9050919050565b7f4175746f2d7374616b696e672064697361626c656400000000000000000000005f82015250565b5f612776601583612434565b915061278182612742565b602082019050919050565b5f6020820190508181035f8301526127a38161276a565b9050919050565b7f5374696c6c206c6f636b656400000000000000000000000000000000000000005f82015250565b5f6127de600c83612434565b91506127e9826127aa565b602082019050919050565b5f6020820190508181035f83015261280b816127d2565b9050919050565b7f496e73756666696369656e742072657761726420706f6f6c00000000000000005f82015250565b5f612846601883612434565b915061285182612812565b602082019050919050565b5f6020820190508181035f8301526128738161283a565b9050919050565b5f60408201905061288d5f83018561204d565b61289a602083018461204d565b9392505050565b7f496e76616c696420706572696f6420696e6465780000000000000000000000005f82015250565b5f6128d5601483612434565b91506128e0826128a1565b602082019050919050565b5f6020820190508181035f830152612902816128c9565b9050919050565b7f5a65726f20616d6f756e740000000000000000000000000000000000000000005f82015250565b5f61293d600b83612434565b915061294882612909565b602082019050919050565b5f6020820190508181035f83015261296a81612931565b9050919050565b5f6060820190506129845f83018661204d565b612991602083018561204d565b61299e60408301846122ec565b949350505050565b7f41505920746f6f206869676800000000000000000000000000000000000000005f82015250565b5f6129da600c83612434565b91506129e5826129a6565b602082019050919050565b5f6020820190508181035f830152612a07816129ce565b9050919050565b5f604082019050612a215f83018561204d565b612a2e60208301846122ec565b9392505050565b7f496e76616c6964206665652072656365697665720000000000000000000000005f82015250565b5f612a69601483612434565b9150612a7482612a35565b602082019050919050565b5f6020820190508181035f830152612a9681612a5d565b9050919050565b7f4e6f207265776172647320746f207769746864726177000000000000000000005f82015250565b5f612ad1601683612434565b9150612adc82612a9d565b602082019050919050565b5f6020820190508181035f830152612afe81612ac5565b9050919050565b7f496e76616c69642072657761726420746f6b656e0000000000000000000000005f82015250565b5f612b39601483612434565b9150612b4482612b05565b602082019050919050565b5f6020820190508181035f830152612b6681612b2d565b9050919050565b7f556e737570706f72746564206c6f636b20706572696f640000000000000000005f82015250565b5f612ba1601783612434565b9150612bac82612b6d565b602082019050919050565b5f6020820190508181035f830152612bce81612b95565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612c09601f83612434565b9150612c1482612bd5565b602082019050919050565b5f6020820190508181035f830152612c3681612bfd565b9050919050565b5f606082019050612c505f83018661240c565b612c5d602083018561240c565b612c6a604083018461204d565b949350505050565b5f604082019050612c855f83018561240c565b612c92602083018461204d565b939250505056fea2646970667358221220840ed1e62aa496d3cccabd3f402c8eaf5f6286f2dd4afaa18e99ad91fe4f86f564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A5C08AE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBBD36B61 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE6A69AB8 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x47E JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBBD36B61 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xC69BEBE4 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x41C JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x7A5C08AE EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95A29060 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x3C6 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x561B2463 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x561B2463 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x5ACD2E4C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x6B494DEF EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x316 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x630E463 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x1747E0B0 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x38BCEAAC EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4060E257 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x4C8F2A78 EQ PUSH2 0x23F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x229C JUMP JUMPDEST PUSH2 0xBD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH2 0xF23 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x1023 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31E PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x23F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x1256 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CE PUSH2 0x16CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x16F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x17DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH2 0x18D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x468 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x23F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1AFA JUMP JUMPDEST STOP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x599 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x50D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP1 PUSH2 0x248E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68C SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6E5 JUMPI PUSH2 0x6E4 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x796 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD DUP1 ISZERO PUSH2 0x7B7 JUMPI POP DUP1 TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x7C0 JUMPI TIMESTAMP SWAP1 POP JUMPDEST PUSH0 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7F0 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x806 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD SLOAD SWAP1 POP PUSH0 DUP6 PUSH1 0xA0 ADD MLOAD DUP7 PUSH0 ADD MLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST DUP5 DUP4 DUP4 PUSH2 0x840 SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x84A SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x86F PUSH2 0x1C78 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D4 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9B3 JUMPI PUSH2 0x9B2 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5A SWAP1 PUSH2 0x278C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAB5 DUP4 DUP6 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST TIMESTAMP PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x593662CBE53E88DF3FEF748665B8C3D3142E5D34DC1B24290F7E953537A00183 DUP6 DUP5 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xBAA SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xBBD PUSH2 0x1CC7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xBCF JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBE1 PUSH2 0x1C78 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCB SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD21 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CD0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD SLOAD TIMESTAMP PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP4 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3DF45CB339F96AE4BDB793EFCB6E22100DD0DC4FD739A4EE2033FE67EA35AF96 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEA2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xEB3 PUSH2 0x1CC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xED1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0xF2B PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xF6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF65 SWAP1 PUSH2 0x28EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x29F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xFC8 JUMPI PUSH2 0xFC7 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH32 0x787A1FCA55641CE34A438271930BBB9401DF20DB2B4F510D4F252227D85DF43D DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFFE SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1019 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x102B PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1034 PUSH0 PUSH2 0x1DD9 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x1113 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110A SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1163 JUMPI PUSH2 0x1162 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B9 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA2D7B35E7CC82247C5AE7E8AE2DC078C2B144B76A6B1068887B3C8892C15DA5 DUP5 DUP4 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1249 SWAP3 SWAP2 SWAP1 PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x125E PUSH2 0x1C78 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0xA PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1349 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13A2 JUMPI PUSH2 0x13A1 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F8 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1448 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143F SWAP1 PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1453 DUP4 DUP6 PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD LT ISZERO PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1491 SWAP1 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14D7 JUMPI POP PUSH0 DUP3 PUSH1 0x4 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x1602 JUMPI PUSH0 DUP2 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x32 DUP4 PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1519 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1567 SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x166E JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x16B6 SWAP3 SWAP2 SWAP1 PUSH2 0x287A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x16C9 PUSH2 0x1CC7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1732 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1789 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CD0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x179A SWAP2 SWAP1 PUSH2 0x2609 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x21D99275A51DF78F567D33E4B0C6EA547B7675BCE0EAB2CCCA69E131BF047ABE DUP2 PUSH1 0x40 MLOAD PUSH2 0x17D0 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x17E3 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1851 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1848 SWAP1 PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x18DF PUSH2 0x1C78 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1959 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19F0 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E9A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBD1EA9966F82CCB966523D3922A6E4AD4BF3EA70E9201BD7A106DE847CC5E616 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1A47 PUSH2 0x1CC7 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x1A59 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AC9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC0 SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD2 DUP2 PUSH2 0x1DD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B02 PUSH2 0x1D52 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B67 SWAP1 PUSH2 0x2B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5289BA11778999F4DFB9415023783188D42BBB5DB0612CBFBE55999069612A0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1C37 JUMPI PUSH1 0x4 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x2514 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 SUB PUSH2 0x1C2A JUMPI DUP1 SWAP2 POP POP PUSH2 0x1C73 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1BFC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6A SWAP1 PUSH2 0x2BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1CBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB4 SWAP1 PUSH2 0x2C1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D4C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D05 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F19 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D5A PUSH2 0x1FB4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D78 PUSH2 0x1066 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DD7 JUMPI PUSH2 0x1D9B PUSH2 0x1FB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1F14 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1ECD SWAP3 SWAP2 SWAP1 PUSH2 0x2C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F19 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1F51 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F6C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FAE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA5 SWAP2 SWAP1 PUSH2 0x241B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE8 DUP3 PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP2 EQ PUSH2 0x2002 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2013 DUP2 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH2 0x202D PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x203B DUP5 DUP3 DUP6 ADD PUSH2 0x2005 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2056 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206F PUSH0 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A7 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x20AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x20DB PUSH0 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x20EE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2101 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2114 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x20B8 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2127 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x20B8 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x213A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x209E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214B DUP4 DUP4 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x216D DUP3 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x2177 DUP2 DUP6 PUSH2 0x207F JUMP JUMPDEST SWAP4 POP PUSH2 0x2182 DUP4 PUSH2 0x208F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B2 JUMPI DUP2 MLOAD PUSH2 0x2199 DUP9 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP8 POP PUSH2 0x21A4 DUP4 PUSH2 0x2157 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2185 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D7 DUP2 DUP5 PUSH2 0x2163 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E8 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2203 DUP2 PUSH2 0x21DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x221F JUMPI PUSH2 0x221E PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222C DUP6 DUP3 DUP7 ADD PUSH2 0x2005 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x223D DUP6 DUP3 DUP7 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x225C JUMPI PUSH2 0x225B PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2269 DUP5 DUP3 DUP6 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x227B DUP2 PUSH2 0x20AD JUMP JUMPDEST DUP2 EQ PUSH2 0x2285 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2296 DUP2 PUSH2 0x2272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B3 JUMPI PUSH2 0x22B2 PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C0 DUP7 DUP3 DUP8 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22D1 DUP7 DUP3 DUP8 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22E2 DUP7 DUP3 DUP8 ADD PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x22F5 DUP2 PUSH2 0x20AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x230E PUSH0 DUP4 ADD DUP10 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x231B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2328 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x234F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2370 JUMPI PUSH2 0x236F PUSH2 0x1FBB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x237D DUP6 DUP3 DUP7 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x238E DUP6 DUP3 DUP7 ADD PUSH2 0x21F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23BB PUSH2 0x23B6 PUSH2 0x23B1 DUP5 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x2398 JUMP JUMPDEST PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23CC DUP3 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23DD DUP3 PUSH2 0x23C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23ED DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2406 PUSH0 DUP4 ADD DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2415 DUP2 PUSH2 0x1FDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x242E PUSH0 DUP4 ADD DUP5 PUSH2 0x240C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206163636F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2478 PUSH1 0xF DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2483 DUP3 PUSH2 0x2444 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24A5 DUP2 PUSH2 0x246C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24E0 PUSH1 0x13 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x24EB DUP3 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x250D DUP2 PUSH2 0x24D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2575 PUSH1 0xF DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2580 DUP3 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25A2 DUP2 PUSH2 0x2569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25E0 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x25EB DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2602 PUSH2 0x25A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2613 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x261E DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2636 JUMPI PUSH2 0x2635 PUSH2 0x25A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2646 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x2651 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x265F DUP2 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2676 JUMPI PUSH2 0x2675 PUSH2 0x25A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26B4 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BF DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26CF JUMPI PUSH2 0x26CE PUSH2 0x267D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206D75737420626520454F410000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x270E PUSH1 0x12 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2719 DUP3 PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x273B DUP2 PUSH2 0x2702 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4175746F2D7374616B696E672064697361626C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2776 PUSH1 0x15 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2781 DUP3 PUSH2 0x2742 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27A3 DUP2 PUSH2 0x276A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374696C6C206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27DE PUSH1 0xC DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E9 DUP3 PUSH2 0x27AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x280B DUP2 PUSH2 0x27D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2846 PUSH1 0x18 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2851 DUP3 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2873 DUP2 PUSH2 0x283A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x288D PUSH0 DUP4 ADD DUP6 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x289A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420706572696F6420696E646578000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D5 PUSH1 0x14 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E0 DUP3 PUSH2 0x28A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2902 DUP2 PUSH2 0x28C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x293D PUSH1 0xB DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2948 DUP3 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x296A DUP2 PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2984 PUSH0 DUP4 ADD DUP7 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2991 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x299E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x41505920746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29DA PUSH1 0xC DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x29E5 DUP3 PUSH2 0x29A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A07 DUP2 PUSH2 0x29CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A21 PUSH0 DUP4 ADD DUP6 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x2A2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22EC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420666565207265636569766572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A69 PUSH1 0x14 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A74 DUP3 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A96 DUP2 PUSH2 0x2A5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD1 PUSH1 0x16 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADC DUP3 PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AFE DUP2 PUSH2 0x2AC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B39 PUSH1 0x14 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B44 DUP3 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B66 DUP2 PUSH2 0x2B2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E737570706F72746564206C6F636B20706572696F64000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BA1 PUSH1 0x17 DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAC DUP3 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCE DUP2 PUSH2 0x2B95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C09 PUSH1 0x1F DUP4 PUSH2 0x2434 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C14 DUP3 PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C36 DUP2 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C50 PUSH0 DUP4 ADD DUP7 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2C5D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2C6A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C85 PUSH0 DUP4 ADD DUP6 PUSH2 0x240C JUMP JUMPDEST PUSH2 0x2C92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x204D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE DATALOADN 0xE62A LOG4 SWAP7 0xD3 0xCC 0xCA 0xBD EXTCODEHASH BLOCKHASH 0x2C DUP15 0xAF PUSH0 PUSH3 0x86F2DD BLOBBASEFEE STATICCALL LOG1 DUP15 SWAP10 0xAD SWAP2 INVALID 0x4F DUP7 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "418:9350:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9648:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:821;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;637:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7176:867;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;730:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2846:729;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1055:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;8560:302;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;795:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;506:36:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1204:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1172:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6661:407:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5008:1152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;697:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8140:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9343:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6222:330;;;:::i;:::-;;580:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;548:25:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8981:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1106:59;;;;;;;;;;;;;;;;;:::o;9648:118::-;9710:18;9747:6;:12;9754:4;9747:12;;;;;;;;;;;;;;;9740:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9648:118;;;:::o;3729:821::-;3812:7;3858:1;3839:21;;:7;:21;;;3831:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3911:6;:15;3918:7;3911:15;;;;;;;;;;;;;;;:22;;;;3898:10;:35;3890:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3968:21;3992:6;:15;3999:7;3992:15;;;;;;;;;;;;;;;4008:10;3992:27;;;;;;;;:::i;:::-;;;;;;;;;;;;3968:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4038:4;:12;;;4037:13;4029:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4081:15;4099:4;:15;;;4081:33;;4128:4;:16;;;:45;;;;;4166:7;4148:15;:25;4128:45;4124:101;;;4199:15;4189:25;;4124:101;4235:16;4264:4;:14;;;4254:7;:24;;;;:::i;:::-;4235:43;;4288:19;4310:48;4343:4;:14;;;4325:4;:15;;;:32;;;;:::i;:::-;4310:14;:48::i;:::-;4288:70;;4368:11;4382:8;4391:11;4382:21;;;;;;;:::i;:::-;;;;4368:35;;4414:17;4448:4;:21;;;4434:4;:11;;;:35;;;;:::i;:::-;4414:55;;623:8;4518:5;:24;;;;:::i;:::-;4505:8;4499:3;4487:9;:15;;;;:::i;:::-;:26;;;;:::i;:::-;4486:57;;;;:::i;:::-;4479:64;;;;;;;;3729:821;;;;:::o;637:46::-;681:2;637:46;:::o;7176:867::-;2261:21:4;:19;:21::i;:::-;2027:10:9::1;2014:23;;:9;:23;;;2006:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7260:15:::2;7278:10;7260:28;;7319:6;:15;7326:7;7319:15;;;;;;;;;;;;;;;:22;;;;7306:10;:35;7298:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7376:22;7401:6;:15;7408:7;7401:15;;;;;;;;;;;;;;;7417:10;7401:27;;;;;;;;:::i;:::-;;;;;;;;;;;;7376:52;;7447:4;:12;;;;;;;;;;;;7446:13;7438:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7497:4;:16;;;;;;;;;;;;7489:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7576:4;:15;;;7557;:34;;7549:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7619:14;7636:36;7652:7;7661:10;7636:15;:36::i;:::-;7619:53;;7711:6;7690:17;;:27;;7682:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7774:15;7757:4;:14;;:32;;;;7854:4;:14;;;7836:4;:15;;;:32;;;;:::i;:::-;7817:15;:52;;;;:::i;:::-;7799:4;:15;;:70;;;;7919:6;7894:4;:21;;;:31;;;;;;;:::i;:::-;;;;;;;;7956:6;7935:17;;:27;;;;;;;:::i;:::-;;;;;;;;7993:7;7978:58;;;8002:10;8014:4;:21;;;7978:58;;;;;;;:::i;:::-;;;;;;;;7250:793;;;2303:20:4::0;:18;:20::i;:::-;7176:867:9;:::o;730:59::-;;;;;;;;;;;;;;;;;;;;:::o;2846:729::-;2261:21:4;:19;:21::i;:::-;2027:10:9::1;2014:23;;:9;:23;;;2006:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2976:18:::2;2962:11;:32;2954:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3046:1;3037:6;:10;3029:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;3074:64;3104:10;3124:4;3131:6;3074:12;:29;;;;:64;;;;;;:::i;:::-;3149:18;3188:11;3200;3188:24;;;;;;;:::i;:::-;;;;3170:15;:42;;;;:::i;:::-;3149:63;;3223:6;:18;3230:10;3223:18;;;;;;;;;;;;;;;3247:222;;;;;;;;3279:6;3247:222;;;;3310:15;3247:222;;;;3351:10;3247:222;;;;3384:5;3247:222;;;;;;3416:9;3247:222;;;;;;3457:1;3247:222;;::::0;3223:247:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3496:6;3481:11;;:21;;;;;;;:::i;:::-;;;;;;;;3525:10;3518:50;;;3537:6;3545:11;3558:9;3518:50;;;;;;;;:::i;:::-;;;;;;;;2944:631;2303:20:4::0;:18;:20::i;:::-;2846:729:9;;;:::o;1055:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8560:302::-;1531:13:0;:11;:13::i;:::-;8664:18:9::1;8650:11;:32;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8735:5;8725:6;:15;;8717:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;8803:6;8779:8;8788:11;8779:21;;;;;;;:::i;:::-;;;:30;;;;8824:31;8835:11;8848:6;8824:31;;;;;;;:::i;:::-;;;;;;;;8560:302:::0;;:::o;795:46::-;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;506:36:9:-;;;:::o;1204:32::-;;;;:::o;1172:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6661:407:9:-;6725:15;6743:10;6725:28;;6784:6;:15;6791:7;6784:15;;;;;;;;;;;;;;;:22;;;;6771:10;:35;6763:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6841:22;6866:6;:15;6873:7;6866:15;;;;;;;;;;;;;;;6882:10;6866:27;;;;;;;;:::i;:::-;;;;;;;;;;;;6841:52;;6912:4;:12;;;;;;;;;;;;6911:13;6903:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6975:4;:16;;;;;;;;;;;;6974:17;6955:4;:16;;;:36;;;;;;;;;;;;;;;;;;7023:7;7006:55;;;7032:10;7044:4;:16;;;;;;;;;;;;7006:55;;;;;;;:::i;:::-;;;;;;;;6715:353;;6661:407;:::o;5008:1152::-;2261:21:4;:19;:21::i;:::-;2027:10:9::1;2014:23;;:9;:23;;;2006:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5089:15:::2;5107:10;5089:28;;5148:6;:15;5155:7;5148:15;;;;;;;;;;;;;;;:22;;;;5135:10;:35;5127:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5205:22;5230:6;:15;5237:7;5230:15;;;;;;;;;;;;;;;5246:10;5230:27;;;;;;;;:::i;:::-;;;;;;;;;;;;5205:52;;5276:4;:12;;;;;;;;;;;;5275:13;5267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5345:4;:15;;;5326;:34;;5318:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5388:14;5405:36;5421:7;5430:10;5405:15;:36::i;:::-;5388:53;;5480:6;5459:17;;:27;;5451:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;5541:4;5526;:12;;;:19;;;;;;;;;;;;;;;;;;5560:4;:16;;;;;;;;;;;;:45;;;;;5604:1;5580:4;:21;;;:25;5560:45;5556:546;;;5621:23;5671:6;5647:4;:21;;;:30;;;;:::i;:::-;5621:56;;5691:11;5745:5;681:2;5706:15;:35;;;;:::i;:::-;5705:45;;;;:::i;:::-;5691:59;;5764:18;5803:3;5785:15;:21;;;;:::i;:::-;5764:42;;5858:10;5821:24;:33;5846:7;5821:33;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;5923:3;5882:24;:37;5907:11;;;;;;;;;;;5882:37;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;5961:15;5940:17;;:36;;;;;;;:::i;:::-;;;;;;;;5607:380;;;5556:546;;;6044:6;6007:24;:33;6032:7;6007:33;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;6085:6;6064:17;;:27;;;;;;;:::i;:::-;;;;;;;;5556:546;6125:7;6117:36;;;6134:6;6142:10;6117:36;;;;;;;:::i;:::-;;;;;;;;5079:1081;;;2303:20:4::0;:18;:20::i;:::-;5008:1152:9;:::o;697:26::-;;;;;;;;;;;;;:::o;8140:267::-;1531:13:0;:11;:13::i;:::-;8230:1:9::1;8221:6;:10;8213:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;8257:63;8286:10;8306:4;8313:6;8257:11;;;;;;;;;;;:28;;;;:63;;;;;;:::i;:::-;8351:6;8330:17;;:27;;;;;;;:::i;:::-;;;;;;;;8372:28;8393:6;8372:28;;;;;;:::i;:::-;;;;;;;;8140:267:::0;:::o;9343:235::-;1531:13:0;:11;:13::i;:::-;9457:1:9::1;9431:28;;:14;:28;;::::0;9423:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9508:14;9494:11;;:28;;;;;;;;;;;;;;;;;;9556:14;9537:34;;;;;;;;;;;;9343:235:::0;:::o;6222:330::-;2261:21:4;:19;:21::i;:::-;6281:14:9::1;6298:24;:36;6323:10;6298:36;;;;;;;;;;;;;;;;6281:53;;6361:1;6352:6;:10;6344:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;6439:1;6400:24;:36;6425:10;6400:36;;;;;;;;;;;;;;;:40;;;;6450:44;6475:10;6487:6;6450:11;;;;;;;;;;;:24;;;;:44;;;;;:::i;:::-;6526:10;6509:36;;;6538:6;6509:36;;;;;;:::i;:::-;;;;;;;;6271:281;2303:20:4::0;:18;:20::i;:::-;6222:330:9:o;580:51::-;623:8;580:51;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;548:25:9:-;;;;;;;;;;;;;:::o;8981:243::-;1531:13:0;:11;:13::i;:::-;9095:1:9::1;9069:28;;:14;:28;;::::0;9061:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9153:14;9132:11;;:36;;;;;;;;;;;;;;;;;;9202:14;9183:34;;;;;;;;;;;;8981:243:::0;:::o;4618:279::-;4683:7;4707:9;4719:1;4707:13;;4702:146;4726:18;4722:1;:22;4702:146;;;4781:11;4793:1;4781:14;;;;;;;:::i;:::-;;;;4769:8;:26;4765:73;;4822:1;4815:8;;;;;4765:73;4746:3;;;;;;;4702:146;;;;4857:33;;;;;;;;;;:::i;:::-;;;;;;;;4618:279;;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:140::-;1704:6;1738:5;1732:12;1722:22;;1611:140;;;:::o;1757:210::-;1882:11;1916:6;1911:3;1904:19;1956:4;1951:3;1947:14;1932:29;;1757:210;;;;:::o;1973:158::-;2066:4;2089:3;2081:11;;2119:4;2114:3;2110:14;2102:22;;1973:158;;;:::o;2137:108::-;2214:24;2232:5;2214:24;:::i;:::-;2209:3;2202:37;2137:108;;:::o;2251:90::-;2285:7;2328:5;2321:13;2314:21;2303:32;;2251:90;;;:::o;2347:99::-;2418:21;2433:5;2418:21;:::i;:::-;2413:3;2406:34;2347:99;;:::o;2520:1218::-;2659:4;2654:3;2650:14;2748:4;2741:5;2737:16;2731:23;2767:63;2824:4;2819:3;2815:14;2801:12;2767:63;:::i;:::-;2674:166;2927:4;2920:5;2916:16;2910:23;2946:63;3003:4;2998:3;2994:14;2980:12;2946:63;:::i;:::-;2850:169;3107:4;3100:5;3096:16;3090:23;3126:63;3183:4;3178:3;3174:14;3160:12;3126:63;:::i;:::-;3029:170;3284:4;3277:5;3273:16;3267:23;3303:57;3354:4;3349:3;3345:14;3331:12;3303:57;:::i;:::-;3209:161;3459:4;3452:5;3448:16;3442:23;3478:57;3529:4;3524:3;3520:14;3506:12;3478:57;:::i;:::-;3380:165;3639:4;3632:5;3628:16;3622:23;3658:63;3715:4;3710:3;3706:14;3692:12;3658:63;:::i;:::-;3555:176;2628:1110;2520:1218;;:::o;3744:283::-;3865:10;3886:98;3980:3;3972:6;3886:98;:::i;:::-;4016:4;4011:3;4007:14;3993:28;;3744:283;;;;:::o;4033:139::-;4129:4;4161;4156:3;4152:14;4144:22;;4033:139;;;:::o;4250:940::-;4421:3;4450:80;4524:5;4450:80;:::i;:::-;4546:112;4651:6;4646:3;4546:112;:::i;:::-;4539:119;;4682:82;4758:5;4682:82;:::i;:::-;4787:7;4818:1;4803:362;4828:6;4825:1;4822:13;4803:362;;;4904:6;4898:13;4931:115;5042:3;5027:13;4931:115;:::i;:::-;4924:122;;5069:86;5148:6;5069:86;:::i;:::-;5059:96;;4863:302;4850:1;4847;4843:9;4838:14;;4803:362;;;4807:14;5181:3;5174:10;;4426:764;;;4250:940;;;;:::o;5196:477::-;5391:4;5429:2;5418:9;5414:18;5406:26;;5478:9;5472:4;5468:20;5464:1;5453:9;5449:17;5442:47;5506:160;5661:4;5652:6;5506:160;:::i;:::-;5498:168;;5196:477;;;;:::o;5679:122::-;5752:24;5770:5;5752:24;:::i;:::-;5745:5;5742:35;5732:63;;5791:1;5788;5781:12;5732:63;5679:122;:::o;5807:139::-;5853:5;5891:6;5878:20;5869:29;;5907:33;5934:5;5907:33;:::i;:::-;5807:139;;;;:::o;5952:474::-;6020:6;6028;6077:2;6065:9;6056:7;6052:23;6048:32;6045:119;;;6083:79;;:::i;:::-;6045:119;6203:1;6228:53;6273:7;6264:6;6253:9;6249:22;6228:53;:::i;:::-;6218:63;;6174:117;6330:2;6356:53;6401:7;6392:6;6381:9;6377:22;6356:53;:::i;:::-;6346:63;;6301:118;5952:474;;;;;:::o;6432:329::-;6491:6;6540:2;6528:9;6519:7;6515:23;6511:32;6508:119;;;6546:79;;:::i;:::-;6508:119;6666:1;6691:53;6736:7;6727:6;6716:9;6712:22;6691:53;:::i;:::-;6681:63;;6637:117;6432:329;;;;:::o;6767:116::-;6837:21;6852:5;6837:21;:::i;:::-;6830:5;6827:32;6817:60;;6873:1;6870;6863:12;6817:60;6767:116;:::o;6889:133::-;6932:5;6970:6;6957:20;6948:29;;6986:30;7010:5;6986:30;:::i;:::-;6889:133;;;;:::o;7028:613::-;7102:6;7110;7118;7167:2;7155:9;7146:7;7142:23;7138:32;7135:119;;;7173:79;;:::i;:::-;7135:119;7293:1;7318:53;7363:7;7354:6;7343:9;7339:22;7318:53;:::i;:::-;7308:63;;7264:117;7420:2;7446:53;7491:7;7482:6;7471:9;7467:22;7446:53;:::i;:::-;7436:63;;7391:118;7548:2;7574:50;7616:7;7607:6;7596:9;7592:22;7574:50;:::i;:::-;7564:60;;7519:115;7028:613;;;;;:::o;7647:109::-;7728:21;7743:5;7728:21;:::i;:::-;7723:3;7716:34;7647:109;;:::o;7762:751::-;7983:4;8021:3;8010:9;8006:19;7998:27;;8035:71;8103:1;8092:9;8088:17;8079:6;8035:71;:::i;:::-;8116:72;8184:2;8173:9;8169:18;8160:6;8116:72;:::i;:::-;8198;8266:2;8255:9;8251:18;8242:6;8198:72;:::i;:::-;8280:66;8342:2;8331:9;8327:18;8318:6;8280:66;:::i;:::-;8356:67;8418:3;8407:9;8403:19;8394:6;8356:67;:::i;:::-;8433:73;8501:3;8490:9;8486:19;8477:6;8433:73;:::i;:::-;7762:751;;;;;;;;;:::o;8519:474::-;8587:6;8595;8644:2;8632:9;8623:7;8619:23;8615:32;8612:119;;;8650:79;;:::i;:::-;8612:119;8770:1;8795:53;8840:7;8831:6;8820:9;8816:22;8795:53;:::i;:::-;8785:63;;8741:117;8897:2;8923:53;8968:7;8959:6;8948:9;8944:22;8923:53;:::i;:::-;8913:63;;8868:118;8519:474;;;;;:::o;8999:60::-;9027:3;9048:5;9041:12;;8999:60;;;:::o;9065:142::-;9115:9;9148:53;9166:34;9175:24;9193:5;9175:24;:::i;:::-;9166:34;:::i;:::-;9148:53;:::i;:::-;9135:66;;9065:142;;;:::o;9213:126::-;9263:9;9296:37;9327:5;9296:37;:::i;:::-;9283:50;;9213:126;;;:::o;9345:140::-;9409:9;9442:37;9473:5;9442:37;:::i;:::-;9429:50;;9345:140;;;:::o;9491:159::-;9592:51;9637:5;9592:51;:::i;:::-;9587:3;9580:64;9491:159;;:::o;9656:250::-;9763:4;9801:2;9790:9;9786:18;9778:26;;9814:85;9896:1;9885:9;9881:17;9872:6;9814:85;:::i;:::-;9656:250;;;;:::o;9912:118::-;9999:24;10017:5;9999:24;:::i;:::-;9994:3;9987:37;9912:118;;:::o;10036:222::-;10129:4;10167:2;10156:9;10152:18;10144:26;;10180:71;10248:1;10237:9;10233:17;10224:6;10180:71;:::i;:::-;10036:222;;;;:::o;10264:169::-;10348:11;10382:6;10377:3;10370:19;10422:4;10417:3;10413:14;10398:29;;10264:169;;;;:::o;10439:165::-;10579:17;10575:1;10567:6;10563:14;10556:41;10439:165;:::o;10610:366::-;10752:3;10773:67;10837:2;10832:3;10773:67;:::i;:::-;10766:74;;10849:93;10938:3;10849:93;:::i;:::-;10967:2;10962:3;10958:12;10951:19;;10610:366;;;:::o;10982:419::-;11148:4;11186:2;11175:9;11171:18;11163:26;;11235:9;11229:4;11225:20;11221:1;11210:9;11206:17;11199:47;11263:131;11389:4;11263:131;:::i;:::-;11255:139;;10982:419;;;:::o;11407:169::-;11547:21;11543:1;11535:6;11531:14;11524:45;11407:169;:::o;11582:366::-;11724:3;11745:67;11809:2;11804:3;11745:67;:::i;:::-;11738:74;;11821:93;11910:3;11821:93;:::i;:::-;11939:2;11934:3;11930:12;11923:19;;11582:366;;;:::o;11954:419::-;12120:4;12158:2;12147:9;12143:18;12135:26;;12207:9;12201:4;12197:20;12193:1;12182:9;12178:17;12171:47;12235:131;12361:4;12235:131;:::i;:::-;12227:139;;11954:419;;;:::o;12379:180::-;12427:77;12424:1;12417:88;12524:4;12521:1;12514:15;12548:4;12545:1;12538:15;12565:165;12705:17;12701:1;12693:6;12689:14;12682:41;12565:165;:::o;12736:366::-;12878:3;12899:67;12963:2;12958:3;12899:67;:::i;:::-;12892:74;;12975:93;13064:3;12975:93;:::i;:::-;13093:2;13088:3;13084:12;13077:19;;12736:366;;;:::o;13108:419::-;13274:4;13312:2;13301:9;13297:18;13289:26;;13361:9;13355:4;13351:20;13347:1;13336:9;13332:17;13325:47;13389:131;13515:4;13389:131;:::i;:::-;13381:139;;13108:419;;;:::o;13533:180::-;13581:77;13578:1;13571:88;13678:4;13675:1;13668:15;13702:4;13699:1;13692:15;13719:194;13759:4;13779:20;13797:1;13779:20;:::i;:::-;13774:25;;13813:20;13831:1;13813:20;:::i;:::-;13808:25;;13857:1;13854;13850:9;13842:17;;13881:1;13875:4;13872:11;13869:37;;;13886:18;;:::i;:::-;13869:37;13719:194;;;;:::o;13919:191::-;13959:3;13978:20;13996:1;13978:20;:::i;:::-;13973:25;;14012:20;14030:1;14012:20;:::i;:::-;14007:25;;14055:1;14052;14048:9;14041:16;;14076:3;14073:1;14070:10;14067:36;;;14083:18;;:::i;:::-;14067:36;13919:191;;;;:::o;14116:410::-;14156:7;14179:20;14197:1;14179:20;:::i;:::-;14174:25;;14213:20;14231:1;14213:20;:::i;:::-;14208:25;;14268:1;14265;14261:9;14290:30;14308:11;14290:30;:::i;:::-;14279:41;;14469:1;14460:7;14456:15;14453:1;14450:22;14430:1;14423:9;14403:83;14380:139;;14499:18;;:::i;:::-;14380:139;14164:362;14116:410;;;;:::o;14532:180::-;14580:77;14577:1;14570:88;14677:4;14674:1;14667:15;14701:4;14698:1;14691:15;14718:185;14758:1;14775:20;14793:1;14775:20;:::i;:::-;14770:25;;14809:20;14827:1;14809:20;:::i;:::-;14804:25;;14848:1;14838:35;;14853:18;;:::i;:::-;14838:35;14895:1;14892;14888:9;14883:14;;14718:185;;;;:::o;14909:168::-;15049:20;15045:1;15037:6;15033:14;15026:44;14909:168;:::o;15083:366::-;15225:3;15246:67;15310:2;15305:3;15246:67;:::i;:::-;15239:74;;15322:93;15411:3;15322:93;:::i;:::-;15440:2;15435:3;15431:12;15424:19;;15083:366;;;:::o;15455:419::-;15621:4;15659:2;15648:9;15644:18;15636:26;;15708:9;15702:4;15698:20;15694:1;15683:9;15679:17;15672:47;15736:131;15862:4;15736:131;:::i;:::-;15728:139;;15455:419;;;:::o;15880:171::-;16020:23;16016:1;16008:6;16004:14;15997:47;15880:171;:::o;16057:366::-;16199:3;16220:67;16284:2;16279:3;16220:67;:::i;:::-;16213:74;;16296:93;16385:3;16296:93;:::i;:::-;16414:2;16409:3;16405:12;16398:19;;16057:366;;;:::o;16429:419::-;16595:4;16633:2;16622:9;16618:18;16610:26;;16682:9;16676:4;16672:20;16668:1;16657:9;16653:17;16646:47;16710:131;16836:4;16710:131;:::i;:::-;16702:139;;16429:419;;;:::o;16854:162::-;16994:14;16990:1;16982:6;16978:14;16971:38;16854:162;:::o;17022:366::-;17164:3;17185:67;17249:2;17244:3;17185:67;:::i;:::-;17178:74;;17261:93;17350:3;17261:93;:::i;:::-;17379:2;17374:3;17370:12;17363:19;;17022:366;;;:::o;17394:419::-;17560:4;17598:2;17587:9;17583:18;17575:26;;17647:9;17641:4;17637:20;17633:1;17622:9;17618:17;17611:47;17675:131;17801:4;17675:131;:::i;:::-;17667:139;;17394:419;;;:::o;17819:174::-;17959:26;17955:1;17947:6;17943:14;17936:50;17819:174;:::o;17999:366::-;18141:3;18162:67;18226:2;18221:3;18162:67;:::i;:::-;18155:74;;18238:93;18327:3;18238:93;:::i;:::-;18356:2;18351:3;18347:12;18340:19;;17999:366;;;:::o;18371:419::-;18537:4;18575:2;18564:9;18560:18;18552:26;;18624:9;18618:4;18614:20;18610:1;18599:9;18595:17;18588:47;18652:131;18778:4;18652:131;:::i;:::-;18644:139;;18371:419;;;:::o;18796:332::-;18917:4;18955:2;18944:9;18940:18;18932:26;;18968:71;19036:1;19025:9;19021:17;19012:6;18968:71;:::i;:::-;19049:72;19117:2;19106:9;19102:18;19093:6;19049:72;:::i;:::-;18796:332;;;;;:::o;19134:170::-;19274:22;19270:1;19262:6;19258:14;19251:46;19134:170;:::o;19310:366::-;19452:3;19473:67;19537:2;19532:3;19473:67;:::i;:::-;19466:74;;19549:93;19638:3;19549:93;:::i;:::-;19667:2;19662:3;19658:12;19651:19;;19310:366;;;:::o;19682:419::-;19848:4;19886:2;19875:9;19871:18;19863:26;;19935:9;19929:4;19925:20;19921:1;19910:9;19906:17;19899:47;19963:131;20089:4;19963:131;:::i;:::-;19955:139;;19682:419;;;:::o;20107:161::-;20247:13;20243:1;20235:6;20231:14;20224:37;20107:161;:::o;20274:366::-;20416:3;20437:67;20501:2;20496:3;20437:67;:::i;:::-;20430:74;;20513:93;20602:3;20513:93;:::i;:::-;20631:2;20626:3;20622:12;20615:19;;20274:366;;;:::o;20646:419::-;20812:4;20850:2;20839:9;20835:18;20827:26;;20899:9;20893:4;20889:20;20885:1;20874:9;20870:17;20863:47;20927:131;21053:4;20927:131;:::i;:::-;20919:139;;20646:419;;;:::o;21071:430::-;21214:4;21252:2;21241:9;21237:18;21229:26;;21265:71;21333:1;21322:9;21318:17;21309:6;21265:71;:::i;:::-;21346:72;21414:2;21403:9;21399:18;21390:6;21346:72;:::i;:::-;21428:66;21490:2;21479:9;21475:18;21466:6;21428:66;:::i;:::-;21071:430;;;;;;:::o;21507:162::-;21647:14;21643:1;21635:6;21631:14;21624:38;21507:162;:::o;21675:366::-;21817:3;21838:67;21902:2;21897:3;21838:67;:::i;:::-;21831:74;;21914:93;22003:3;21914:93;:::i;:::-;22032:2;22027:3;22023:12;22016:19;;21675:366;;;:::o;22047:419::-;22213:4;22251:2;22240:9;22236:18;22228:26;;22300:9;22294:4;22290:20;22286:1;22275:9;22271:17;22264:47;22328:131;22454:4;22328:131;:::i;:::-;22320:139;;22047:419;;;:::o;22472:320::-;22587:4;22625:2;22614:9;22610:18;22602:26;;22638:71;22706:1;22695:9;22691:17;22682:6;22638:71;:::i;:::-;22719:66;22781:2;22770:9;22766:18;22757:6;22719:66;:::i;:::-;22472:320;;;;;:::o;22798:170::-;22938:22;22934:1;22926:6;22922:14;22915:46;22798:170;:::o;22974:366::-;23116:3;23137:67;23201:2;23196:3;23137:67;:::i;:::-;23130:74;;23213:93;23302:3;23213:93;:::i;:::-;23331:2;23326:3;23322:12;23315:19;;22974:366;;;:::o;23346:419::-;23512:4;23550:2;23539:9;23535:18;23527:26;;23599:9;23593:4;23589:20;23585:1;23574:9;23570:17;23563:47;23627:131;23753:4;23627:131;:::i;:::-;23619:139;;23346:419;;;:::o;23771:172::-;23911:24;23907:1;23899:6;23895:14;23888:48;23771:172;:::o;23949:366::-;24091:3;24112:67;24176:2;24171:3;24112:67;:::i;:::-;24105:74;;24188:93;24277:3;24188:93;:::i;:::-;24306:2;24301:3;24297:12;24290:19;;23949:366;;;:::o;24321:419::-;24487:4;24525:2;24514:9;24510:18;24502:26;;24574:9;24568:4;24564:20;24560:1;24549:9;24545:17;24538:47;24602:131;24728:4;24602:131;:::i;:::-;24594:139;;24321:419;;;:::o;24746:170::-;24886:22;24882:1;24874:6;24870:14;24863:46;24746:170;:::o;24922:366::-;25064:3;25085:67;25149:2;25144:3;25085:67;:::i;:::-;25078:74;;25161:93;25250:3;25161:93;:::i;:::-;25279:2;25274:3;25270:12;25263:19;;24922:366;;;:::o;25294:419::-;25460:4;25498:2;25487:9;25483:18;25475:26;;25547:9;25541:4;25537:20;25533:1;25522:9;25518:17;25511:47;25575:131;25701:4;25575:131;:::i;:::-;25567:139;;25294:419;;;:::o;25719:173::-;25859:25;25855:1;25847:6;25843:14;25836:49;25719:173;:::o;25898:366::-;26040:3;26061:67;26125:2;26120:3;26061:67;:::i;:::-;26054:74;;26137:93;26226:3;26137:93;:::i;:::-;26255:2;26250:3;26246:12;26239:19;;25898:366;;;:::o;26270:419::-;26436:4;26474:2;26463:9;26459:18;26451:26;;26523:9;26517:4;26513:20;26509:1;26498:9;26494:17;26487:47;26551:131;26677:4;26551:131;:::i;:::-;26543:139;;26270:419;;;:::o;26695:181::-;26835:33;26831:1;26823:6;26819:14;26812:57;26695:181;:::o;26882:366::-;27024:3;27045:67;27109:2;27104:3;27045:67;:::i;:::-;27038:74;;27121:93;27210:3;27121:93;:::i;:::-;27239:2;27234:3;27230:12;27223:19;;26882:366;;;:::o;27254:419::-;27420:4;27458:2;27447:9;27443:18;27435:26;;27507:9;27501:4;27497:20;27493:1;27482:9;27478:17;27471:47;27535:131;27661:4;27535:131;:::i;:::-;27527:139;;27254:419;;;:::o;27679:442::-;27828:4;27866:2;27855:9;27851:18;27843:26;;27879:71;27947:1;27936:9;27932:17;27923:6;27879:71;:::i;:::-;27960:72;28028:2;28017:9;28013:18;28004:6;27960:72;:::i;:::-;28042;28110:2;28099:9;28095:18;28086:6;28042:72;:::i;:::-;27679:442;;;;;;:::o;28127:332::-;28248:4;28286:2;28275:9;28271:18;28263:26;;28299:71;28367:1;28356:9;28352:17;28343:6;28299:71;:::i;:::-;28380:72;28448:2;28437:9;28433:18;28424:6;28380:72;:::i;:::-;28127:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2294200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AUTO_COMPOUND_FEE()": "415",
								"SECONDS_PER_YEAR()": "369",
								"addRewardPoolFunds(uint256)": "infinite",
								"apyRates(uint256)": "infinite",
								"calculateReward(address,uint256)": "infinite",
								"claimReward(uint256)": "infinite",
								"compoundReward(uint256)": "infinite",
								"feeReceiver()": "2641",
								"getActiveStakes(address)": "infinite",
								"lockPeriods(uint256)": "infinite",
								"owner()": "2581",
								"pendingRewardWithdrawals(address)": "2826",
								"renounceOwnership()": "infinite",
								"rewardPoolBalance()": "2448",
								"rewardToken()": "infinite",
								"setAPY(uint256,uint256)": "infinite",
								"stake(uint256,uint256,bool)": "infinite",
								"stakes(address,uint256)": "infinite",
								"stakingToken()": "infinite",
								"toggleAutoStake(uint256)": "infinite",
								"totalStaked()": "2470",
								"transferOwnership(address)": "infinite",
								"updateFeeReceiver(address)": "infinite",
								"updateRewardToken(address)": "infinite",
								"withdrawRewards()": "infinite"
							},
							"internal": {
								"getPeriodIndex(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 763,
									"end": 770,
									"name": "PUSH",
									"source": 9,
									"value": "278D00"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 772,
									"end": 779,
									"name": "PUSH",
									"source": 9,
									"value": "4F1A00"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 781,
									"end": 788,
									"name": "PUSH",
									"source": 9,
									"value": "76A700"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 730,
									"end": 789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 730,
									"end": 789,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 730,
									"end": 789,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 828,
									"name": "PUSH",
									"source": 9,
									"value": "1F4"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 9,
									"value": "3E8"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 836,
									"end": 840,
									"name": "PUSH",
									"source": 9,
									"value": "5DC"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 795,
									"end": 841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 795,
									"end": 841,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 795,
									"end": 841,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2084,
									"end": 2598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2215,
									"end": 2225,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2277,
									"end": 2278,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2245,
									"end": 2279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2245,
									"end": 2279,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2245,
									"end": 2265,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2245,
									"end": 2279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2245,
									"end": 2279,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2245,
									"end": 2279,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2237,
									"end": 2305,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2237,
									"end": 2305,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2354,
									"end": 2355,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2323,
									"end": 2356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2323,
									"end": 2356,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2323,
									"end": 2342,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2323,
									"end": 2356,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2323,
									"end": 2356,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2323,
									"end": 2356,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2315,
									"end": 2381,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2315,
									"end": 2381,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2424,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2399,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2399,
									"end": 2425,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2411,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2399,
									"end": 2425,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2425,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2391,
									"end": 2450,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2391,
									"end": 2450,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2483,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2535,
									"end": 2554,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2514,
									"end": 2525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2514,
									"end": 2555,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2591,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2576,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2565,
									"end": 2576,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2591,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2084,
									"end": 2598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 418,
									"end": 9768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 418,
									"end": 9768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1979,
									"end": 1982,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1991,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2024,
									"end": 2028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2022,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2015,
									"end": 2029,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2181,
									"end": 2204,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964207374616B696E6720746F6B656E0000000000000000000000"
								},
								{
									"begin": 2177,
									"end": 2178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2165,
									"end": 2179,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2205,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2363,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2445,
									"end": 2447,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2443,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2381,
									"end": 2448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2448,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2448,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2546,
									"end": 2549,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2457,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2577,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2570,
									"end": 2573,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2578,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2578,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2578,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2756,
									"end": 2760,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2783,
									"end": 2792,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2771,
									"end": 2797,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2771,
									"end": 2797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2843,
									"end": 2852,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2837,
									"end": 2841,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2853,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2829,
									"end": 2830,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2818,
									"end": 2827,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2814,
									"end": 2831,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2807,
									"end": 2854,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2997,
									"end": 3001,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2871,
									"end": 3002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2863,
									"end": 3002,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2863,
									"end": 3002,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3185,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3015,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3155,
									"end": 3177,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C69642072657761726420746F6B656E000000000000000000000000"
								},
								{
									"begin": 3151,
									"end": 3152,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3143,
									"end": 3149,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3139,
									"end": 3153,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3132,
									"end": 3178,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3185,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3333,
									"end": 3336,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3418,
									"end": 3420,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3413,
									"end": 3416,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3354,
									"end": 3421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3519,
									"end": 3522,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3430,
									"end": 3523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3550,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3546,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3539,
									"end": 3551,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3767,
									"end": 3769,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3752,
									"end": 3770,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3816,
									"end": 3825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3806,
									"end": 3826,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3802,
									"end": 3803,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3787,
									"end": 3804,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3827,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3970,
									"end": 3974,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3844,
									"end": 3975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4158,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3988,
									"end": 4158,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4150,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420666565207265636569766572000000000000000000000000"
								},
								{
									"begin": 4124,
									"end": 4125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4116,
									"end": 4122,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4112,
									"end": 4126,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4105,
									"end": 4151,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4158,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4306,
									"end": 4309,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4391,
									"end": 4393,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4386,
									"end": 4389,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4327,
									"end": 4394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4492,
									"end": 4495,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 4403,
									"end": 4496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4521,
									"end": 4523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4516,
									"end": 4519,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4524,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4524,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4524,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4702,
									"end": 4706,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4740,
									"end": 4742,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4729,
									"end": 4738,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4725,
									"end": 4743,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4717,
									"end": 4743,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4717,
									"end": 4743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4789,
									"end": 4798,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4787,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4779,
									"end": 4799,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4764,
									"end": 4773,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4777,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4753,
									"end": 4800,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4943,
									"end": 4947,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 4817,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4948,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4948,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "904"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 9768,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220840ed1e62aa496d3cccabd3f402c8eaf5f6286f2dd4afaa18e99ad91fe4f86f564736f6c634300081e0033",
									".code": [
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "7A5C08AE"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "BBD36B61"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "E6A69AB8"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "E6A69AB8"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "F7C618C1"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "F8CF31CB"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "BBD36B61"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "C69BEBE4"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "C7B8981C"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "7A5C08AE"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "817B1CD2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "95A29060"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "AE169A50"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "B3F00674"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "561B2463"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "561B2463"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "584B62A1"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "5ACD2E4C"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "6B494DEF"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "72F702F3"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "630E463"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "1747E0B0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "1852E8D9"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "38BCEAAC"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "4060E257"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "4C8F2A78"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 9768,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1106,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1106,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1106,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9648,
											"end": 9766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9648,
											"end": 9766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9648,
											"end": 9766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3729,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3729,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3729,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 637,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 637,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7176,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 7176,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 730,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 730,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 730,
											"end": 789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2846,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2846,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1055,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1055,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1055,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 8560,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8560,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 795,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 795,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 795,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 542,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 506,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 506,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1204,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1204,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1172,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1172,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6661,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6661,
											"end": 7068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5008,
											"end": 6160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5008,
											"end": 6160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 697,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 697,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 8140,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 8140,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 9343,
											"end": 9578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9343,
											"end": 9578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 6222,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 580,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 580,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 548,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 548,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 8981,
											"end": 9224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 8981,
											"end": 9224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9728,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9747,
											"end": 9753,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9754,
											"end": 9758,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9648,
											"end": 9766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3831,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3831,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3917,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3925,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 3908,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3898,
											"end": 3933,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3890,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3890,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 3998,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4006,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4007,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3992,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4038,
											"end": 4042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4038,
											"end": 4050,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4038,
											"end": 4050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4038,
											"end": 4050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4050,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 4029,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4029,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4114,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4114,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4081,
											"end": 4114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4144,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4128,
											"end": 4144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4163,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4173,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4225,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4124,
											"end": 4225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4189,
											"end": 4214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4189,
											"end": 4214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4225,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4124,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4278,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4278,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4254,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4254,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4343,
											"end": 4347,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4357,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4357,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4329,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4340,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4325,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4310,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4358,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4310,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4390,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4391,
											"end": 4402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4382,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4469,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4448,
											"end": 4469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4469,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4438,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4445,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4434,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4434,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 4518,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4518,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4513,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4487,
											"end": 4502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4487,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4487,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4486,
											"end": 4543,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 4486,
											"end": 4543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4543,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4486,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 681,
											"end": 683,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 637,
											"end": 683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2037,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2023,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2006,
											"end": 2060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7288,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7288,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7288,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7333,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7334,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7316,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7306,
											"end": 7341,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 7298,
											"end": 7365,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 7298,
											"end": 7365,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7376,
											"end": 7398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7415,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7416,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7417,
											"end": 7427,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 7401,
											"end": 7428,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7428,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7376,
											"end": 7428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7376,
											"end": 7428,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7451,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7447,
											"end": 7459,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7446,
											"end": 7459,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 7438,
											"end": 7479,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7438,
											"end": 7479,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7501,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7497,
											"end": 7513,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7489,
											"end": 7539,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7489,
											"end": 7539,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7576,
											"end": 7580,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7576,
											"end": 7591,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7576,
											"end": 7591,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7576,
											"end": 7591,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 7572,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 7591,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 7591,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7549,
											"end": 7608,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7549,
											"end": 7608,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7672,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7652,
											"end": 7659,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7671,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7636,
											"end": 7672,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7672,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7636,
											"end": 7672,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7672,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7672,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 7717,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7707,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7690,
											"end": 7707,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7717,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7717,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 7682,
											"end": 7746,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7682,
											"end": 7746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7774,
											"end": 7789,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7761,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7771,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7757,
											"end": 7771,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7789,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7789,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7789,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7789,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7858,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7868,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7854,
											"end": 7868,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7854,
											"end": 7868,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7840,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7851,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7836,
											"end": 7851,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7851,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7836,
											"end": 7868,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7832,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7869,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7817,
											"end": 7869,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7869,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7869,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7817,
											"end": 7869,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7869,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7817,
											"end": 7869,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7803,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7814,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7799,
											"end": 7814,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7869,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7869,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7869,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7869,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7925,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7898,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7894,
											"end": 7915,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7894,
											"end": 7925,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 7962,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7935,
											"end": 7952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 7935,
											"end": 7962,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7962,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7993,
											"end": 8000,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "593662CBE53E88DF3FEF748665B8C3D3142E5D34DC1B24290F7E953537A00183"
										},
										{
											"begin": 8002,
											"end": 8012,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8018,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8014,
											"end": 8035,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8035,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7978,
											"end": 8036,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7978,
											"end": 8036,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7250,
											"end": 8043,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7250,
											"end": 8043,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7250,
											"end": 8043,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7176,
											"end": 8043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7176,
											"end": 8043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2037,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2023,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2006,
											"end": 2060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2962,
											"end": 2973,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 2994,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2954,
											"end": 3019,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2954,
											"end": 3019,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3043,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3047,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3029,
											"end": 3063,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3029,
											"end": 3063,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3104,
											"end": 3114,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3128,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3137,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3086,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "904"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3074,
											"end": 3138,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3199,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3211,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3188,
											"end": 3212,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3188,
											"end": 3212,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3185,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 3170,
											"end": 3212,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3212,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3170,
											"end": 3212,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3212,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 3170,
											"end": 3212,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3212,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3212,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3240,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3241,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3285,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3325,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3361,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3425,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3458,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3470,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3502,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3481,
											"end": 3492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3481,
											"end": 3502,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3502,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3535,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3DF45CB339F96AE4BDB793EFCB6E22100DD0DC4FD739A4EE2033FE67EA35AF96"
										},
										{
											"begin": 3537,
											"end": 3543,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3556,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3567,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3518,
											"end": 3568,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3568,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 3575,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8650,
											"end": 8661,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8682,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8642,
											"end": 8707,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8642,
											"end": 8707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8735,
											"end": 8740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 8725,
											"end": 8731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8725,
											"end": 8740,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8725,
											"end": 8740,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 8717,
											"end": 8757,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8717,
											"end": 8757,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8803,
											"end": 8809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8788,
											"end": 8799,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 8779,
											"end": 8800,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8809,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "787A1FCA55641CE34A438271930BBB9401DF20DB2B4F510D4F252227D85DF43D"
										},
										{
											"begin": 8835,
											"end": 8846,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8848,
											"end": 8854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8824,
											"end": 8855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8824,
											"end": 8855,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 795,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 542,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "904"
										},
										{
											"begin": 506,
											"end": 542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 506,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1204,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6753,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6790,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6799,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 6763,
											"end": 6830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6763,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6880,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6881,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6892,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 6866,
											"end": 6893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6841,
											"end": 6893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6841,
											"end": 6893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6912,
											"end": 6924,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6911,
											"end": 6924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6903,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6903,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6975,
											"end": 6991,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 6991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6955,
											"end": 6991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7023,
											"end": 7030,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "PUSH",
											"source": 9,
											"value": "FA2D7B35E7CC82247C5AE7E8AE2DC078C2B144B76A6B1068887B3C8892C15DA5"
										},
										{
											"begin": 7032,
											"end": 7042,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7048,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7044,
											"end": 7060,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7006,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7061,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 7068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 7068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 7068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2037,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2023,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2037,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2006,
											"end": 2060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2006,
											"end": 2060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5104,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5117,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5154,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5162,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5163,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5170,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5170,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5145,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5170,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5127,
											"end": 5194,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5127,
											"end": 5194,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5244,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5245,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5246,
											"end": 5256,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5230,
											"end": 5257,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5257,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5257,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5257,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5280,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5276,
											"end": 5288,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5275,
											"end": 5288,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5267,
											"end": 5308,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5267,
											"end": 5308,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5349,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5345,
											"end": 5360,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5360,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5326,
											"end": 5341,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5326,
											"end": 5360,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5326,
											"end": 5360,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5318,
											"end": 5377,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 5318,
											"end": 5377,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5441,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5421,
											"end": 5428,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5440,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5405,
											"end": 5441,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5441,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5405,
											"end": 5441,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5441,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5441,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5480,
											"end": 5486,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5459,
											"end": 5476,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5486,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5486,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5451,
											"end": 5515,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5451,
											"end": 5515,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5541,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5526,
											"end": 5530,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5526,
											"end": 5538,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5564,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5560,
											"end": 5576,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5584,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5580,
											"end": 5601,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5601,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5580,
											"end": 5605,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5560,
											"end": 5605,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5677,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5651,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5647,
											"end": 5668,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5668,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5677,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5647,
											"end": 5677,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5677,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5677,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5647,
											"end": 5677,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5677,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5647,
											"end": 5677,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5677,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5677,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5702,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 681,
											"end": 683,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5706,
											"end": 5721,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5706,
											"end": 5741,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5706,
											"end": 5741,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5706,
											"end": 5741,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5706,
											"end": 5741,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5705,
											"end": 5750,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5705,
											"end": 5750,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5705,
											"end": 5750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5803,
											"end": 5806,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5800,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5785,
											"end": 5806,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5785,
											"end": 5806,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5806,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5785,
											"end": 5806,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5806,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5806,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5868,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5845,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5853,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5854,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5821,
											"end": 5868,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5821,
											"end": 5868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5923,
											"end": 5926,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5907,
											"end": 5918,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5882,
											"end": 5926,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5926,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5961,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5940,
											"end": 5957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5940,
											"end": 5976,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5976,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5987,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5987,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5987,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6050,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6039,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6007,
											"end": 6050,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6007,
											"end": 6050,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6091,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6064,
											"end": 6081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6064,
											"end": 6091,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6091,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5556,
											"end": 6102,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6125,
											"end": 6132,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A"
										},
										{
											"begin": 6134,
											"end": 6140,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6142,
											"end": 6152,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 6117,
											"end": 6153,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6153,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 6160,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 6160,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 6160,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 6160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 6160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 723,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 697,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8231,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 8213,
											"end": 8247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8213,
											"end": 8247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8286,
											"end": 8296,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8310,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8319,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8257,
											"end": 8268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8257,
											"end": 8285,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8257,
											"end": 8285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8257,
											"end": 8320,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 8330,
											"end": 8347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8330,
											"end": 8357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "21D99275A51DF78F567D33E4B0C6EA547B7675BCE0EAB2CCCA69E131BF047ABE"
										},
										{
											"begin": 8393,
											"end": 8399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 8372,
											"end": 8400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8400,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8140,
											"end": 8407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9457,
											"end": 9458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9431,
											"end": 9459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9431,
											"end": 9459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9445,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9431,
											"end": 9459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9459,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 9423,
											"end": 9484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 9423,
											"end": 9484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9494,
											"end": 9505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9556,
											"end": 9570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE"
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9571,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 6222,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6323,
											"end": 6333,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6334,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6334,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6361,
											"end": 6362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6362,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 6344,
											"end": 6389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6435,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6436,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6440,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6475,
											"end": 6485,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6487,
											"end": 6493,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6461,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6450,
											"end": 6474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6450,
											"end": 6494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6536,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "BD1EA9966F82CCB966523D3922A6E4AD4BF3EA70E9201BD7A106DE847CC5E616"
										},
										{
											"begin": 6538,
											"end": 6544,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 6509,
											"end": 6545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6545,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6552,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 623,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 580,
											"end": 631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 580,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 573,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9095,
											"end": 9096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9069,
											"end": 9097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9069,
											"end": 9097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9097,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9061,
											"end": 9122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9061,
											"end": 9122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9153,
											"end": 9167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9132,
											"end": 9143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9202,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A5289BA11778999F4DFB9415023783188D42BBB5DB0612CBFBE55999069612A0"
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9183,
											"end": 9217,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4744,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4792,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4781,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4795,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4795,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4765,
											"end": 4838,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4823,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4815,
											"end": 4823,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4838,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4765,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4857,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1732,
											"end": 1744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 2214,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2239,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2335,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2433,
											"end": 2438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2418,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2663,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2824,
											"end": 2828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2801,
											"end": 2813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2767,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2916,
											"end": 2932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 2933,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3003,
											"end": 3007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2946,
											"end": 3009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2850,
											"end": 3019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3126,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3284,
											"end": 3288,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3277,
											"end": 3282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3354,
											"end": 3358,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3303,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3465,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3524,
											"end": 3527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3478,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3643,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 3715,
											"end": 3719,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3710,
											"end": 3713,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3706,
											"end": 3720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3658,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 3738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 3980,
											"end": 3983,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3886,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4011,
											"end": 4014,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 4021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 4021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4524,
											"end": 4529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4450,
											"end": 4530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4649,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4546,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4658,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4758,
											"end": 4763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4682,
											"end": 4764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4834,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4835,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4911,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 5042,
											"end": 5045,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4931,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 5046,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 5046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 5069,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 5165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4807,
											"end": 4821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5184,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5488,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5658,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 5506,
											"end": 5666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5801,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5679,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 5770,
											"end": 5775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5752,
											"end": 5776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5777,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5793,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5898,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5907,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6063,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6052,
											"end": 6075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6083,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6273,
											"end": 6280,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6262,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6228,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6390,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6356,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6526,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6538,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6511,
											"end": 6543,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6546,
											"end": 6625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6736,
											"end": 6743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6727,
											"end": 6733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6716,
											"end": 6725,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6691,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6837,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6859,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6875,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6932,
											"end": 6937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6977,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 7010,
											"end": 7015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6986,
											"end": 7016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7155,
											"end": 7164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7153,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7165,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7170,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 7173,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7363,
											"end": 7370,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7318,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7371,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7422,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 7491,
											"end": 7498,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7480,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7446,
											"end": 7499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7499,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7548,
											"end": 7550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7616,
											"end": 7623,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7574,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 7728,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8024,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 8010,
											"end": 8019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8006,
											"end": 8025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8035,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8116,
											"end": 8188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 8266,
											"end": 8268,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8255,
											"end": 8264,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8198,
											"end": 8270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8342,
											"end": 8344,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8331,
											"end": 8340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 8280,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 8418,
											"end": 8421,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8407,
											"end": 8416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8403,
											"end": 8422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8400,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 8356,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8501,
											"end": 8504,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8486,
											"end": 8505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8433,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8587,
											"end": 8593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8632,
											"end": 8641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8630,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8642,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8647,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 8650,
											"end": 8729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 8840,
											"end": 8847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8829,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8816,
											"end": 8838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 8795,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8848,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 8957,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 8923,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 8986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9059,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 8999,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9027,
											"end": 9030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9207,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 9065,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9115,
											"end": 9124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9166,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9175,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 9175,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9199,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 9175,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9166,
											"end": 9200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9200,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 9166,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 9148,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9201,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 9148,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9339,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 9213,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9263,
											"end": 9272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9327,
											"end": 9332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 9296,
											"end": 9333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 9296,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9485,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 9345,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9409,
											"end": 9418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9442,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 9473,
											"end": 9478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9442,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 9442,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9442,
											"end": 9479,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 9442,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9650,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 9491,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 9637,
											"end": 9642,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 9592,
											"end": 9643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9643,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 9592,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9587,
											"end": 9590,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9580,
											"end": 9644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9906,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 9656,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9763,
											"end": 9767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9803,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9790,
											"end": 9799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9778,
											"end": 9804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9881,
											"end": 9898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 9814,
											"end": 9899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9899,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 9814,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10030,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 9912,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 9999,
											"end": 10023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10023,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 9999,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 9997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9987,
											"end": 10024,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10258,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 10036,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10129,
											"end": 10133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10167,
											"end": 10169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10248,
											"end": 10249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10233,
											"end": 10250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10230,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 10180,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10251,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 10180,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10258,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10433,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 10264,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10382,
											"end": 10388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10377,
											"end": 10380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10370,
											"end": 10389,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10604,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 10439,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10579,
											"end": 10596,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964206163636F756E740000000000000000000000000000000000"
										},
										{
											"begin": 10575,
											"end": 10576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10563,
											"end": 10577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10556,
											"end": 10597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10976,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 10610,
											"end": 10976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10752,
											"end": 10755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10773,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 10837,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 10832,
											"end": 10835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 10773,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10840,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 10773,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10849,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10849,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 10849,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10849,
											"end": 10942,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 10849,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10962,
											"end": 10965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 10970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 10970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11401,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10982,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11186,
											"end": 11188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11175,
											"end": 11184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11171,
											"end": 11189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11163,
											"end": 11189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11163,
											"end": 11189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11225,
											"end": 11245,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11206,
											"end": 11223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11199,
											"end": 11246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11263,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 11389,
											"end": 11393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11263,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 11263,
											"end": 11394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11263,
											"end": 11394,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 11263,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11255,
											"end": 11394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11255,
											"end": 11394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11407,
											"end": 11576,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 11407,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11547,
											"end": 11568,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964207374616B6520696E64657800000000000000000000000000"
										},
										{
											"begin": 11543,
											"end": 11544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11531,
											"end": 11545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11524,
											"end": 11569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11407,
											"end": 11576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11407,
											"end": 11576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 11809,
											"end": 11811,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 11804,
											"end": 11807,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 11745,
											"end": 11812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 11745,
											"end": 11812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 11910,
											"end": 11913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 11821,
											"end": 11914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 11821,
											"end": 11914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11939,
											"end": 11941,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11934,
											"end": 11937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 11942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11923,
											"end": 11942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11923,
											"end": 11942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12158,
											"end": 12160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12147,
											"end": 12156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12135,
											"end": 12161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12197,
											"end": 12217,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12178,
											"end": 12195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 12361,
											"end": 12365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 12235,
											"end": 12366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 12235,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12227,
											"end": 12366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12227,
											"end": 12366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12559,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 12379,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12427,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12424,
											"end": 12425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12417,
											"end": 12505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12524,
											"end": 12528,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12521,
											"end": 12522,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12514,
											"end": 12529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12548,
											"end": 12552,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12545,
											"end": 12546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12553,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12565,
											"end": 12730,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 12565,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12705,
											"end": 12722,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920636C61696D65640000000000000000000000000000000000"
										},
										{
											"begin": 12701,
											"end": 12702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12693,
											"end": 12699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 12703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12682,
											"end": 12723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12565,
											"end": 12730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12565,
											"end": 12730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13102,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 12736,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12878,
											"end": 12881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12899,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 12963,
											"end": 12965,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 12958,
											"end": 12961,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12899,
											"end": 12966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 12899,
											"end": 12966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12899,
											"end": 12966,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 12899,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12892,
											"end": 12966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12892,
											"end": 12966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12975,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 13064,
											"end": 13067,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12975,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 12975,
											"end": 13068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12975,
											"end": 13068,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 12975,
											"end": 13068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13093,
											"end": 13095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13077,
											"end": 13096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13077,
											"end": 13096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 13102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13527,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 13108,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13274,
											"end": 13278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13314,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13301,
											"end": 13310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13297,
											"end": 13315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13289,
											"end": 13315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13289,
											"end": 13315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13370,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13355,
											"end": 13359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13371,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13347,
											"end": 13348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13332,
											"end": 13349,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13325,
											"end": 13372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13389,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13515,
											"end": 13519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13389,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 13389,
											"end": 13520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13389,
											"end": 13520,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 13389,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13381,
											"end": 13520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13381,
											"end": 13520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13713,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13533,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13581,
											"end": 13658,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13578,
											"end": 13579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13571,
											"end": 13659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13678,
											"end": 13682,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13668,
											"end": 13683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 13706,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13699,
											"end": 13700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13692,
											"end": 13707,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13913,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 13719,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13779,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13797,
											"end": 13798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13779,
											"end": 13799,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 13779,
											"end": 13799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13779,
											"end": 13799,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 13779,
											"end": 13799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13774,
											"end": 13799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 13831,
											"end": 13832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 13813,
											"end": 13833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13833,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 13813,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13808,
											"end": 13833,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13808,
											"end": 13833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13850,
											"end": 13859,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13842,
											"end": 13859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13842,
											"end": 13859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13881,
											"end": 13882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13875,
											"end": 13879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 13883,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13906,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 13869,
											"end": 13906,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13886,
											"end": 13904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13906,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 13869,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 14110,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 13919,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13959,
											"end": 13962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13978,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 13996,
											"end": 13997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13978,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 13978,
											"end": 13998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13978,
											"end": 13998,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 13978,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13973,
											"end": 13998,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13973,
											"end": 13998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 14030,
											"end": 14031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14012,
											"end": 14032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14032,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 14012,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14007,
											"end": 14032,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14007,
											"end": 14032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14048,
											"end": 14057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14041,
											"end": 14057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14041,
											"end": 14057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14070,
											"end": 14080,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14067,
											"end": 14103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14067,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 14067,
											"end": 14103,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14083,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 14083,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14083,
											"end": 14101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14083,
											"end": 14101,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 14083,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14067,
											"end": 14103,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 14067,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 14110,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 14110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 14110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 14110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 14110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14526,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 14116,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14156,
											"end": 14163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14179,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14179,
											"end": 14199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14179,
											"end": 14199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14179,
											"end": 14199,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 14179,
											"end": 14199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 14231,
											"end": 14232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14213,
											"end": 14233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14233,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 14213,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14208,
											"end": 14233,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14208,
											"end": 14233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14268,
											"end": 14269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14265,
											"end": 14266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14261,
											"end": 14270,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 14308,
											"end": 14319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14290,
											"end": 14320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 14290,
											"end": 14320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14279,
											"end": 14320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14279,
											"end": 14320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14469,
											"end": 14470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14460,
											"end": 14467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14456,
											"end": 14471,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14453,
											"end": 14454,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14472,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14430,
											"end": 14431,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14403,
											"end": 14486,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14380,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 14380,
											"end": 14519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 14499,
											"end": 14517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14380,
											"end": 14519,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 14380,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14164,
											"end": 14526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14532,
											"end": 14712,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14532,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14580,
											"end": 14657,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14577,
											"end": 14578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14570,
											"end": 14658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14677,
											"end": 14681,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 14674,
											"end": 14675,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14667,
											"end": 14682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14701,
											"end": 14705,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14698,
											"end": 14699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14691,
											"end": 14706,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14903,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 14718,
											"end": 14903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14758,
											"end": 14759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 14793,
											"end": 14794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14775,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 14827,
											"end": 14828,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14809,
											"end": 14829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14848,
											"end": 14849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14838,
											"end": 14873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 14838,
											"end": 14873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 14853,
											"end": 14871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14838,
											"end": 14873,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 14838,
											"end": 14873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14895,
											"end": 14896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14892,
											"end": 14893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14888,
											"end": 14897,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14903,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14909,
											"end": 15077,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 14909,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15049,
											"end": 15069,
											"name": "PUSH",
											"source": 10,
											"value": "43616C6C6572206D75737420626520454F410000000000000000000000000000"
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15037,
											"end": 15043,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15033,
											"end": 15047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15026,
											"end": 15070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14909,
											"end": 15077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14909,
											"end": 15077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15449,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 15083,
											"end": 15449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15225,
											"end": 15228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15246,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 15310,
											"end": 15312,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 15305,
											"end": 15308,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 15246,
											"end": 15313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15313,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 15246,
											"end": 15313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15322,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 15411,
											"end": 15414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15322,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 15322,
											"end": 15415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15322,
											"end": 15415,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 15322,
											"end": 15415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15442,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15435,
											"end": 15438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15431,
											"end": 15443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15424,
											"end": 15443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15424,
											"end": 15443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15083,
											"end": 15449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15874,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 15455,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15621,
											"end": 15625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15659,
											"end": 15661,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15648,
											"end": 15657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15636,
											"end": 15662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15708,
											"end": 15717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15718,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15694,
											"end": 15695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15692,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15679,
											"end": 15696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15719,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15736,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 15862,
											"end": 15866,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15736,
											"end": 15867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 15736,
											"end": 15867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15736,
											"end": 15867,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 15736,
											"end": 15867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15880,
											"end": 16051,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 15880,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16043,
											"name": "PUSH",
											"source": 10,
											"value": "4175746F2D7374616B696E672064697361626C65640000000000000000000000"
										},
										{
											"begin": 16016,
											"end": 16017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16008,
											"end": 16014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16004,
											"end": 16018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15997,
											"end": 16044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15880,
											"end": 16051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15880,
											"end": 16051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16199,
											"end": 16202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 16284,
											"end": 16286,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 16279,
											"end": 16282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 16220,
											"end": 16287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 16220,
											"end": 16287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16213,
											"end": 16287,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16213,
											"end": 16287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 16385,
											"end": 16388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 16296,
											"end": 16389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 16296,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16414,
											"end": 16416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16409,
											"end": 16412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16405,
											"end": 16417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16398,
											"end": 16417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16398,
											"end": 16417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16595,
											"end": 16599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16633,
											"end": 16635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16622,
											"end": 16631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16618,
											"end": 16636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16610,
											"end": 16636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16610,
											"end": 16636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16676,
											"end": 16680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16672,
											"end": 16692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16668,
											"end": 16669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16657,
											"end": 16666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16653,
											"end": 16670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16646,
											"end": 16693,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 16836,
											"end": 16840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 16710,
											"end": 16841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 16710,
											"end": 16841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16702,
											"end": 16841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16702,
											"end": 16841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16854,
											"end": 17016,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 16854,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16994,
											"end": 17008,
											"name": "PUSH",
											"source": 10,
											"value": "5374696C6C206C6F636B65640000000000000000000000000000000000000000"
										},
										{
											"begin": 16990,
											"end": 16991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16982,
											"end": 16988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 16992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16971,
											"end": 17009,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16854,
											"end": 17016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16854,
											"end": 17016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17164,
											"end": 17167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 17249,
											"end": 17251,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 17244,
											"end": 17247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 17185,
											"end": 17252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17178,
											"end": 17252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17178,
											"end": 17252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 17350,
											"end": 17353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 17261,
											"end": 17354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17379,
											"end": 17381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17374,
											"end": 17377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17370,
											"end": 17382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17363,
											"end": 17382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17363,
											"end": 17382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17598,
											"end": 17600,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17587,
											"end": 17596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17583,
											"end": 17601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17647,
											"end": 17656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17641,
											"end": 17645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 17657,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17622,
											"end": 17631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17618,
											"end": 17635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17611,
											"end": 17658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 17801,
											"end": 17805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 17675,
											"end": 17806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17667,
											"end": 17806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17667,
											"end": 17806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17993,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 17819,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17959,
											"end": 17985,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742072657761726420706F6F6C0000000000000000"
										},
										{
											"begin": 17955,
											"end": 17956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17947,
											"end": 17953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17943,
											"end": 17957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17936,
											"end": 17986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17999,
											"end": 18365,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 17999,
											"end": 18365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18141,
											"end": 18144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18162,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 18226,
											"end": 18228,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 18221,
											"end": 18224,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18162,
											"end": 18229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 18162,
											"end": 18229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18162,
											"end": 18229,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 18162,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18155,
											"end": 18229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18155,
											"end": 18229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18238,
											"end": 18331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 18327,
											"end": 18330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18238,
											"end": 18331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 18238,
											"end": 18331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18238,
											"end": 18331,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 18238,
											"end": 18331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18356,
											"end": 18358,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18351,
											"end": 18354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18340,
											"end": 18359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18340,
											"end": 18359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17999,
											"end": 18365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17999,
											"end": 18365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17999,
											"end": 18365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17999,
											"end": 18365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18790,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 18371,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18537,
											"end": 18541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18575,
											"end": 18577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18564,
											"end": 18573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18560,
											"end": 18578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18552,
											"end": 18578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18552,
											"end": 18578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18624,
											"end": 18633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18618,
											"end": 18622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18614,
											"end": 18634,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18610,
											"end": 18611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18599,
											"end": 18608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18595,
											"end": 18612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18652,
											"end": 18783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 18778,
											"end": 18782,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18652,
											"end": 18783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 18652,
											"end": 18783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18652,
											"end": 18783,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 18652,
											"end": 18783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18644,
											"end": 18783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18644,
											"end": 18783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18917,
											"end": 18921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 18957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18944,
											"end": 18953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18940,
											"end": 18958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18932,
											"end": 18958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18932,
											"end": 18958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 19036,
											"end": 19037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19025,
											"end": 19034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19021,
											"end": 19038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 18968,
											"end": 19039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 18968,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 19117,
											"end": 19119,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19106,
											"end": 19115,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19102,
											"end": 19120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19093,
											"end": 19099,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 19049,
											"end": 19121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 19049,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 19128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19134,
											"end": 19304,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 19134,
											"end": 19304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19274,
											"end": 19296,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420706572696F6420696E646578000000000000000000000000"
										},
										{
											"begin": 19270,
											"end": 19271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19262,
											"end": 19268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19258,
											"end": 19272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19251,
											"end": 19297,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19134,
											"end": 19304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19134,
											"end": 19304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19310,
											"end": 19676,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 19310,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19452,
											"end": 19455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 19532,
											"end": 19535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 19473,
											"end": 19540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 19473,
											"end": 19540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19466,
											"end": 19540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19466,
											"end": 19540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19549,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 19638,
											"end": 19641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19549,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 19549,
											"end": 19642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19549,
											"end": 19642,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 19549,
											"end": 19642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19667,
											"end": 19669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19662,
											"end": 19665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19658,
											"end": 19670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19651,
											"end": 19670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19651,
											"end": 19670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19310,
											"end": 19676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19310,
											"end": 19676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19310,
											"end": 19676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19310,
											"end": 19676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 20101,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 19682,
											"end": 20101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 19852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19886,
											"end": 19888,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19875,
											"end": 19884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19871,
											"end": 19889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19863,
											"end": 19889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19863,
											"end": 19889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19935,
											"end": 19944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19929,
											"end": 19933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19925,
											"end": 19945,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19921,
											"end": 19922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19910,
											"end": 19919,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19906,
											"end": 19923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19899,
											"end": 19946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 20089,
											"end": 20093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 19963,
											"end": 20094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19963,
											"end": 20094,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 19963,
											"end": 20094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19955,
											"end": 20094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19955,
											"end": 20094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 20101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 20101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 20101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 20101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20107,
											"end": 20268,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 20107,
											"end": 20268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20247,
											"end": 20260,
											"name": "PUSH",
											"source": 10,
											"value": "5A65726F20616D6F756E74000000000000000000000000000000000000000000"
										},
										{
											"begin": 20243,
											"end": 20244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20231,
											"end": 20245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20224,
											"end": 20261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20107,
											"end": 20268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20107,
											"end": 20268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20640,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 20274,
											"end": 20640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20416,
											"end": 20419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20437,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 20501,
											"end": 20503,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 20496,
											"end": 20499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 20437,
											"end": 20504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20504,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 20437,
											"end": 20504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20430,
											"end": 20504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20430,
											"end": 20504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20513,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 20602,
											"end": 20605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20513,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 20513,
											"end": 20606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20513,
											"end": 20606,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 20513,
											"end": 20606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20631,
											"end": 20633,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20626,
											"end": 20629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20622,
											"end": 20634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20615,
											"end": 20634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20615,
											"end": 20634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20274,
											"end": 20640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 21065,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 20646,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20812,
											"end": 20816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20850,
											"end": 20852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20839,
											"end": 20848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20835,
											"end": 20853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20827,
											"end": 20853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20827,
											"end": 20853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20899,
											"end": 20908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20893,
											"end": 20897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20889,
											"end": 20909,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20885,
											"end": 20886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20874,
											"end": 20883,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20870,
											"end": 20887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20863,
											"end": 20910,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20927,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 21053,
											"end": 21057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20927,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 20927,
											"end": 21058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20927,
											"end": 21058,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 20927,
											"end": 21058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20919,
											"end": 21058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20919,
											"end": 21058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 21065,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 21065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 21065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 21065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21214,
											"end": 21218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21252,
											"end": 21254,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21241,
											"end": 21250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21237,
											"end": 21255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21229,
											"end": 21255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21229,
											"end": 21255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21265,
											"end": 21336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 21333,
											"end": 21334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21322,
											"end": 21331,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21318,
											"end": 21335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21309,
											"end": 21315,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21265,
											"end": 21336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 21265,
											"end": 21336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21265,
											"end": 21336,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 21265,
											"end": 21336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21346,
											"end": 21418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 21414,
											"end": 21416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21403,
											"end": 21412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21399,
											"end": 21417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21390,
											"end": 21396,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21346,
											"end": 21418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 21346,
											"end": 21418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21346,
											"end": 21418,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 21346,
											"end": 21418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 21490,
											"end": 21492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21479,
											"end": 21488,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21475,
											"end": 21493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21466,
											"end": 21472,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 21428,
											"end": 21494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21494,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 21428,
											"end": 21494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21071,
											"end": 21501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21507,
											"end": 21669,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 21507,
											"end": 21669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21647,
											"end": 21661,
											"name": "PUSH",
											"source": 10,
											"value": "41505920746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 21643,
											"end": 21644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21635,
											"end": 21641,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21631,
											"end": 21645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21624,
											"end": 21662,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21507,
											"end": 21669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21507,
											"end": 21669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21675,
											"end": 22041,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 21675,
											"end": 22041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21817,
											"end": 21820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21838,
											"end": 21905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 21902,
											"end": 21904,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 21897,
											"end": 21900,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 21905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 21838,
											"end": 21905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21838,
											"end": 21905,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 21838,
											"end": 21905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21831,
											"end": 21905,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21831,
											"end": 21905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21914,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 22003,
											"end": 22006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21914,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 21914,
											"end": 22007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21914,
											"end": 22007,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 21914,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22032,
											"end": 22034,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22027,
											"end": 22030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22023,
											"end": 22035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22016,
											"end": 22035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22016,
											"end": 22035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21675,
											"end": 22041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21675,
											"end": 22041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21675,
											"end": 22041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21675,
											"end": 22041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22047,
											"end": 22466,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 22047,
											"end": 22466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22213,
											"end": 22217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22251,
											"end": 22253,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22240,
											"end": 22249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22236,
											"end": 22254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22228,
											"end": 22254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22228,
											"end": 22254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22300,
											"end": 22309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22294,
											"end": 22298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22290,
											"end": 22310,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22286,
											"end": 22287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22275,
											"end": 22284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22271,
											"end": 22288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22264,
											"end": 22311,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22328,
											"end": 22459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 22454,
											"end": 22458,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22328,
											"end": 22459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 22328,
											"end": 22459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22328,
											"end": 22459,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 22328,
											"end": 22459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22320,
											"end": 22459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22320,
											"end": 22459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22047,
											"end": 22466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22047,
											"end": 22466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22047,
											"end": 22466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22047,
											"end": 22466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22587,
											"end": 22591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22625,
											"end": 22627,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22614,
											"end": 22623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22610,
											"end": 22628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22602,
											"end": 22628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22602,
											"end": 22628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 22706,
											"end": 22707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22695,
											"end": 22704,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22691,
											"end": 22708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22682,
											"end": 22688,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 22638,
											"end": 22709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 22638,
											"end": 22709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 22781,
											"end": 22783,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22770,
											"end": 22779,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22766,
											"end": 22784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22757,
											"end": 22763,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 22719,
											"end": 22785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22719,
											"end": 22785,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 22719,
											"end": 22785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 22968,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 22798,
											"end": 22968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22938,
											"end": 22960,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420666565207265636569766572000000000000000000000000"
										},
										{
											"begin": 22934,
											"end": 22935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22926,
											"end": 22932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22922,
											"end": 22936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22915,
											"end": 22961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 22968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 22968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22974,
											"end": 23340,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 22974,
											"end": 23340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23116,
											"end": 23119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23137,
											"end": 23204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 23201,
											"end": 23203,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 23196,
											"end": 23199,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23137,
											"end": 23204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 23137,
											"end": 23204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23137,
											"end": 23204,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 23137,
											"end": 23204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23130,
											"end": 23204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23130,
											"end": 23204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23213,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 23302,
											"end": 23305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23213,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 23213,
											"end": 23306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23213,
											"end": 23306,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 23213,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23331,
											"end": 23333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23326,
											"end": 23329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23322,
											"end": 23334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23315,
											"end": 23334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22974,
											"end": 23340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22974,
											"end": 23340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22974,
											"end": 23340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22974,
											"end": 23340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23765,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 23346,
											"end": 23765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23512,
											"end": 23516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23550,
											"end": 23552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23539,
											"end": 23548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23535,
											"end": 23553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23527,
											"end": 23553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23527,
											"end": 23553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23599,
											"end": 23608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23593,
											"end": 23597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23589,
											"end": 23609,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23585,
											"end": 23586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23574,
											"end": 23583,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23570,
											"end": 23587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23563,
											"end": 23610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23627,
											"end": 23758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 23753,
											"end": 23757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23627,
											"end": 23758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 23627,
											"end": 23758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23627,
											"end": 23758,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 23627,
											"end": 23758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23619,
											"end": 23758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23619,
											"end": 23758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23346,
											"end": 23765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23771,
											"end": 23943,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 23771,
											"end": 23943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23911,
											"end": 23935,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F207265776172647320746F20776974686472617700000000000000000000"
										},
										{
											"begin": 23907,
											"end": 23908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23899,
											"end": 23905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23895,
											"end": 23909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23888,
											"end": 23936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23771,
											"end": 23943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23771,
											"end": 23943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23949,
											"end": 24315,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 23949,
											"end": 24315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24091,
											"end": 24094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24112,
											"end": 24179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 24176,
											"end": 24178,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 24171,
											"end": 24174,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24112,
											"end": 24179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 24112,
											"end": 24179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24112,
											"end": 24179,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 24112,
											"end": 24179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24105,
											"end": 24179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24105,
											"end": 24179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24188,
											"end": 24281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 24277,
											"end": 24280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24188,
											"end": 24281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 24188,
											"end": 24281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24188,
											"end": 24281,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 24188,
											"end": 24281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24306,
											"end": 24308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24301,
											"end": 24304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24297,
											"end": 24309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24290,
											"end": 24309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24290,
											"end": 24309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23949,
											"end": 24315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23949,
											"end": 24315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23949,
											"end": 24315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23949,
											"end": 24315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24321,
											"end": 24740,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 24321,
											"end": 24740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24487,
											"end": 24491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24525,
											"end": 24527,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24514,
											"end": 24523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24510,
											"end": 24528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24574,
											"end": 24583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24568,
											"end": 24572,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24564,
											"end": 24584,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24560,
											"end": 24561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24549,
											"end": 24558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24545,
											"end": 24562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24538,
											"end": 24585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24602,
											"end": 24733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 24728,
											"end": 24732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24602,
											"end": 24733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 24602,
											"end": 24733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24602,
											"end": 24733,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 24602,
											"end": 24733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24594,
											"end": 24733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24594,
											"end": 24733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24321,
											"end": 24740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24321,
											"end": 24740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24321,
											"end": 24740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24321,
											"end": 24740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24746,
											"end": 24916,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 24746,
											"end": 24916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24886,
											"end": 24908,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C69642072657761726420746F6B656E000000000000000000000000"
										},
										{
											"begin": 24882,
											"end": 24883,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24874,
											"end": 24880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24870,
											"end": 24884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24863,
											"end": 24909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24746,
											"end": 24916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24746,
											"end": 24916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25064,
											"end": 25067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 25149,
											"end": 25151,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 25144,
											"end": 25147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 25085,
											"end": 25152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 25085,
											"end": 25152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25078,
											"end": 25152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25078,
											"end": 25152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 25250,
											"end": 25253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 25161,
											"end": 25254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 25161,
											"end": 25254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25279,
											"end": 25281,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25274,
											"end": 25277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25270,
											"end": 25282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25263,
											"end": 25282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25263,
											"end": 25282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24922,
											"end": 25288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24922,
											"end": 25288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25460,
											"end": 25464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25498,
											"end": 25500,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25487,
											"end": 25496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25483,
											"end": 25501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25475,
											"end": 25501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25475,
											"end": 25501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25547,
											"end": 25556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25541,
											"end": 25545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25537,
											"end": 25557,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25533,
											"end": 25534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25522,
											"end": 25531,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25518,
											"end": 25535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25511,
											"end": 25558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 25701,
											"end": 25705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 25575,
											"end": 25706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 25575,
											"end": 25706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25567,
											"end": 25706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25567,
											"end": 25706,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25294,
											"end": 25713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25294,
											"end": 25713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25719,
											"end": 25892,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 25719,
											"end": 25892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25859,
											"end": 25884,
											"name": "PUSH",
											"source": 10,
											"value": "556E737570706F72746564206C6F636B20706572696F64000000000000000000"
										},
										{
											"begin": 25855,
											"end": 25856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25847,
											"end": 25853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25843,
											"end": 25857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25836,
											"end": 25885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25719,
											"end": 25892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25719,
											"end": 25892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25898,
											"end": 26264,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 25898,
											"end": 26264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26040,
											"end": 26043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26061,
											"end": 26128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 26125,
											"end": 26127,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 26120,
											"end": 26123,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26061,
											"end": 26128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 26061,
											"end": 26128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26061,
											"end": 26128,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 26061,
											"end": 26128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26054,
											"end": 26128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26054,
											"end": 26128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26137,
											"end": 26230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 26226,
											"end": 26229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26137,
											"end": 26230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 26137,
											"end": 26230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26137,
											"end": 26230,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 26137,
											"end": 26230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26255,
											"end": 26257,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26250,
											"end": 26253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26246,
											"end": 26258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26239,
											"end": 26258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26239,
											"end": 26258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25898,
											"end": 26264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25898,
											"end": 26264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25898,
											"end": 26264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25898,
											"end": 26264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26270,
											"end": 26689,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 26270,
											"end": 26689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26436,
											"end": 26440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26474,
											"end": 26476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26463,
											"end": 26472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26459,
											"end": 26477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26451,
											"end": 26477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26451,
											"end": 26477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26523,
											"end": 26532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26517,
											"end": 26521,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26513,
											"end": 26533,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26509,
											"end": 26510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26498,
											"end": 26507,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26494,
											"end": 26511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26487,
											"end": 26534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26551,
											"end": 26682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 26677,
											"end": 26681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26551,
											"end": 26682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 26551,
											"end": 26682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26551,
											"end": 26682,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 26551,
											"end": 26682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26543,
											"end": 26682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26543,
											"end": 26682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26270,
											"end": 26689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26270,
											"end": 26689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26270,
											"end": 26689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26270,
											"end": 26689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26695,
											"end": 26876,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 26695,
											"end": 26876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26835,
											"end": 26868,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 26831,
											"end": 26832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26823,
											"end": 26829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26819,
											"end": 26833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26812,
											"end": 26869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26695,
											"end": 26876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26695,
											"end": 26876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26882,
											"end": 27248,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 26882,
											"end": 27248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27024,
											"end": 27027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27045,
											"end": 27112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 27109,
											"end": 27111,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 27104,
											"end": 27107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27045,
											"end": 27112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 27045,
											"end": 27112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27045,
											"end": 27112,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 27045,
											"end": 27112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27038,
											"end": 27112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27038,
											"end": 27112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27121,
											"end": 27214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 27210,
											"end": 27213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27121,
											"end": 27214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 27121,
											"end": 27214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27121,
											"end": 27214,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 27121,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27239,
											"end": 27241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27234,
											"end": 27237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27230,
											"end": 27242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27223,
											"end": 27242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27223,
											"end": 27242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26882,
											"end": 27248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26882,
											"end": 27248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26882,
											"end": 27248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26882,
											"end": 27248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27254,
											"end": 27673,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 27254,
											"end": 27673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27420,
											"end": 27424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27458,
											"end": 27460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27447,
											"end": 27456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27443,
											"end": 27461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27435,
											"end": 27461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27435,
											"end": 27461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27507,
											"end": 27516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27501,
											"end": 27505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27497,
											"end": 27517,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27493,
											"end": 27494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27482,
											"end": 27491,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27478,
											"end": 27495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27471,
											"end": 27518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27535,
											"end": 27666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 27661,
											"end": 27665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27535,
											"end": 27666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 27535,
											"end": 27666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27535,
											"end": 27666,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 27535,
											"end": 27666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27527,
											"end": 27666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27527,
											"end": 27666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27254,
											"end": 27673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27254,
											"end": 27673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27254,
											"end": 27673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27254,
											"end": 27673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27828,
											"end": 27832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27866,
											"end": 27868,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 27855,
											"end": 27864,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27851,
											"end": 27869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27843,
											"end": 27869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27843,
											"end": 27869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27879,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 27947,
											"end": 27948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27936,
											"end": 27945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27932,
											"end": 27949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27923,
											"end": 27929,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 27879,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 27879,
											"end": 27950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27879,
											"end": 27950,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 27879,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27960,
											"end": 28032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 28028,
											"end": 28030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28017,
											"end": 28026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28013,
											"end": 28031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28004,
											"end": 28010,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27960,
											"end": 28032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 27960,
											"end": 28032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27960,
											"end": 28032,
											"name": "tag",
											"source": 10,
											"value": "651"
										},
										{
											"begin": 27960,
											"end": 28032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28042,
											"end": 28114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 28110,
											"end": 28112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28099,
											"end": 28108,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28095,
											"end": 28113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28086,
											"end": 28092,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28042,
											"end": 28114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 28042,
											"end": 28114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28042,
											"end": 28114,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 28042,
											"end": 28114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27679,
											"end": 28121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28248,
											"end": 28252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28286,
											"end": 28288,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28275,
											"end": 28284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28271,
											"end": 28289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28263,
											"end": 28289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28263,
											"end": 28289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28299,
											"end": 28370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 28367,
											"end": 28368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28356,
											"end": 28365,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28352,
											"end": 28369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28343,
											"end": 28349,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28299,
											"end": 28370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 28299,
											"end": 28370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28299,
											"end": 28370,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 28299,
											"end": 28370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28380,
											"end": 28452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 28448,
											"end": 28450,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28437,
											"end": 28446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28433,
											"end": 28451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28424,
											"end": 28430,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28380,
											"end": 28452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 28380,
											"end": 28452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28380,
											"end": 28452,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 28380,
											"end": 28452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28127,
											"end": 28459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AUTO_COMPOUND_FEE()": "38bceaac",
							"SECONDS_PER_YEAR()": "e6a69ab8",
							"addRewardPoolFunds(uint256)": "bbd36b61",
							"apyRates(uint256)": "6b494def",
							"calculateReward(address,uint256)": "1852e8d9",
							"claimReward(uint256)": "ae169a50",
							"compoundReward(uint256)": "4060e257",
							"feeReceiver()": "b3f00674",
							"getActiveStakes(address)": "1747e0b0",
							"lockPeriods(uint256)": "4c8f2a78",
							"owner()": "8da5cb5b",
							"pendingRewardWithdrawals(address)": "0630e463",
							"renounceOwnership()": "715018a6",
							"rewardPoolBalance()": "7a5c08ae",
							"rewardToken()": "f7c618c1",
							"setAPY(uint256,uint256)": "5acd2e4c",
							"stake(uint256,uint256,bool)": "561b2463",
							"stakes(address,uint256)": "584b62a1",
							"stakingToken()": "72f702f3",
							"toggleAutoStake(uint256)": "95a29060",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"updateFeeReceiver(address)": "c69bebe4",
							"updateRewardToken(address)": "f8cf31cb",
							"withdrawRewards()": "c7b8981c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"APYUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundedAmount\",\"type\":\"uint256\"}],\"name\":\"AutoCompounded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AutoStakeToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPoolFundsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRewardToken\",\"type\":\"address\"}],\"name\":\"RewardTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnRewards\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUTO_COMPOUND_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewardPoolFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"apyRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"compoundReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getActiveStakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoStaking\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"compoundedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct AutoStaking.StakeInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewardWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"setAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoStaking\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"compoundedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"toggleAutoStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeReceiver\",\"type\":\"address\"}],\"name\":\"updateFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRewardToken\",\"type\":\"address\"}],\"name\":\"updateRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for staking tokens with fixed lock periods and auto-compounding rewards.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addRewardPoolFunds(uint256)\":{\"params\":{\"amount\":\"Amount to add\"}},\"calculateReward(address,uint256)\":{\"params\":{\"account\":\"Address of staker\",\"stakeIndex\":\"Index of stake\"}},\"claimReward(uint256)\":{\"params\":{\"stakeIndex\":\"Index of stake\"}},\"compoundReward(uint256)\":{\"params\":{\"stakeIndex\":\"Index of stake\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAPY(uint256,uint256)\":{\"params\":{\"newAPY\":\"New APY in basis points\",\"periodIndex\":\"Index of period\"}},\"stake(uint256,uint256,bool)\":{\"params\":{\"amount\":\"Amount of tokens to stake\",\"autoStake\":\"Whether to enable auto-staking after unlock\",\"periodIndex\":\"Index of the lock period (0, 1, or 2)\"}},\"toggleAutoStake(uint256)\":{\"params\":{\"stakeIndex\":\"Index of stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFeeReceiver(address)\":{\"params\":{\"newFeeReceiver\":\"New fee receiver address\"}},\"updateRewardToken(address)\":{\"params\":{\"newRewardToken\":\"New reward token address\"}}},\"title\":\"AutoStaking\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addRewardPoolFunds(uint256)\":{\"notice\":\"Add funds to reward pool\"},\"calculateReward(address,uint256)\":{\"notice\":\"Calculate accrued reward for a stake\"},\"claimReward(uint256)\":{\"notice\":\"Claim reward for a specific stake\"},\"compoundReward(uint256)\":{\"notice\":\"Compound reward into new stake\"},\"getActiveStakes(address)\":{\"notice\":\"Get active stakes for an account\"},\"setAPY(uint256,uint256)\":{\"notice\":\"Update APY rate for a period\"},\"stake(uint256,uint256,bool)\":{\"notice\":\"Stake tokens for a fixed period\"},\"toggleAutoStake(uint256)\":{\"notice\":\"Toggle auto-staking for a stake\"},\"updateFeeReceiver(address)\":{\"notice\":\"Update fee receiver address\"},\"updateRewardToken(address)\":{\"notice\":\"Update reward token address\"},\"withdrawRewards()\":{\"notice\":\"Withdraw pending rewards\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking.sol\":\"AutoStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Staking.sol\":{\"keccak256\":\"0x38b6be92032b3b514f3197b7b3bfbe0375e021c1031b2216e27d2f779b9f1409\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9780f4d6feb2471dd4fd88e3ddb0d8e48878e1b8600af8af8222e1dfd3fee458\",\"dweb:/ipfs/QmYtrr7nB7Ac9nDoUZXcVKJLjMcsZJhHqUnHAu7dZhnC3v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Staking.sol:AutoStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "Staking.sol:AutoStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 907,
								"contract": "Staking.sol:AutoStaking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 915,
								"contract": "Staking.sol:AutoStaking",
								"label": "feeReceiver",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 923,
								"contract": "Staking.sol:AutoStaking",
								"label": "lockPeriods",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_uint256)3_storage"
							},
							{
								"astId": 931,
								"contract": "Staking.sol:AutoStaking",
								"label": "apyRates",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)3_storage"
							},
							{
								"astId": 950,
								"contract": "Staking.sol:AutoStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_struct(StakeInfo)944_storage)dyn_storage)"
							},
							{
								"astId": 954,
								"contract": "Staking.sol:AutoStaking",
								"label": "pendingRewardWithdrawals",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 956,
								"contract": "Staking.sol:AutoStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 958,
								"contract": "Staking.sol:AutoStaking",
								"label": "rewardPoolBalance",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakeInfo)944_storage)dyn_storage": {
								"base": "t_struct(StakeInfo)944_storage",
								"encoding": "dynamic_array",
								"label": "struct AutoStaking.StakeInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)3_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[3]",
								"numberOfBytes": "96"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(StakeInfo)944_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct AutoStaking.StakeInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(StakeInfo)944_storage)dyn_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(StakeInfo)944_storage": {
								"encoding": "inplace",
								"label": "struct AutoStaking.StakeInfo",
								"members": [
									{
										"astId": 933,
										"contract": "Staking.sol:AutoStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 935,
										"contract": "Staking.sol:AutoStaking",
										"label": "stakeTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 937,
										"contract": "Staking.sol:AutoStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 939,
										"contract": "Staking.sol:AutoStaking",
										"label": "claimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 941,
										"contract": "Staking.sol:AutoStaking",
										"label": "autoStaking",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 943,
										"contract": "Staking.sol:AutoStaking",
										"label": "compoundedAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addRewardPoolFunds(uint256)": {
								"notice": "Add funds to reward pool"
							},
							"calculateReward(address,uint256)": {
								"notice": "Calculate accrued reward for a stake"
							},
							"claimReward(uint256)": {
								"notice": "Claim reward for a specific stake"
							},
							"compoundReward(uint256)": {
								"notice": "Compound reward into new stake"
							},
							"getActiveStakes(address)": {
								"notice": "Get active stakes for an account"
							},
							"setAPY(uint256,uint256)": {
								"notice": "Update APY rate for a period"
							},
							"stake(uint256,uint256,bool)": {
								"notice": "Stake tokens for a fixed period"
							},
							"toggleAutoStake(uint256)": {
								"notice": "Toggle auto-staking for a stake"
							},
							"updateFeeReceiver(address)": {
								"notice": "Update fee receiver address"
							},
							"updateRewardToken(address)": {
								"notice": "Update reward token address"
							},
							"withdrawRewards()": {
								"notice": "Withdraw pending rewards"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 886,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"Staking.sol": {
				"ast": {
					"absolutePath": "Staking.sol",
					"exportedSymbols": {
						"AutoStaking": [
							1797
						],
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1798,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 381,
							"src": "58:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 845,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 148,
							"src": "181:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1798,
							"sourceUnit": 303,
							"src": "234:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 894,
										"name": "Ownable",
										"nameLocations": [
											"442:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "442:7:9"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "442:7:9"
								},
								{
									"baseName": {
										"id": 896,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"451:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "451:15:9"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "451:15:9"
								}
							],
							"canonicalName": "AutoStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "298:119:9",
								"text": " @title AutoStaking\n @dev Contract for staking tokens with fixed lock periods and auto-compounding rewards."
							},
							"fullyImplemented": true,
							"id": 1797,
							"linearizedBaseContracts": [
								1797,
								302,
								147,
								874
							],
							"name": "AutoStaking",
							"nameLocation": "427:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 898,
										"name": "SafeERC20",
										"nameLocations": [
											"479:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "479:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "473:27:9",
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"493:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "493:6:9"
										},
										"referencedDeclaration": 380,
										"src": "493:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 904,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "530:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "506:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 903,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 902,
											"name": "IERC20",
											"nameLocations": [
												"506:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "506:6:9"
										},
										"referencedDeclaration": 380,
										"src": "506:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 907,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "562:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "548:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IERC20",
											"nameLocations": [
												"548:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "548:6:9"
										},
										"referencedDeclaration": 380,
										"src": "548:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e6a69ab8",
									"id": 910,
									"mutability": "constant",
									"name": "SECONDS_PER_YEAR",
									"nameLocation": "604:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "580:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 909,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "623:8:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "38bceaac",
									"id": 913,
									"mutability": "constant",
									"name": "AUTO_COMPOUND_FEE",
									"nameLocation": "661:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "637:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "637:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 912,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "681:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3f00674",
									"id": 915,
									"mutability": "mutable",
									"name": "feeReceiver",
									"nameLocation": "712:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "697:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 914,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c8f2a78",
									"id": 923,
									"mutability": "mutable",
									"name": "lockPeriods",
									"nameLocation": "748:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "730:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 916,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "730:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 918,
										"length": {
											"hexValue": "33",
											"id": 917,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "738:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "730:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3330",
												"id": 919,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "763:7:9",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2592000_by_1",
													"typeString": "int_const 2592000"
												},
												"value": "30"
											},
											{
												"hexValue": "3630",
												"id": 920,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "772:7:9",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5184000_by_1",
													"typeString": "int_const 5184000"
												},
												"value": "60"
											},
											{
												"hexValue": "3930",
												"id": 921,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "781:7:9",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7776000_by_1",
													"typeString": "int_const 7776000"
												},
												"value": "90"
											}
										],
										"id": 922,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "762:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint24_$3_memory_ptr",
											"typeString": "uint24[3] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b494def",
									"id": 931,
									"mutability": "mutable",
									"name": "apyRates",
									"nameLocation": "813:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "795:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 924,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "795:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 926,
										"length": {
											"hexValue": "33",
											"id": 925,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "803:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "795:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "353030",
												"id": 927,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "825:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_500_by_1",
													"typeString": "int_const 500"
												},
												"value": "500"
											},
											{
												"hexValue": "31303030",
												"id": 928,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "830:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000_by_1",
													"typeString": "int_const 1000"
												},
												"value": "1000"
											},
											{
												"hexValue": "31353030",
												"id": 929,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "836:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1500_by_1",
													"typeString": "int_const 1500"
												},
												"value": "1500"
											}
										],
										"id": 930,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "824:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint16_$3_memory_ptr",
											"typeString": "uint16[3] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AutoStaking.StakeInfo",
									"id": 944,
									"members": [
										{
											"constant": false,
											"id": 933,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "899:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "891:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 932,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "891:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 935,
											"mutability": "mutable",
											"name": "stakeTime",
											"nameLocation": "923:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "915:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 934,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 937,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "950:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "942:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 936,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "942:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 939,
											"mutability": "mutable",
											"name": "claimed",
											"nameLocation": "975:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "970:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 938,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "970:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 941,
											"mutability": "mutable",
											"name": "autoStaking",
											"nameLocation": "997:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "992:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 940,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "992:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "compoundedAmount",
											"nameLocation": "1026:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "1018:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1018:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "871:9:9",
									"nodeType": "StructDefinition",
									"scope": 1797,
									"src": "864:185:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "584b62a1",
									"id": 950,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1094:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "1055:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct AutoStaking.StakeInfo[])"
									},
									"typeName": {
										"id": 949,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 945,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1063:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1055:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct AutoStaking.StakeInfo[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 947,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 946,
													"name": "StakeInfo",
													"nameLocations": [
														"1074:9:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 944,
													"src": "1074:9:9"
												},
												"referencedDeclaration": 944,
												"src": "1074:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
													"typeString": "struct AutoStaking.StakeInfo"
												}
											},
											"id": 948,
											"nodeType": "ArrayTypeName",
											"src": "1074:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_ptr",
												"typeString": "struct AutoStaking.StakeInfo[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0630e463",
									"id": 954,
									"mutability": "mutable",
									"name": "pendingRewardWithdrawals",
									"nameLocation": "1141:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "1106:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 953,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 951,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1114:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1106:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 952,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1125:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 956,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1187:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "1172:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1172:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a5c08ae",
									"id": 958,
									"mutability": "mutable",
									"name": "rewardPoolBalance",
									"nameLocation": "1219:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1797,
									"src": "1204:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 957,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1204:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3df45cb339f96ae4bdb793efcb6e22100dd0dc4fd739a4ee2033fe67ea35af96",
									"id": 968,
									"name": "Staked",
									"nameLocation": "1249:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1272:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1256:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1286:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1278:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "1302:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1294:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoStake",
												"nameLocation": "1320:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1315:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1315:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:75:9"
									},
									"src": "1243:88:9"
								},
								{
									"anonymous": false,
									"eventSelector": "987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a",
									"id": 976,
									"name": "Claimed",
									"nameLocation": "1342:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1366:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1350:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1380:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1372:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1396:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1388:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:58:9"
									},
									"src": "1336:72:9"
								},
								{
									"anonymous": false,
									"eventSelector": "593662cbe53e88df3fef748665b8c3d3142e5d34dc1b24290f7e953537a00183",
									"id": 984,
									"name": "AutoCompounded",
									"nameLocation": "1419:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1450:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1434:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1464:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1456:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "compoundedAmount",
												"nameLocation": "1484:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1476:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:68:9"
									},
									"src": "1413:89:9"
								},
								{
									"anonymous": false,
									"eventSelector": "fa2d7b35e7cc82247c5ae7e8ae2dc078c2b144b76a6b1068887b3c8892c15da5",
									"id": 992,
									"name": "AutoStakeToggled",
									"nameLocation": "1513:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1546:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "1530:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1560:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "1552:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1577:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "1572:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1572:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:55:9"
									},
									"src": "1507:78:9"
								},
								{
									"anonymous": false,
									"eventSelector": "a5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a0",
									"id": 996,
									"name": "RewardTokenUpdated",
									"nameLocation": "1596:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRewardToken",
												"nameLocation": "1631:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1615:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:32:9"
									},
									"src": "1590:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee",
									"id": 1000,
									"name": "FeeReceiverUpdated",
									"nameLocation": "1658:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeReceiver",
												"nameLocation": "1693:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1677:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:32:9"
									},
									"src": "1652:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "787a1fca55641ce34a438271930bbb9401df20db2b4f510d4f252227d85df43d",
									"id": 1006,
									"name": "APYUpdated",
									"nameLocation": "1720:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "1739:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1731:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "1760:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1752:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:37:9"
									},
									"src": "1714:54:9"
								},
								{
									"anonymous": false,
									"eventSelector": "21d99275a51df78f567d33e4b0c6ea547b7675bce0eab2ccca69e131bf047abe",
									"id": 1010,
									"name": "RewardPoolFundsAdded",
									"nameLocation": "1779:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1808:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "1800:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:16:9"
									},
									"src": "1773:43:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e616",
									"id": 1016,
									"name": "WithdrawnRewards",
									"nameLocation": "1827:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1844:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1877:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1869:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:41:9"
									},
									"src": "1821:64:9"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "1996:82:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1020,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "2014:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2017:6:9",
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "2014:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1022,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2027:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2031:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2027:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2014:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206d75737420626520454f41",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2039:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab",
																"typeString": "literal_string \"Caller must be EOA\""
															},
															"value": "Caller must be EOA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cda3bbd9abd372e4ec6ee91b3e5cbde65897a61627fdd430d5c0bc8f8a504ab",
																"typeString": "literal_string \"Caller must be EOA\""
															}
														],
														"id": 1019,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2006:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "2006:54:9"
											},
											{
												"id": 1028,
												"nodeType": "PlaceholderStatement",
												"src": "2070:1:9"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1891:81:9",
										"text": " @notice Restricts function to externally owned accounts (EOAs)"
									},
									"id": 1030,
									"name": "onlyEOA",
									"nameLocation": "1986:7:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:2:9"
									},
									"src": "1977:101:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "2227:371:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1044,
																"name": "_stakingTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "2245:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2277:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2269:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1045,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2269:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2269:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2245:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2281:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															},
															"value": "Invalid staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2237:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "2237:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "_rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2323:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2354:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2346:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1055,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2346:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2346:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2323:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420746f6b656e",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2358:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															},
															"value": "Invalid reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															}
														],
														"id": 1053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2315:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "2315:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "_feeReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "2399:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2423:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2415:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1065,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2415:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2415:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2399:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420666565207265636569766572",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2427:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																"typeString": "literal_string \"Invalid fee receiver\""
															},
															"value": "Invalid fee receiver"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																"typeString": "literal_string \"Invalid fee receiver\""
															}
														],
														"id": 1063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2391:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2391:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "2391:59:9"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2461:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1075,
																"name": "_stakingTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "2483:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1074,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2476:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2476:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2461:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "2461:43:9"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1079,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "2514:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1081,
																"name": "_rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2535:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1080,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2528:27:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2514:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "2514:41:9"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1085,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2565:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1086,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "2579:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2565:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "2565:26:9"
											}
										]
									},
									"id": 1090,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1039,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2215:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2219:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2215:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1041,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1038,
												"name": "Ownable",
												"nameLocations": [
													"2207:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2207:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2207:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_stakingTokenAddress",
												"nameLocation": "2113:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2105:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_rewardTokenAddress",
												"nameLocation": "2151:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2143:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_feeReceiver",
												"nameLocation": "2188:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2180:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:111:9"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2227:0:9"
									},
									"scope": 1797,
									"src": "2084:514:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "2944:631:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1105,
																"name": "periodIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "2962:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1106,
																	"name": "lockPeriods",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "2976:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$3_storage",
																		"typeString": "uint256[3] storage ref"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2988:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2976:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2962:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706572696f6420696e646578",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2996:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															},
															"value": "Invalid period index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															}
														],
														"id": 1104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2954:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "2954:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "3037:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3037:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3049:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3029:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3029:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "3029:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3104:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3108:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3104:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1126,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3124:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutoStaking_$1797",
																		"typeString": "contract AutoStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutoStaking_$1797",
																		"typeString": "contract AutoStaking"
																	}
																],
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3116:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3116:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3116:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3131:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1119,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3074:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3087:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3074:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "3074:64:9"
											},
											{
												"assignments": [
													1132
												],
												"declarations": [
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "3157:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1168,
														"src": "3149:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1131,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3149:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1133,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3170:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3176:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3170:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1135,
															"name": "lockPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "3188:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1137,
														"indexExpression": {
															"id": 1136,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3200:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3188:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3170:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3149:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1146,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "3279:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1147,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3310:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3316:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3310:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1149,
																	"name": "unlockTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "3351:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3384:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"id": 1151,
																	"name": "autoStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "3416:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3457:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1145,
																"name": "StakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3247:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_StakeInfo_$944_storage_ptr_$",
																	"typeString": "type(struct AutoStaking.StakeInfo storage pointer)"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3271:6:9",
																"3299:9:9",
																"3339:10:9",
																"3375:7:9",
																"3403:11:9",
																"3439:16:9"
															],
															"names": [
																"amount",
																"stakeTime",
																"unlockTime",
																"claimed",
																"autoStaking",
																"compoundedAmount"
															],
															"nodeType": "FunctionCall",
															"src": "3247:222:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1140,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "3223:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																}
															},
															"id": 1143,
															"indexExpression": {
																"expression": {
																	"id": 1141,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3230:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3234:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3230:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3223:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
																"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3242:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3223:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_ptr_$_t_struct$_StakeInfo_$944_storage_$returns$__$attached_to$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct AutoStaking.StakeInfo storage ref[] storage pointer,struct AutoStaking.StakeInfo storage ref)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3223:247:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "3223:247:9"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1156,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3481:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1157,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "3496:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3481:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "3481:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1161,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3525:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3529:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3525:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1163,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "3537:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1164,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3545:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1165,
															"name": "autoStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3558:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1160,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "3518:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,uint256,bool)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "EmitStatement",
												"src": "3513:55:9"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "2604:237:9",
										"text": " @notice Stake tokens for a fixed period\n @param amount Amount of tokens to stake\n @param periodIndex Index of the lock period (0, 1, or 2)\n @param autoStake Whether to enable auto-staking after unlock"
									},
									"functionSelector": "561b2463",
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1099,
												"name": "nonReentrant",
												"nameLocations": [
													"2923:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2923:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2923:12:9"
										},
										{
											"id": 1102,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1101,
												"name": "onlyEOA",
												"nameLocations": [
													"2936:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "2936:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2936:7:9"
										}
									],
									"name": "stake",
									"nameLocation": "2855:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2869:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2861:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "2885:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2877:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "autoStake",
												"nameLocation": "2903:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2898:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2898:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2860:53:9"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2944:0:9"
									},
									"scope": 1797,
									"src": "2846:729:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3821:729:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1180,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "3839:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3858:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3850:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1181,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3850:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3850:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3839:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206163636f756e74",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3862:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
																"typeString": "literal_string \"Invalid account\""
															},
															"value": "Invalid account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
																"typeString": "literal_string \"Invalid account\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3831:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3831:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "3831:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1190,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "3898:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1191,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "3911:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1193,
																	"indexExpression": {
																		"id": 1192,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "3918:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3911:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3927:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3911:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3898:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3935:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3890:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "3890:67:9"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "3985:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "3968:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1200,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1199,
																"name": "StakeInfo",
																"nameLocations": [
																	"3968:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 944,
																"src": "3968:9:9"
															},
															"referencedDeclaration": 944,
															"src": "3968:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1202,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "3992:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1204,
														"indexExpression": {
															"id": 1203,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "3999:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3992:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1206,
													"indexExpression": {
														"id": 1205,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "4008:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3992:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$944_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3968:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4037:13:9",
															"subExpression": {
																"expression": {
																	"id": 1209,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "4038:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																		"typeString": "struct AutoStaking.StakeInfo memory"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4043:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "4038:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4052:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4029:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "4029:41:9"
											},
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "endTime",
														"nameLocation": "4089:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4081:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4081:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"expression": {
														"id": 1217,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "4099:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
															"typeString": "struct AutoStaking.StakeInfo memory"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4104:10:9",
													"memberName": "unlockTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 937,
													"src": "4099:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4081:33:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1220,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4128:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4133:11:9",
														"memberName": "autoStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "4128:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1222,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4148:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4154:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4148:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1224,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "4166:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4148:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4128:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1233,
												"nodeType": "IfStatement",
												"src": "4124:101:9",
												"trueBody": {
													"id": 1232,
													"nodeType": "Block",
													"src": "4175:50:9",
													"statements": [
														{
															"expression": {
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1227,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "4189:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1228,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4199:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4205:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4199:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4189:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "4189:25:9"
														}
													]
												}
											},
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "timeHeld",
														"nameLocation": "4243:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4235:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4235:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1240,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "4254:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1237,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4264:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4269:9:9",
														"memberName": "stakeTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 935,
														"src": "4264:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4254:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4235:43:9"
											},
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "periodIndex",
														"nameLocation": "4296:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4288:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4288:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1244,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "4325:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																		"typeString": "struct AutoStaking.StakeInfo memory"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4330:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 937,
																"src": "4325:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 1246,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "4343:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																		"typeString": "struct AutoStaking.StakeInfo memory"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4348:9:9",
																"memberName": "stakeTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 935,
																"src": "4343:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4325:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "getPeriodIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "4310:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4310:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4288:70:9"
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "apy",
														"nameLocation": "4376:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4368:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"baseExpression": {
														"id": 1253,
														"name": "apyRates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "4382:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$3_storage",
															"typeString": "uint256[3] storage ref"
														}
													},
													"id": 1255,
													"indexExpression": {
														"id": 1254,
														"name": "periodIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4391:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4382:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:35:9"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "principal",
														"nameLocation": "4422:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4414:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4414:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1259,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4434:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4439:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "4434:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1261,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4448:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4453:16:9",
														"memberName": "compoundedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "4448:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4434:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4414:55:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1265,
																		"name": "principal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "4487:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1266,
																		"name": "apy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "4499:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4487:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1268,
																	"name": "timeHeld",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "4505:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4487:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1270,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4486:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130303030",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4518:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1272,
																	"name": "SECONDS_PER_YEAR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "4526:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4518:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1274,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4517:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4486:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1276,
												"nodeType": "Return",
												"src": "4479:64:9"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "3581:143:9",
										"text": " @notice Calculate accrued reward for a stake\n @param account Address of staker\n @param stakeIndex Index of stake"
									},
									"functionSelector": "1852e8d9",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3738:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3762:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3754:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3779:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3771:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:37:9"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3812:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:9:9"
									},
									"scope": 1797,
									"src": "3729:821:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "4692:205:9",
										"statements": [
											{
												"body": {
													"id": 1306,
													"nodeType": "Block",
													"src": "4751:97:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1297,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "4769:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1298,
																		"name": "lockPeriods",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "4781:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$3_storage",
																			"typeString": "uint256[3] storage ref"
																		}
																	},
																	"id": 1300,
																	"indexExpression": {
																		"id": 1299,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "4793:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4781:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4769:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1305,
															"nodeType": "IfStatement",
															"src": "4765:73:9",
															"trueBody": {
																"id": 1304,
																"nodeType": "Block",
																"src": "4797:41:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1302,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "4822:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1285,
																		"id": 1303,
																		"nodeType": "Return",
																		"src": "4815:8:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "4722:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1291,
															"name": "lockPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "4726:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4738:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4726:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4722:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"initializationExpression": {
													"assignments": [
														1287
													],
													"declarations": [
														{
															"constant": false,
															"id": 1287,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4715:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1307,
															"src": "4707:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1286,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4707:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1289,
													"initialValue": {
														"hexValue": "30",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4719:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4707:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4746:3:9",
														"subExpression": {
															"id": 1294,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "4746:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1296,
													"nodeType": "ExpressionStatement",
													"src": "4746:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4702:146:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "556e737570706f72746564206c6f636b20706572696f64",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4864:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
																"typeString": "literal_string \"Unsupported lock period\""
															},
															"value": "Unsupported lock period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
																"typeString": "literal_string \"Unsupported lock period\""
															}
														],
														"id": 1308,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "4857:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4857:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "4857:33:9"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "4556:57:9",
										"text": " @notice Get period index from duration"
									},
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPeriodIndex",
									"nameLocation": "4627:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4650:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4642:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4642:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4641:18:9"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "4683:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:9:9"
									},
									"scope": 1797,
									"src": "4618:279:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "5079:1081:9",
										"statements": [
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "5097:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "5089:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1323,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5089:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5107:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5111:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5107:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5089:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1329,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "5135:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1330,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1332,
																	"indexExpression": {
																		"id": 1331,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "5155:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5148:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5164:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5148:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5135:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5172:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5127:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "5127:67:9"
											},
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "5223:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "5205:22:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1339,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1338,
																"name": "StakeInfo",
																"nameLocations": [
																	"5205:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 944,
																"src": "5205:9:9"
															},
															"referencedDeclaration": 944,
															"src": "5205:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1341,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5230:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1343,
														"indexExpression": {
															"id": 1342,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "5237:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5230:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1345,
													"indexExpression": {
														"id": 1344,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "5246:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5230:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$944_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5205:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5275:13:9",
															"subExpression": {
																"expression": {
																	"id": 1348,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "5276:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5281:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "5276:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5267:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5267:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "5267:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1355,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5326:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5332:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5326:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1357,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "5345:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5350:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 937,
																"src": "5345:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5326:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374696c6c206c6f636b6564",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5362:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															},
															"value": "Still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5318:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5318:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "5318:59:9"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5396:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "5388:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"arguments": [
														{
															"id": 1366,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "5421:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1367,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "5430:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1365,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "5405:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "rewardPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "5459:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1372,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "5480:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5459:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5488:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															},
															"value": "Insufficient reward pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5451:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5451:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "5451:64:9"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1377,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "5526:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5531:7:9",
														"memberName": "claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "5526:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5541:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5526:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "5526:19:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1383,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "5560:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5565:11:9",
														"memberName": "autoStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "5560:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1385,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "5580:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5585:16:9",
															"memberName": "compoundedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "5580:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5604:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5580:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5560:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "5993:109:9",
													"statements": [
														{
															"expression": {
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1429,
																		"name": "pendingRewardWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "6007:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1431,
																	"indexExpression": {
																		"id": 1430,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "6032:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6007:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1432,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "6044:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6007:43:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1434,
															"nodeType": "ExpressionStatement",
															"src": "6007:43:9"
														},
														{
															"expression": {
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1435,
																	"name": "rewardPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "6064:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1436,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "6085:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6064:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1438,
															"nodeType": "ExpressionStatement",
															"src": "6064:27:9"
														}
													]
												},
												"id": 1440,
												"nodeType": "IfStatement",
												"src": "5556:546:9",
												"trueBody": {
													"id": 1428,
													"nodeType": "Block",
													"src": "5607:380:9",
													"statements": [
														{
															"assignments": [
																1391
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1391,
																	"mutability": "mutable",
																	"name": "totalToTransfer",
																	"nameLocation": "5629:15:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1428,
																	"src": "5621:23:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1390,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5621:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1396,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1392,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "5647:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																			"typeString": "struct AutoStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5652:16:9",
																	"memberName": "compoundedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 943,
																	"src": "5647:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1394,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "5671:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5647:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5621:56:9"
														},
														{
															"assignments": [
																1398
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1398,
																	"mutability": "mutable",
																	"name": "fee",
																	"nameLocation": "5699:3:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1428,
																	"src": "5691:11:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1397,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5691:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1405,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1399,
																				"name": "totalToTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "5706:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1400,
																				"name": "AUTO_COMPOUND_FEE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "5724:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5706:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1402,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5705:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5745:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "5705:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5691:59:9"
														},
														{
															"assignments": [
																1407
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1407,
																	"mutability": "mutable",
																	"name": "userAmount",
																	"nameLocation": "5772:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1428,
																	"src": "5764:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1406,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5764:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1411,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1408,
																	"name": "totalToTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "5785:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1409,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "5803:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5785:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5764:42:9"
														},
														{
															"expression": {
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1412,
																		"name": "pendingRewardWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "5821:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1414,
																	"indexExpression": {
																		"id": 1413,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1324,
																		"src": "5846:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5821:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1415,
																	"name": "userAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "5858:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1417,
															"nodeType": "ExpressionStatement",
															"src": "5821:47:9"
														},
														{
															"expression": {
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1418,
																		"name": "pendingRewardWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "5882:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1420,
																	"indexExpression": {
																		"id": 1419,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "5907:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5882:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1421,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "5923:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5882:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1423,
															"nodeType": "ExpressionStatement",
															"src": "5882:44:9"
														},
														{
															"expression": {
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1424,
																	"name": "rewardPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "5940:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1425,
																	"name": "totalToTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "5961:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5940:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1427,
															"nodeType": "ExpressionStatement",
															"src": "5940:36:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1442,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "6125:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "6134:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1444,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "6142:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1441,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "6117:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6117:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "EmitStatement",
												"src": "6112:41:9"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "4903:100:9",
										"text": " @notice Claim reward for a specific stake\n @param stakeIndex Index of stake"
									},
									"functionSelector": "ae169a50",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "nonReentrant",
												"nameLocations": [
													"5058:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5058:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5058:12:9"
										},
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "onlyEOA",
												"nameLocations": [
													"5071:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "5071:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5071:7:9"
										}
									],
									"name": "claimReward",
									"nameLocation": "5017:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "5037:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5029:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:20:9"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5079:0:9"
									},
									"scope": 1797,
									"src": "5008:1152:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "6271:281:9",
										"statements": [
											{
												"assignments": [
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6289:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1489,
														"src": "6281:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6281:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"baseExpression": {
														"id": 1456,
														"name": "pendingRewardWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "6298:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1459,
													"indexExpression": {
														"expression": {
															"id": 1457,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6323:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6327:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6323:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6298:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6281:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1462,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "6352:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6361:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6352:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f207769746864726177",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6364:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																"typeString": "literal_string \"No rewards to withdraw\""
															},
															"value": "No rewards to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																"typeString": "literal_string \"No rewards to withdraw\""
															}
														],
														"id": 1461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6344:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "6344:45:9"
											},
											{
												"expression": {
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1468,
															"name": "pendingRewardWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "6400:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1471,
														"indexExpression": {
															"expression": {
																"id": 1469,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6425:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6429:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6425:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6400:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6439:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6400:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "6400:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1478,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6475:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6479:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6475:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "6487:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1475,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "6450:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6462:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "6450:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6450:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "6450:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1484,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6526:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6530:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6526:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "6538:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1483,
														"name": "WithdrawnRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "6509:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6509:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "EmitStatement",
												"src": "6504:41:9"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "6166:51:9",
										"text": " @notice Withdraw pending rewards"
									},
									"functionSelector": "c7b8981c",
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1452,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1451,
												"name": "nonReentrant",
												"nameLocations": [
													"6258:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "6258:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6258:12:9"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6231:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6246:2:9"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6271:0:9"
									},
									"scope": 1797,
									"src": "6222:330:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "6715:353:9",
										"statements": [
											{
												"assignments": [
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "6733:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "6725:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1496,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6725:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1500,
												"initialValue": {
													"expression": {
														"id": 1498,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6743:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6747:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6743:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6725:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1502,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "6771:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1503,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "6784:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1505,
																	"indexExpression": {
																		"id": 1504,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "6791:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6784:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6800:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6784:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6771:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6808:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6763:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6763:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "6763:67:9"
											},
											{
												"assignments": [
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "6859:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "6841:22:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1512,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1511,
																"name": "StakeInfo",
																"nameLocations": [
																	"6841:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 944,
																"src": "6841:9:9"
															},
															"referencedDeclaration": 944,
															"src": "6841:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1519,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1514,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "6866:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1516,
														"indexExpression": {
															"id": 1515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "6873:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6866:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1518,
													"indexExpression": {
														"id": 1517,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1493,
														"src": "6882:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6866:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$944_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6841:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6911:13:9",
															"subExpression": {
																"expression": {
																	"id": 1521,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "6912:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6917:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "6912:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6926:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6903:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6903:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "6903:41:9"
											},
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1527,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "6955:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6960:11:9",
														"memberName": "autoStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "6955:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6974:17:9",
														"subExpression": {
															"expression": {
																"id": 1530,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "6975:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6980:11:9",
															"memberName": "autoStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "6975:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6955:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "6955:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "7023:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "7032:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1538,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "7044:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7049:11:9",
															"memberName": "autoStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "7044:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1535,
														"name": "AutoStakeToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "7006:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7006:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "EmitStatement",
												"src": "7001:60:9"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "6558:98:9",
										"text": " @notice Toggle auto-staking for a stake\n @param stakeIndex Index of stake"
									},
									"functionSelector": "95a29060",
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toggleAutoStake",
									"nameLocation": "6670:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "6694:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "6686:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6685:20:9"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6715:0:9"
									},
									"scope": 1797,
									"src": "6661:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "7250:793:9",
										"statements": [
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "7268:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1651,
														"src": "7260:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7260:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"expression": {
														"id": 1555,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7278:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7282:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7278:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7260:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1559,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "7306:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1560,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "7319:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1562,
																	"indexExpression": {
																		"id": 1561,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "7326:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7319:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7335:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7319:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7306:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7343:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7298:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7298:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "7298:67:9"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "7394:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1651,
														"src": "7376:22:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1569,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1568,
																"name": "StakeInfo",
																"nameLocations": [
																	"7376:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 944,
																"src": "7376:9:9"
															},
															"referencedDeclaration": 944,
															"src": "7376:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1576,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1571,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "7401:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1573,
														"indexExpression": {
															"id": 1572,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "7408:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7401:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1575,
													"indexExpression": {
														"id": 1574,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "7417:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7401:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$944_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7376:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7446:13:9",
															"subExpression": {
																"expression": {
																	"id": 1578,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "7447:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7452:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "7447:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7461:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7438:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7438:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "7438:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1585,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "7497:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7502:11:9",
															"memberName": "autoStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "7497:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4175746f2d7374616b696e672064697361626c6564",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7515:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
																"typeString": "literal_string \"Auto-staking disabled\""
															},
															"value": "Auto-staking disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
																"typeString": "literal_string \"Auto-staking disabled\""
															}
														],
														"id": 1584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7489:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7489:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "7489:50:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1591,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7557:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7563:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7557:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1593,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "7576:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7581:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 937,
																"src": "7576:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7557:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374696c6c206c6f636b6564",
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7593:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															},
															"value": "Still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															}
														],
														"id": 1590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7549:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7549:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "7549:59:9"
											},
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7627:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1651,
														"src": "7619:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7619:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"arguments": [
														{
															"id": 1602,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "7652:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1603,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "7661:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1601,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "7636:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7636:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7619:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1607,
																"name": "rewardPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "7690:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1608,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "7711:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7690:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7719:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															},
															"value": "Insufficient reward pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															}
														],
														"id": 1606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7682:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7682:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "7682:64:9"
											},
											{
												"expression": {
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1613,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7757:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7762:9:9",
														"memberName": "stakeTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 935,
														"src": "7757:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1616,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7774:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7780:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7774:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7757:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "7757:32:9"
											},
											{
												"expression": {
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1620,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7799:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7804:10:9",
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "7799:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1623,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7817:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7823:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7817:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1625,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "7836:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																				"typeString": "struct AutoStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7841:10:9",
																		"memberName": "unlockTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "7836:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1627,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1570,
																			"src": "7854:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																				"typeString": "struct AutoStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7859:9:9",
																		"memberName": "stakeTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 935,
																		"src": "7854:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7836:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1630,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7835:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7817:52:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7799:70:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "7799:70:9"
											},
											{
												"expression": {
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1634,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7894:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7899:16:9",
														"memberName": "compoundedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "7894:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1637,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "7919:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7894:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "7894:31:9"
											},
											{
												"expression": {
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1640,
														"name": "rewardPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "7935:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1641,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "7956:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7935:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "7935:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1645,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "7993:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1646,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "8002:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1647,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "8014:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8019:16:9",
															"memberName": "compoundedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "8014:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1644,
														"name": "AutoCompounded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7978:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "EmitStatement",
												"src": "7973:63:9"
											}
										]
									},
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "7074:97:9",
										"text": " @notice Compound reward into new stake\n @param stakeIndex Index of stake"
									},
									"functionSelector": "4060e257",
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1548,
												"name": "nonReentrant",
												"nameLocations": [
													"7229:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "7229:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7229:12:9"
										},
										{
											"id": 1551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1550,
												"name": "onlyEOA",
												"nameLocations": [
													"7242:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "7242:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7242:7:9"
										}
									],
									"name": "compoundReward",
									"nameLocation": "7185:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "7208:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "7200:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7200:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:20:9"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7250:0:9"
									},
									"scope": 1797,
									"src": "7176:867:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "8203:204:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1661,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "8221:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8230:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8221:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8233:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8213:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8213:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "8213:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1670,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8286:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8290:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8286:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1674,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8306:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutoStaking_$1797",
																		"typeString": "contract AutoStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutoStaking_$1797",
																		"typeString": "contract AutoStaking"
																	}
																],
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8298:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8298:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8298:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "8313:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1667,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8257:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8269:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "8257:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8257:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "8257:63:9"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1679,
														"name": "rewardPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "8330:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1680,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "8351:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8330:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "8330:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1684,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "8393:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1683,
														"name": "RewardPoolFundsAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8372:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8372:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "EmitStatement",
												"src": "8367:33:9"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "8049:86:9",
										"text": " @notice Add funds to reward pool\n @param amount Amount to add"
									},
									"functionSelector": "bbd36b61",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1658,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1657,
												"name": "onlyOwner",
												"nameLocations": [
													"8193:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8193:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8193:9:9"
										}
									],
									"name": "addRewardPoolFunds",
									"nameLocation": "8149:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8176:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "8168:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8168:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8167:16:9"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8203:0:9"
									},
									"scope": 1797,
									"src": "8140:267:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "8632:230:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1699,
																"name": "periodIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "8650:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1700,
																	"name": "lockPeriods",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "8664:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$3_storage",
																		"typeString": "uint256[3] storage ref"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8676:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8664:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8650:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706572696f6420696e646578",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8684:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															},
															"value": "Invalid period index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															}
														],
														"id": 1698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1707,
																"name": "newAPY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "8725:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8735:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "8725:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41505920746f6f2068696768",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8742:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
																"typeString": "literal_string \"APY too high\""
															},
															"value": "APY too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
																"typeString": "literal_string \"APY too high\""
															}
														],
														"id": 1706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8717:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8717:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "8717:40:9"
											},
											{
												"expression": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1713,
															"name": "apyRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "8779:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1715,
														"indexExpression": {
															"id": 1714,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "8788:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8779:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1716,
														"name": "newAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "8803:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8779:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "8779:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1720,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "8835:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1721,
															"name": "newAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "8848:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1719,
														"name": "APYUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "8824:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8824:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "EmitStatement",
												"src": "8819:36:9"
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "8413:142:9",
										"text": " @notice Update APY rate for a period\n @param periodIndex Index of period\n @param newAPY New APY in basis points"
									},
									"functionSelector": "5acd2e4c",
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1695,
												"name": "onlyOwner",
												"nameLocations": [
													"8622:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8622:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8622:9:9"
										}
									],
									"name": "setAPY",
									"nameLocation": "8569:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "8584:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "8576:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8576:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "8605:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "8597:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8597:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8575:37:9"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:9"
									},
									"scope": 1797,
									"src": "8560:302:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "9051:173:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1734,
																"name": "newRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "9069:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9095:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9087:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1735,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9087:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9087:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9069:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420746f6b656e",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9099:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															},
															"value": "Invalid reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															}
														],
														"id": 1733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9061:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9061:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "9061:61:9"
											},
											{
												"expression": {
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1743,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "9132:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1745,
																"name": "newRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "9153:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1744,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "9146:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9146:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "9132:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "9132:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1750,
															"name": "newRewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "9202:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1749,
														"name": "RewardTokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "9183:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9183:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "EmitStatement",
												"src": "9178:39:9"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "8868:108:9",
										"text": " @notice Update reward token address\n @param newRewardToken New reward token address"
									},
									"functionSelector": "f8cf31cb",
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1730,
												"name": "onlyOwner",
												"nameLocations": [
													"9041:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9041:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9041:9:9"
										}
									],
									"name": "updateRewardToken",
									"nameLocation": "8990:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "newRewardToken",
												"nameLocation": "9016:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "9008:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9007:24:9"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9051:0:9"
									},
									"scope": 1797,
									"src": "8981:243:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "9413:165:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1763,
																"name": "newFeeReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "9431:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9457:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9449:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1764,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9449:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9449:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9431:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420666565207265636569766572",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9461:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																"typeString": "literal_string \"Invalid fee receiver\""
															},
															"value": "Invalid fee receiver"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																"typeString": "literal_string \"Invalid fee receiver\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9423:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "9423:61:9"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1772,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "9494:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1773,
														"name": "newFeeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "9508:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9494:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "9494:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1777,
															"name": "newFeeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "9556:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1776,
														"name": "FeeReceiverUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "9537:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9537:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "EmitStatement",
												"src": "9532:39:9"
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "9230:108:9",
										"text": " @notice Update fee receiver address\n @param newFeeReceiver New fee receiver address"
									},
									"functionSelector": "c69bebe4",
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1759,
												"name": "onlyOwner",
												"nameLocations": [
													"9403:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9403:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9403:9:9"
										}
									],
									"name": "updateFeeReceiver",
									"nameLocation": "9352:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "newFeeReceiver",
												"nameLocation": "9378:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "9370:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:24:9"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9413:0:9"
									},
									"scope": 1797,
									"src": "9343:235:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "9730:36:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1791,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "9747:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
														}
													},
													"id": 1793,
													"indexExpression": {
														"id": 1792,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "9754:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9747:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1790,
												"id": 1794,
												"nodeType": "Return",
												"src": "9740:19:9"
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "9584:59:9",
										"text": " @notice Get active stakes for an account"
									},
									"functionSelector": "1747e0b0",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveStakes",
									"nameLocation": "9657:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9681:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "9673:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9673:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9672:14:9"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "9710:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct AutoStaking.StakeInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1787,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1786,
															"name": "StakeInfo",
															"nameLocations": [
																"9710:9:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 944,
															"src": "9710:9:9"
														},
														"referencedDeclaration": 944,
														"src": "9710:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$944_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														}
													},
													"id": 1788,
													"nodeType": "ArrayTypeName",
													"src": "9710:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$944_storage_$dyn_storage_ptr",
														"typeString": "struct AutoStaking.StakeInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9709:20:9"
									},
									"scope": 1797,
									"src": "9648:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1798,
							"src": "418:9350:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								968,
								976,
								984,
								992,
								996,
								1000,
								1006,
								1010,
								1016
							]
						}
					],
					"src": "32:9736:9"
				},
				"id": 9
			}
		}
	}
}