{
	"id": "a7c10d953ba35da2f143f84833792f92",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Cafi_Faucet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title CAFiFaucet\n * @dev Faucet for distributing CAFi tokens with daily limit and anti-bot protection.\n */\ncontract CAFiFaucet is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public cafiToken;\n    uint256 public constant DAILY_LIMIT = 10_000 * 1e18; // 10,000 CAFi tokens\n    uint256 public constant MIN_ETH_BALANCE = 0.001 ether; // Anti-bot measure\n\n    mapping(address => uint256) public lastClaimTime;\n    uint256 public todayTotal;\n    uint256 public lastResetTime;\n\n    /**\n     * @notice Emitted when user claims tokens from the faucet\n     */\n    event TokensClaimed(address indexed recipient, uint256 amount);\n\n    /**\n     * @notice Emitted when owner refills the faucet\n     */\n    event FaucetRefilled(address indexed owner, uint256 amount);\n\n    /**\n     * @notice Emitted when owner withdraws excess tokens\n     */\n    event ExcessWithdrawn(address indexed owner, uint256 amount);\n\n    constructor(address _cafiToken) Ownable(msg.sender) ReentrancyGuard() {\n        require(_cafiToken != address(0), \"Invalid token address\");\n        cafiToken = IERC20(_cafiToken);\n        lastResetTime = block.timestamp;\n    }\n\n    /**\n     * @notice Claim tokens from the faucet (once every 24 hours)\n     */\n    function claimTokens() external nonReentrant {\n        // Reset daily total if 24h passed\n        if (block.timestamp >= lastResetTime + 1 days) {\n            todayTotal = 0;\n            lastResetTime = block.timestamp;\n        }\n\n        // ETH balance check (anti-bot)\n        require(\n            address(msg.sender).balance >= MIN_ETH_BALANCE,\n            \"Minimum 0.001 ETH balance required to claim\"\n        );\n\n        // Time since last claim\n        uint256 userLastClaim = lastClaimTime[msg.sender];\n        require(\n            block.timestamp >= userLastClaim + 1 days,\n            \"You can only claim once every 24 hours\"\n        );\n\n        // Check faucet has enough tokens\n        uint256 currentBalance = cafiToken.balanceOf(address(this));\n        require(\n            todayTotal + DAILY_LIMIT <= currentBalance,\n            \"Faucet is empty for today. Please wait for a refill.\"\n        );\n\n        // Update state before transfer\n        lastClaimTime[msg.sender] = block.timestamp;\n        todayTotal += DAILY_LIMIT;\n\n        // Transfer tokens\n        cafiToken.safeTransfer(msg.sender, DAILY_LIMIT);\n\n        emit TokensClaimed(msg.sender, DAILY_LIMIT);\n    }\n\n    /**\n     * @notice Refill faucet with CAFi tokens (owner only)\n     */\n    function refillFaucet(uint256 amount) external onlyOwner nonReentrant {\n        require(amount > 0, \"Zero amount not allowed\");\n\n        // Transfer tokens into contract\n        cafiToken.safeTransferFrom(msg.sender, address(this), amount);\n\n        emit FaucetRefilled(msg.sender, amount);\n    }\n\n    /**\n     * @notice Withdraw excess tokens (owner only)\n     */\n    function withdrawExcess() external onlyOwner nonReentrant {\n        uint256 currentBalance = cafiToken.balanceOf(address(this));\n        uint256 availableToWithdraw = currentBalance - todayTotal;\n        require(availableToWithdraw > 0, \"No excess tokens to withdraw\");\n\n        cafiToken.safeTransfer(owner(), availableToWithdraw);\n        emit ExcessWithdrawn(owner(), availableToWithdraw);\n    }\n\n    /**\n     * @notice Get remaining daily quota in faucet\n     */\n    function getRemainingDailyQuota() external view returns (uint256) {\n        return cafiToken.balanceOf(address(this)) - todayTotal;\n    }\n\n    /**\n     * @notice Get next claim time for a user\n     */\n    function getNextClaimTime(address user) external view returns (uint256) {\n        return lastClaimTime[user] + 1 days;\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Cafi_Faucet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Cafi_Faucet.sol": {
				"CAFiFaucet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cafiToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ExcessWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FaucetRefilled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DAILY_LIMIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_ETH_BALANCE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cafiToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getNextClaimTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRemainingDailyQuota",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastClaimTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastResetTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "refillFaucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "todayTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawExcess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Faucet for distributing CAFi tokens with daily limit and anti-bot protection.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "CAFiFaucet",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Cafi_Faucet.sol\":413:3980  contract CAFiFaucet is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Cafi_Faucet.sol\":1232:1458  constructor(address _cafiToken) Ownable(msg.sender) ReentrancyGuard() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Cafi_Faucet.sol\":1272:1282  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Cafi_Faucet.sol\":1342:1343  0 */\n  0x00\n    /* \"Cafi_Faucet.sol\":1320:1344  _cafiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Cafi_Faucet.sol\":1320:1330  _cafiToken */\n  dup2\n    /* \"Cafi_Faucet.sol\":1320:1344  _cafiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Cafi_Faucet.sol\":1312:1370  require(_cafiToken != address(0), \"Invalid token address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"Cafi_Faucet.sol\":1399:1409  _cafiToken */\n  dup1\n    /* \"Cafi_Faucet.sol\":1380:1389  cafiToken */\n  0x02\n  0x00\n    /* \"Cafi_Faucet.sol\":1380:1410  cafiToken = IERC20(_cafiToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cafi_Faucet.sol\":1436:1451  block.timestamp */\n  timestamp\n    /* \"Cafi_Faucet.sol\":1420:1433  lastResetTime */\n  0x05\n    /* \"Cafi_Faucet.sol\":1420:1451  lastResetTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Cafi_Faucet.sol\":1232:1458  constructor(address _cafiToken) Ownable(msg.sender) ReentrancyGuard() {... */\n  pop\n    /* \"Cafi_Faucet.sol\":413:3980  contract CAFiFaucet is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":932:1051   */\ntag_44:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_46\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_27:\n    /* \"#utility.yul\":1289:1313   */\n  tag_48\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_10:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_50\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1723   */\ntag_28:\n    /* \"#utility.yul\":1638:1649   */\n  0x00\n    /* \"#utility.yul\":1672:1678   */\n  dup3\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1660:1679   */\n  mstore\n    /* \"#utility.yul\":1712:1716   */\n  0x20\n    /* \"#utility.yul\":1707:1710   */\n  dup3\n    /* \"#utility.yul\":1703:1717   */\n  add\n    /* \"#utility.yul\":1688:1717   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1729:1900   */\ntag_29:\n    /* \"#utility.yul\":1869:1892   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1865:1866   */\n  0x00\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1853:1867   */\n  add\n    /* \"#utility.yul\":1846:1893   */\n  mstore\n    /* \"#utility.yul\":1729:1900   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1906:2272   */\ntag_30:\n    /* \"#utility.yul\":2048:2051   */\n  0x00\n    /* \"#utility.yul\":2069:2136   */\n  tag_54\n    /* \"#utility.yul\":2133:2135   */\n  0x15\n    /* \"#utility.yul\":2128:2131   */\n  dup4\n    /* \"#utility.yul\":2069:2136   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2062:2136   */\n  swap2\n  pop\n    /* \"#utility.yul\":2145:2238   */\n  tag_55\n    /* \"#utility.yul\":2234:2237   */\n  dup3\n    /* \"#utility.yul\":2145:2238   */\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2263:2265   */\n  0x20\n    /* \"#utility.yul\":2258:2261   */\n  dup3\n    /* \"#utility.yul\":2254:2266   */\n  add\n    /* \"#utility.yul\":2247:2266   */\n  swap1\n  pop\n    /* \"#utility.yul\":1906:2272   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2278:2697   */\ntag_17:\n    /* \"#utility.yul\":2444:2448   */\n  0x00\n    /* \"#utility.yul\":2482:2484   */\n  0x20\n    /* \"#utility.yul\":2471:2480   */\n  dup3\n    /* \"#utility.yul\":2467:2485   */\n  add\n    /* \"#utility.yul\":2459:2485   */\n  swap1\n  pop\n    /* \"#utility.yul\":2531:2540   */\n  dup2\n    /* \"#utility.yul\":2525:2529   */\n  dup2\n    /* \"#utility.yul\":2521:2541   */\n  sub\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2506:2515   */\n  dup4\n    /* \"#utility.yul\":2502:2519   */\n  add\n    /* \"#utility.yul\":2495:2542   */\n  mstore\n    /* \"#utility.yul\":2559:2690   */\n  tag_57\n    /* \"#utility.yul\":2685:2689   */\n  dup2\n    /* \"#utility.yul\":2559:2690   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2551:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2278:2697   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Cafi_Faucet.sol\":413:3980  contract CAFiFaucet is Ownable, ReentrancyGuard {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Cafi_Faucet.sol\":413:3980  contract CAFiFaucet is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa6e340c6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa6e340c6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb77cf9c6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc264a063\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x93c30c0f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa2177124\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3a20c2f0\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x3a20c2f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x58a0bde3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x248ec326\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26b71163\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2895f1c1\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Cafi_Faucet.sol\":529:580  uint256 public constant DAILY_LIMIT = 10_000 * 1e18 */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":3649:3786  function getRemainingDailyQuota() external view returns (uint256) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":608:661  uint256 public constant MIN_ETH_BALANCE = 0.001 ether */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":742:767  uint256 public todayTotal */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":1546:2728  function claimTokens() external nonReentrant {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Cafi_Faucet.sol\":500:523  IERC20 public cafiToken */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":3854:3978  function getNextClaimTime(address user) external view returns (uint256) {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":773:801  uint256 public lastResetTime */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":2809:3105  function refillFaucet(uint256 amount) external onlyOwner nonReentrant {... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"Cafi_Faucet.sol\":688:736  mapping(address => uint256) public lastClaimTime */\n    tag_14:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Cafi_Faucet.sol\":3178:3576  function withdrawExcess() external onlyOwner nonReentrant {... */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"Cafi_Faucet.sol\":529:580  uint256 public constant DAILY_LIMIT = 10_000 * 1e18 */\n    tag_21:\n        /* \"Cafi_Faucet.sol\":567:580  10_000 * 1e18 */\n      0x021e19e0c9bab2400000\n        /* \"Cafi_Faucet.sol\":529:580  uint256 public constant DAILY_LIMIT = 10_000 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":3649:3786  function getRemainingDailyQuota() external view returns (uint256) {... */\n    tag_25:\n        /* \"Cafi_Faucet.sol\":3706:3713  uint256 */\n      0x00\n        /* \"Cafi_Faucet.sol\":3769:3779  todayTotal */\n      sload(0x04)\n        /* \"Cafi_Faucet.sol\":3732:3741  cafiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Cafi_Faucet.sol\":3732:3751  cafiToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Cafi_Faucet.sol\":3760:3764  this */\n      address\n        /* \"Cafi_Faucet.sol\":3732:3766  cafiToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"Cafi_Faucet.sol\":3732:3779  cafiToken.balanceOf(address(this)) - todayTotal */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"Cafi_Faucet.sol\":3725:3779  return cafiToken.balanceOf(address(this)) - todayTotal */\n      swap1\n      pop\n        /* \"Cafi_Faucet.sol\":3649:3786  function getRemainingDailyQuota() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":608:661  uint256 public constant MIN_ETH_BALANCE = 0.001 ether */\n    tag_28:\n        /* \"Cafi_Faucet.sol\":650:661  0.001 ether */\n      0x038d7ea4c68000\n        /* \"Cafi_Faucet.sol\":608:661  uint256 public constant MIN_ETH_BALANCE = 0.001 ether */\n      dup2\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":742:767  uint256 public todayTotal */\n    tag_31:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":1546:2728  function claimTokens() external nonReentrant {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_75:\n        /* \"Cafi_Faucet.sol\":1683:1689  1 days */\n      0x015180\n        /* \"Cafi_Faucet.sol\":1667:1680  lastResetTime */\n      sload(0x05)\n        /* \"Cafi_Faucet.sol\":1667:1689  lastResetTime + 1 days */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"Cafi_Faucet.sol\":1648:1663  block.timestamp */\n      timestamp\n        /* \"Cafi_Faucet.sol\":1648:1689  block.timestamp >= lastResetTime + 1 days */\n      lt\n        /* \"Cafi_Faucet.sol\":1644:1775  if (block.timestamp >= lastResetTime + 1 days) {... */\n      tag_80\n      jumpi\n        /* \"Cafi_Faucet.sol\":1718:1719  0 */\n      0x00\n        /* \"Cafi_Faucet.sol\":1705:1715  todayTotal */\n      0x04\n        /* \"Cafi_Faucet.sol\":1705:1719  todayTotal = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Cafi_Faucet.sol\":1749:1764  block.timestamp */\n      timestamp\n        /* \"Cafi_Faucet.sol\":1733:1746  lastResetTime */\n      0x05\n        /* \"Cafi_Faucet.sol\":1733:1764  lastResetTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Cafi_Faucet.sol\":1644:1775  if (block.timestamp >= lastResetTime + 1 days) {... */\n    tag_80:\n        /* \"Cafi_Faucet.sol\":650:661  0.001 ether */\n      0x038d7ea4c68000\n        /* \"Cafi_Faucet.sol\":1854:1864  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":1846:1873  address(msg.sender).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Cafi_Faucet.sol\":1846:1892  address(msg.sender).balance >= MIN_ETH_BALANCE */\n      lt\n      iszero\n        /* \"Cafi_Faucet.sol\":1825:1961  require(... */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"Cafi_Faucet.sol\":2005:2026  uint256 userLastClaim */\n      0x00\n        /* \"Cafi_Faucet.sol\":2029:2042  lastClaimTime */\n      0x03\n        /* \"Cafi_Faucet.sol\":2029:2054  lastClaimTime[msg.sender] */\n      0x00\n        /* \"Cafi_Faucet.sol\":2043:2053  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":2029:2054  lastClaimTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Cafi_Faucet.sol\":2005:2054  uint256 userLastClaim = lastClaimTime[msg.sender] */\n      swap1\n      pop\n        /* \"Cafi_Faucet.sol\":2120:2126  1 days */\n      0x015180\n        /* \"Cafi_Faucet.sol\":2104:2117  userLastClaim */\n      dup2\n        /* \"Cafi_Faucet.sol\":2104:2126  userLastClaim + 1 days */\n      tag_84\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_84:\n        /* \"Cafi_Faucet.sol\":2085:2100  block.timestamp */\n      timestamp\n        /* \"Cafi_Faucet.sol\":2085:2126  block.timestamp >= userLastClaim + 1 days */\n      lt\n      iszero\n        /* \"Cafi_Faucet.sol\":2064:2190  require(... */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"Cafi_Faucet.sol\":2243:2265  uint256 currentBalance */\n      0x00\n        /* \"Cafi_Faucet.sol\":2268:2277  cafiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Cafi_Faucet.sol\":2268:2287  cafiToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Cafi_Faucet.sol\":2296:2300  this */\n      address\n        /* \"Cafi_Faucet.sol\":2268:2302  cafiToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_91:\n        /* \"Cafi_Faucet.sol\":2243:2302  uint256 currentBalance = cafiToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Cafi_Faucet.sol\":2361:2375  currentBalance */\n      dup1\n        /* \"Cafi_Faucet.sol\":567:580  10_000 * 1e18 */\n      0x021e19e0c9bab2400000\n        /* \"Cafi_Faucet.sol\":2333:2343  todayTotal */\n      sload(0x04)\n        /* \"Cafi_Faucet.sol\":2333:2357  todayTotal + DAILY_LIMIT */\n      tag_92\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_92:\n        /* \"Cafi_Faucet.sol\":2333:2375  todayTotal + DAILY_LIMIT <= currentBalance */\n      gt\n      iszero\n        /* \"Cafi_Faucet.sol\":2312:2453  require(... */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Cafi_Faucet.sol\":2532:2547  block.timestamp */\n      timestamp\n        /* \"Cafi_Faucet.sol\":2504:2517  lastClaimTime */\n      0x03\n        /* \"Cafi_Faucet.sol\":2504:2529  lastClaimTime[msg.sender] */\n      0x00\n        /* \"Cafi_Faucet.sol\":2518:2528  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":2504:2529  lastClaimTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Cafi_Faucet.sol\":2504:2547  lastClaimTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Cafi_Faucet.sol\":567:580  10_000 * 1e18 */\n      0x021e19e0c9bab2400000\n        /* \"Cafi_Faucet.sol\":2557:2567  todayTotal */\n      0x04\n      0x00\n        /* \"Cafi_Faucet.sol\":2557:2582  todayTotal += DAILY_LIMIT */\n      dup3\n      dup3\n      sload\n      tag_96\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Cafi_Faucet.sol\":2620:2667  cafiToken.safeTransfer(msg.sender, DAILY_LIMIT) */\n      tag_97\n        /* \"Cafi_Faucet.sol\":2643:2653  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":567:580  10_000 * 1e18 */\n      0x021e19e0c9bab2400000\n        /* \"Cafi_Faucet.sol\":2620:2629  cafiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Cafi_Faucet.sol\":2620:2642  cafiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_98\n      swap1\n        /* \"Cafi_Faucet.sol\":2620:2667  cafiToken.safeTransfer(msg.sender, DAILY_LIMIT) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"Cafi_Faucet.sol\":2697:2707  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":2683:2721  TokensClaimed(msg.sender, DAILY_LIMIT) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430\n        /* \"Cafi_Faucet.sol\":567:580  10_000 * 1e18 */\n      0x021e19e0c9bab2400000\n        /* \"Cafi_Faucet.sol\":2683:2721  TokensClaimed(msg.sender, DAILY_LIMIT) */\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Cafi_Faucet.sol\":1591:2728  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_100\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_100:\n        /* \"Cafi_Faucet.sol\":1546:2728  function claimTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":500:523  IERC20 public cafiToken */\n    tag_36:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":3854:3978  function getNextClaimTime(address user) external view returns (uint256) {... */\n    tag_48:\n        /* \"Cafi_Faucet.sol\":3917:3924  uint256 */\n      0x00\n        /* \"Cafi_Faucet.sol\":3965:3971  1 days */\n      0x015180\n        /* \"Cafi_Faucet.sol\":3943:3956  lastClaimTime */\n      0x03\n        /* \"Cafi_Faucet.sol\":3943:3962  lastClaimTime[user] */\n      0x00\n        /* \"Cafi_Faucet.sol\":3957:3961  user */\n      dup5\n        /* \"Cafi_Faucet.sol\":3943:3962  lastClaimTime[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Cafi_Faucet.sol\":3943:3971  lastClaimTime[user] + 1 days */\n      tag_110\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_110:\n        /* \"Cafi_Faucet.sol\":3936:3971  return lastClaimTime[user] + 1 days */\n      swap1\n      pop\n        /* \"Cafi_Faucet.sol\":3854:3978  function getNextClaimTime(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":773:801  uint256 public lastResetTime */\n    tag_51:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":2809:3105  function refillFaucet(uint256 amount) external onlyOwner nonReentrant {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_114:\n        /* \"Cafi_Faucet.sol\":2906:2907  0 */\n      0x00\n        /* \"Cafi_Faucet.sol\":2897:2903  amount */\n      dup2\n        /* \"Cafi_Faucet.sol\":2897:2907  amount > 0 */\n      gt\n        /* \"Cafi_Faucet.sol\":2889:2935  require(amount > 0, \"Zero amount not allowed\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"Cafi_Faucet.sol\":2987:3048  cafiToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_119\n        /* \"Cafi_Faucet.sol\":3014:3024  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":3034:3038  this */\n      address\n        /* \"Cafi_Faucet.sol\":3041:3047  amount */\n      dup4\n        /* \"Cafi_Faucet.sol\":2987:2996  cafiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Cafi_Faucet.sol\":2987:3013  cafiToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_120\n      swap1\n        /* \"Cafi_Faucet.sol\":2987:3048  cafiToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"Cafi_Faucet.sol\":3079:3089  msg.sender */\n      caller\n        /* \"Cafi_Faucet.sol\":3064:3098  FaucetRefilled(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8a609374befb6b58cb150d9bd9aafa56b72315f38a284e3c21c69827fe7102b9\n        /* \"Cafi_Faucet.sol\":3091:3097  amount */\n      dup3\n        /* \"Cafi_Faucet.sol\":3064:3098  FaucetRefilled(msg.sender, amount) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_122:\n        /* \"Cafi_Faucet.sol\":2809:3105  function refillFaucet(uint256 amount) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":688:736  mapping(address => uint256) public lastClaimTime */\n    tag_59:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Cafi_Faucet.sol\":3178:3576  function withdrawExcess() external onlyOwner nonReentrant {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_126:\n        /* \"Cafi_Faucet.sol\":3246:3268  uint256 currentBalance */\n      0x00\n        /* \"Cafi_Faucet.sol\":3271:3280  cafiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Cafi_Faucet.sol\":3271:3290  cafiToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Cafi_Faucet.sol\":3299:3303  this */\n      address\n        /* \"Cafi_Faucet.sol\":3271:3305  cafiToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_131:\n        /* \"Cafi_Faucet.sol\":3246:3305  uint256 currentBalance = cafiToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Cafi_Faucet.sol\":3315:3342  uint256 availableToWithdraw */\n      0x00\n        /* \"Cafi_Faucet.sol\":3362:3372  todayTotal */\n      sload(0x04)\n        /* \"Cafi_Faucet.sol\":3345:3359  currentBalance */\n      dup3\n        /* \"Cafi_Faucet.sol\":3345:3372  currentBalance - todayTotal */\n      tag_132\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_132:\n        /* \"Cafi_Faucet.sol\":3315:3372  uint256 availableToWithdraw = currentBalance - todayTotal */\n      swap1\n      pop\n        /* \"Cafi_Faucet.sol\":3412:3413  0 */\n      0x00\n        /* \"Cafi_Faucet.sol\":3390:3409  availableToWithdraw */\n      dup2\n        /* \"Cafi_Faucet.sol\":3390:3413  availableToWithdraw > 0 */\n      gt\n        /* \"Cafi_Faucet.sol\":3382:3446  require(availableToWithdraw > 0, \"No excess tokens to withdraw\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"Cafi_Faucet.sol\":3457:3509  cafiToken.safeTransfer(owner(), availableToWithdraw) */\n      tag_136\n        /* \"Cafi_Faucet.sol\":3480:3487  owner() */\n      tag_137\n        /* \"Cafi_Faucet.sol\":3480:3485  owner */\n      tag_42\n        /* \"Cafi_Faucet.sol\":3480:3487  owner() */\n      jump\t// in\n    tag_137:\n        /* \"Cafi_Faucet.sol\":3489:3508  availableToWithdraw */\n      dup3\n        /* \"Cafi_Faucet.sol\":3457:3466  cafiToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Cafi_Faucet.sol\":3457:3479  cafiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_98\n      swap1\n        /* \"Cafi_Faucet.sol\":3457:3509  cafiToken.safeTransfer(owner(), availableToWithdraw) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"Cafi_Faucet.sol\":3540:3547  owner() */\n      tag_138\n        /* \"Cafi_Faucet.sol\":3540:3545  owner */\n      tag_42\n        /* \"Cafi_Faucet.sol\":3540:3547  owner() */\n      jump\t// in\n    tag_138:\n        /* \"Cafi_Faucet.sol\":3524:3569  ExcessWithdrawn(owner(), availableToWithdraw) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9bdedcc968f2c0682145c20289dfbb3081a39684571116ab45eabfef512e9473\n        /* \"Cafi_Faucet.sol\":3549:3568  availableToWithdraw */\n      dup3\n        /* \"Cafi_Faucet.sol\":3524:3569  ExcessWithdrawn(owner(), availableToWithdraw) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Cafi_Faucet.sol\":3236:3576  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_140:\n        /* \"Cafi_Faucet.sol\":3178:3576  function withdrawExcess() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_172)\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_176:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_177:\n        /* \"#utility.yul\":177:201   */\n      tag_211\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_176\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_23:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_213\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_177\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_178:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_179:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_180:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_217\n        /* \"#utility.yul\":741:775   */\n      tag_218\n        /* \"#utility.yul\":750:774   */\n      tag_219\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_178\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":741:775   */\n      tag_179\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":723:776   */\n      tag_178\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_181:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_221\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_180\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1060   */\n    tag_182:\n        /* \"#utility.yul\":984:993   */\n      0x00\n        /* \"#utility.yul\":1017:1054   */\n      tag_223\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1017:1054   */\n      tag_181\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1004:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1225   */\n    tag_183:\n        /* \"#utility.yul\":1167:1218   */\n      tag_225\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1167:1218   */\n      tag_182\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1162:1165   */\n      dup3\n        /* \"#utility.yul\":1155:1219   */\n      mstore\n        /* \"#utility.yul\":1066:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1481   */\n    tag_38:\n        /* \"#utility.yul\":1338:1342   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1365:1374   */\n      dup3\n        /* \"#utility.yul\":1361:1379   */\n      add\n        /* \"#utility.yul\":1353:1379   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1474   */\n      tag_227\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1389:1474   */\n      tag_183\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1231:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1583   */\n    tag_184:\n        /* \"#utility.yul\":1524:1531   */\n      0x00\n        /* \"#utility.yul\":1553:1577   */\n      tag_229\n        /* \"#utility.yul\":1571:1576   */\n      dup3\n        /* \"#utility.yul\":1553:1577   */\n      tag_178\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1542:1577   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1589:1707   */\n    tag_185:\n        /* \"#utility.yul\":1676:1700   */\n      tag_231\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1676:1700   */\n      tag_184\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1671:1674   */\n      dup3\n        /* \"#utility.yul\":1664:1701   */\n      mstore\n        /* \"#utility.yul\":1589:1707   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1713:1935   */\n    tag_44:\n        /* \"#utility.yul\":1806:1810   */\n      0x00\n        /* \"#utility.yul\":1844:1846   */\n      0x20\n        /* \"#utility.yul\":1833:1842   */\n      dup3\n        /* \"#utility.yul\":1829:1847   */\n      add\n        /* \"#utility.yul\":1821:1847   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1928   */\n      tag_233\n        /* \"#utility.yul\":1925:1926   */\n      0x00\n        /* \"#utility.yul\":1914:1923   */\n      dup4\n        /* \"#utility.yul\":1910:1927   */\n      add\n        /* \"#utility.yul\":1901:1907   */\n      dup5\n        /* \"#utility.yul\":1857:1928   */\n      tag_185\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1713:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2022:2139   */\n    tag_187:\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2128:2129   */\n      0x00\n        /* \"#utility.yul\":2121:2133   */\n      revert\n        /* \"#utility.yul\":2268:2390   */\n    tag_189:\n        /* \"#utility.yul\":2341:2365   */\n      tag_238\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_184\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      0x00\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_239:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_190:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_241\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_189\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2870   */\n    tag_47:\n        /* \"#utility.yul\":2600:2606   */\n      0x00\n        /* \"#utility.yul\":2649:2651   */\n      0x20\n        /* \"#utility.yul\":2637:2646   */\n      dup3\n        /* \"#utility.yul\":2628:2635   */\n      dup5\n        /* \"#utility.yul\":2624:2647   */\n      sub\n        /* \"#utility.yul\":2620:2652   */\n      slt\n        /* \"#utility.yul\":2617:2736   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2655:2734   */\n      tag_244\n      tag_187\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2617:2736   */\n    tag_243:\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2800:2853   */\n      tag_245\n        /* \"#utility.yul\":2845:2852   */\n      dup5\n        /* \"#utility.yul\":2836:2842   */\n      dup3\n        /* \"#utility.yul\":2825:2834   */\n      dup6\n        /* \"#utility.yul\":2821:2843   */\n      add\n        /* \"#utility.yul\":2800:2853   */\n      tag_190\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2790:2853   */\n      swap2\n      pop\n        /* \"#utility.yul\":2746:2863   */\n      pop\n        /* \"#utility.yul\":2541:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2998   */\n    tag_191:\n        /* \"#utility.yul\":2949:2973   */\n      tag_247\n        /* \"#utility.yul\":2967:2972   */\n      dup2\n        /* \"#utility.yul\":2949:2973   */\n      tag_176\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2942:2947   */\n      dup2\n        /* \"#utility.yul\":2939:2974   */\n      eq\n        /* \"#utility.yul\":2929:2992   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2985:2986   */\n      0x00\n        /* \"#utility.yul\":2978:2990   */\n      revert\n        /* \"#utility.yul\":2929:2992   */\n    tag_248:\n        /* \"#utility.yul\":2876:2998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3143   */\n    tag_192:\n        /* \"#utility.yul\":3050:3055   */\n      0x00\n        /* \"#utility.yul\":3088:3094   */\n      dup2\n        /* \"#utility.yul\":3075:3095   */\n      calldataload\n        /* \"#utility.yul\":3066:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3104:3137   */\n      tag_250\n        /* \"#utility.yul\":3131:3136   */\n      dup2\n        /* \"#utility.yul\":3104:3137   */\n      tag_191\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3004:3143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3478   */\n    tag_55:\n        /* \"#utility.yul\":3208:3214   */\n      0x00\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"#utility.yul\":3245:3254   */\n      dup3\n        /* \"#utility.yul\":3236:3243   */\n      dup5\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3344   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3263:3342   */\n      tag_253\n      tag_187\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3225:3344   */\n    tag_252:\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3408:3461   */\n      tag_254\n        /* \"#utility.yul\":3453:3460   */\n      dup5\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup6\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3408:3461   */\n      tag_192\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3398:3461   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3471   */\n      pop\n        /* \"#utility.yul\":3149:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3627   */\n    tag_193:\n        /* \"#utility.yul\":3541:3546   */\n      0x00\n        /* \"#utility.yul\":3572:3578   */\n      dup2\n        /* \"#utility.yul\":3566:3579   */\n      mload\n        /* \"#utility.yul\":3557:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3621   */\n      tag_256\n        /* \"#utility.yul\":3615:3620   */\n      dup2\n        /* \"#utility.yul\":3588:3621   */\n      tag_191\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3484:3627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3633:3984   */\n    tag_71:\n        /* \"#utility.yul\":3703:3709   */\n      0x00\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3740:3749   */\n      dup3\n        /* \"#utility.yul\":3731:3738   */\n      dup5\n        /* \"#utility.yul\":3727:3750   */\n      sub\n        /* \"#utility.yul\":3723:3755   */\n      slt\n        /* \"#utility.yul\":3720:3839   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3758:3837   */\n      tag_259\n      tag_187\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3720:3839   */\n    tag_258:\n        /* \"#utility.yul\":3878:3879   */\n      0x00\n        /* \"#utility.yul\":3903:3967   */\n      tag_260\n        /* \"#utility.yul\":3959:3966   */\n      dup5\n        /* \"#utility.yul\":3950:3956   */\n      dup3\n        /* \"#utility.yul\":3939:3948   */\n      dup6\n        /* \"#utility.yul\":3935:3957   */\n      add\n        /* \"#utility.yul\":3903:3967   */\n      tag_193\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3893:3967   */\n      swap2\n      pop\n        /* \"#utility.yul\":3849:3977   */\n      pop\n        /* \"#utility.yul\":3633:3984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3990:4170   */\n    tag_194:\n        /* \"#utility.yul\":4038:4115   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4035:4036   */\n      0x00\n        /* \"#utility.yul\":4028:4116   */\n      mstore\n        /* \"#utility.yul\":4135:4139   */\n      0x11\n        /* \"#utility.yul\":4132:4133   */\n      0x04\n        /* \"#utility.yul\":4125:4140   */\n      mstore\n        /* \"#utility.yul\":4159:4163   */\n      0x24\n        /* \"#utility.yul\":4156:4157   */\n      0x00\n        /* \"#utility.yul\":4149:4164   */\n      revert\n        /* \"#utility.yul\":4176:4370   */\n    tag_73:\n        /* \"#utility.yul\":4216:4220   */\n      0x00\n        /* \"#utility.yul\":4236:4256   */\n      tag_263\n        /* \"#utility.yul\":4254:4255   */\n      dup3\n        /* \"#utility.yul\":4236:4256   */\n      tag_176\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4231:4256   */\n      swap2\n      pop\n        /* \"#utility.yul\":4270:4290   */\n      tag_264\n        /* \"#utility.yul\":4288:4289   */\n      dup4\n        /* \"#utility.yul\":4270:4290   */\n      tag_176\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4265:4290   */\n      swap3\n      pop\n        /* \"#utility.yul\":4314:4315   */\n      dup3\n        /* \"#utility.yul\":4311:4312   */\n      dup3\n        /* \"#utility.yul\":4307:4316   */\n      sub\n        /* \"#utility.yul\":4299:4316   */\n      swap1\n      pop\n        /* \"#utility.yul\":4338:4339   */\n      dup2\n        /* \"#utility.yul\":4332:4336   */\n      dup2\n        /* \"#utility.yul\":4329:4340   */\n      gt\n        /* \"#utility.yul\":4326:4363   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4343:4361   */\n      tag_266\n      tag_194\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4326:4363   */\n    tag_265:\n        /* \"#utility.yul\":4176:4370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4376:4567   */\n    tag_79:\n        /* \"#utility.yul\":4416:4419   */\n      0x00\n        /* \"#utility.yul\":4435:4455   */\n      tag_268\n        /* \"#utility.yul\":4453:4454   */\n      dup3\n        /* \"#utility.yul\":4435:4455   */\n      tag_176\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4430:4455   */\n      swap2\n      pop\n        /* \"#utility.yul\":4469:4489   */\n      tag_269\n        /* \"#utility.yul\":4487:4488   */\n      dup4\n        /* \"#utility.yul\":4469:4489   */\n      tag_176\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4464:4489   */\n      swap3\n      pop\n        /* \"#utility.yul\":4512:4513   */\n      dup3\n        /* \"#utility.yul\":4509:4510   */\n      dup3\n        /* \"#utility.yul\":4505:4514   */\n      add\n        /* \"#utility.yul\":4498:4514   */\n      swap1\n      pop\n        /* \"#utility.yul\":4533:4536   */\n      dup1\n        /* \"#utility.yul\":4530:4531   */\n      dup3\n        /* \"#utility.yul\":4527:4537   */\n      gt\n        /* \"#utility.yul\":4524:4560   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4540:4558   */\n      tag_271\n      tag_194\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4524:4560   */\n    tag_270:\n        /* \"#utility.yul\":4376:4567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4573:4742   */\n    tag_195:\n        /* \"#utility.yul\":4657:4668   */\n      0x00\n        /* \"#utility.yul\":4691:4697   */\n      dup3\n        /* \"#utility.yul\":4686:4689   */\n      dup3\n        /* \"#utility.yul\":4679:4698   */\n      mstore\n        /* \"#utility.yul\":4731:4735   */\n      0x20\n        /* \"#utility.yul\":4726:4729   */\n      dup3\n        /* \"#utility.yul\":4722:4736   */\n      add\n        /* \"#utility.yul\":4707:4736   */\n      swap1\n      pop\n        /* \"#utility.yul\":4573:4742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4748:4978   */\n    tag_196:\n        /* \"#utility.yul\":4888:4922   */\n      0x4d696e696d756d20302e303031204554482062616c616e636520726571756972\n        /* \"#utility.yul\":4884:4885   */\n      0x00\n        /* \"#utility.yul\":4876:4882   */\n      dup3\n        /* \"#utility.yul\":4872:4886   */\n      add\n        /* \"#utility.yul\":4865:4923   */\n      mstore\n        /* \"#utility.yul\":4957:4970   */\n      0x656420746f20636c61696d000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4952:4954   */\n      0x20\n        /* \"#utility.yul\":4944:4950   */\n      dup3\n        /* \"#utility.yul\":4940:4955   */\n      add\n        /* \"#utility.yul\":4933:4971   */\n      mstore\n        /* \"#utility.yul\":4748:4978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4984:5350   */\n    tag_197:\n        /* \"#utility.yul\":5126:5129   */\n      0x00\n        /* \"#utility.yul\":5147:5214   */\n      tag_275\n        /* \"#utility.yul\":5211:5213   */\n      0x2b\n        /* \"#utility.yul\":5206:5209   */\n      dup4\n        /* \"#utility.yul\":5147:5214   */\n      tag_195\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5140:5214   */\n      swap2\n      pop\n        /* \"#utility.yul\":5223:5316   */\n      tag_276\n        /* \"#utility.yul\":5312:5315   */\n      dup3\n        /* \"#utility.yul\":5223:5316   */\n      tag_196\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5341:5343   */\n      0x40\n        /* \"#utility.yul\":5336:5339   */\n      dup3\n        /* \"#utility.yul\":5332:5344   */\n      add\n        /* \"#utility.yul\":5325:5344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4984:5350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5356:5775   */\n    tag_83:\n        /* \"#utility.yul\":5522:5526   */\n      0x00\n        /* \"#utility.yul\":5560:5562   */\n      0x20\n        /* \"#utility.yul\":5549:5558   */\n      dup3\n        /* \"#utility.yul\":5545:5563   */\n      add\n        /* \"#utility.yul\":5537:5563   */\n      swap1\n      pop\n        /* \"#utility.yul\":5609:5618   */\n      dup2\n        /* \"#utility.yul\":5603:5607   */\n      dup2\n        /* \"#utility.yul\":5599:5619   */\n      sub\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5584:5593   */\n      dup4\n        /* \"#utility.yul\":5580:5597   */\n      add\n        /* \"#utility.yul\":5573:5620   */\n      mstore\n        /* \"#utility.yul\":5637:5768   */\n      tag_278\n        /* \"#utility.yul\":5763:5767   */\n      dup2\n        /* \"#utility.yul\":5637:5768   */\n      tag_197\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5629:5768   */\n      swap1\n      pop\n        /* \"#utility.yul\":5356:5775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5781:6006   */\n    tag_198:\n        /* \"#utility.yul\":5921:5955   */\n      0x596f752063616e206f6e6c7920636c61696d206f6e6365206576657279203234\n        /* \"#utility.yul\":5917:5918   */\n      0x00\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5905:5919   */\n      add\n        /* \"#utility.yul\":5898:5956   */\n      mstore\n        /* \"#utility.yul\":5990:5998   */\n      0x20686f7572730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5985:5987   */\n      0x20\n        /* \"#utility.yul\":5977:5983   */\n      dup3\n        /* \"#utility.yul\":5973:5988   */\n      add\n        /* \"#utility.yul\":5966:5999   */\n      mstore\n        /* \"#utility.yul\":5781:6006   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6012:6378   */\n    tag_199:\n        /* \"#utility.yul\":6154:6157   */\n      0x00\n        /* \"#utility.yul\":6175:6242   */\n      tag_281\n        /* \"#utility.yul\":6239:6241   */\n      0x26\n        /* \"#utility.yul\":6234:6237   */\n      dup4\n        /* \"#utility.yul\":6175:6242   */\n      tag_195\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6168:6242   */\n      swap2\n      pop\n        /* \"#utility.yul\":6251:6344   */\n      tag_282\n        /* \"#utility.yul\":6340:6343   */\n      dup3\n        /* \"#utility.yul\":6251:6344   */\n      tag_198\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6369:6371   */\n      0x40\n        /* \"#utility.yul\":6364:6367   */\n      dup3\n        /* \"#utility.yul\":6360:6372   */\n      add\n        /* \"#utility.yul\":6353:6372   */\n      swap1\n      pop\n        /* \"#utility.yul\":6012:6378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6384:6803   */\n    tag_87:\n        /* \"#utility.yul\":6550:6554   */\n      0x00\n        /* \"#utility.yul\":6588:6590   */\n      0x20\n        /* \"#utility.yul\":6577:6586   */\n      dup3\n        /* \"#utility.yul\":6573:6591   */\n      add\n        /* \"#utility.yul\":6565:6591   */\n      swap1\n      pop\n        /* \"#utility.yul\":6637:6646   */\n      dup2\n        /* \"#utility.yul\":6631:6635   */\n      dup2\n        /* \"#utility.yul\":6627:6647   */\n      sub\n        /* \"#utility.yul\":6623:6624   */\n      0x00\n        /* \"#utility.yul\":6612:6621   */\n      dup4\n        /* \"#utility.yul\":6608:6625   */\n      add\n        /* \"#utility.yul\":6601:6648   */\n      mstore\n        /* \"#utility.yul\":6665:6796   */\n      tag_284\n        /* \"#utility.yul\":6791:6795   */\n      dup2\n        /* \"#utility.yul\":6665:6796   */\n      tag_199\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6657:6796   */\n      swap1\n      pop\n        /* \"#utility.yul\":6384:6803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6809:7048   */\n    tag_200:\n        /* \"#utility.yul\":6949:6983   */\n      0x46617563657420697320656d70747920666f7220746f6461792e20506c656173\n        /* \"#utility.yul\":6945:6946   */\n      0x00\n        /* \"#utility.yul\":6937:6943   */\n      dup3\n        /* \"#utility.yul\":6933:6947   */\n      add\n        /* \"#utility.yul\":6926:6984   */\n      mstore\n        /* \"#utility.yul\":7018:7040   */\n      0x65207761697420666f72206120726566696c6c2e000000000000000000000000\n        /* \"#utility.yul\":7013:7015   */\n      0x20\n        /* \"#utility.yul\":7005:7011   */\n      dup3\n        /* \"#utility.yul\":7001:7016   */\n      add\n        /* \"#utility.yul\":6994:7041   */\n      mstore\n        /* \"#utility.yul\":6809:7048   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7054:7420   */\n    tag_201:\n        /* \"#utility.yul\":7196:7199   */\n      0x00\n        /* \"#utility.yul\":7217:7284   */\n      tag_287\n        /* \"#utility.yul\":7281:7283   */\n      0x34\n        /* \"#utility.yul\":7276:7279   */\n      dup4\n        /* \"#utility.yul\":7217:7284   */\n      tag_195\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7210:7284   */\n      swap2\n      pop\n        /* \"#utility.yul\":7293:7386   */\n      tag_288\n        /* \"#utility.yul\":7382:7385   */\n      dup3\n        /* \"#utility.yul\":7293:7386   */\n      tag_200\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7411:7413   */\n      0x40\n        /* \"#utility.yul\":7406:7409   */\n      dup3\n        /* \"#utility.yul\":7402:7414   */\n      add\n        /* \"#utility.yul\":7395:7414   */\n      swap1\n      pop\n        /* \"#utility.yul\":7054:7420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7426:7845   */\n    tag_95:\n        /* \"#utility.yul\":7592:7596   */\n      0x00\n        /* \"#utility.yul\":7630:7632   */\n      0x20\n        /* \"#utility.yul\":7619:7628   */\n      dup3\n        /* \"#utility.yul\":7615:7633   */\n      add\n        /* \"#utility.yul\":7607:7633   */\n      swap1\n      pop\n        /* \"#utility.yul\":7679:7688   */\n      dup2\n        /* \"#utility.yul\":7673:7677   */\n      dup2\n        /* \"#utility.yul\":7669:7689   */\n      sub\n        /* \"#utility.yul\":7665:7666   */\n      0x00\n        /* \"#utility.yul\":7654:7663   */\n      dup4\n        /* \"#utility.yul\":7650:7667   */\n      add\n        /* \"#utility.yul\":7643:7690   */\n      mstore\n        /* \"#utility.yul\":7707:7838   */\n      tag_290\n        /* \"#utility.yul\":7833:7837   */\n      dup2\n        /* \"#utility.yul\":7707:7838   */\n      tag_201\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7699:7838   */\n      swap1\n      pop\n        /* \"#utility.yul\":7426:7845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:8024   */\n    tag_202:\n        /* \"#utility.yul\":7991:8016   */\n      0x5a65726f20616d6f756e74206e6f7420616c6c6f776564000000000000000000\n        /* \"#utility.yul\":7987:7988   */\n      0x00\n        /* \"#utility.yul\":7979:7985   */\n      dup3\n        /* \"#utility.yul\":7975:7989   */\n      add\n        /* \"#utility.yul\":7968:8017   */\n      mstore\n        /* \"#utility.yul\":7851:8024   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8030:8396   */\n    tag_203:\n        /* \"#utility.yul\":8172:8175   */\n      0x00\n        /* \"#utility.yul\":8193:8260   */\n      tag_293\n        /* \"#utility.yul\":8257:8259   */\n      0x17\n        /* \"#utility.yul\":8252:8255   */\n      dup4\n        /* \"#utility.yul\":8193:8260   */\n      tag_195\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8186:8260   */\n      swap2\n      pop\n        /* \"#utility.yul\":8269:8362   */\n      tag_294\n        /* \"#utility.yul\":8358:8361   */\n      dup3\n        /* \"#utility.yul\":8269:8362   */\n      tag_202\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8387:8389   */\n      0x20\n        /* \"#utility.yul\":8382:8385   */\n      dup3\n        /* \"#utility.yul\":8378:8390   */\n      add\n        /* \"#utility.yul\":8371:8390   */\n      swap1\n      pop\n        /* \"#utility.yul\":8030:8396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8402:8821   */\n    tag_118:\n        /* \"#utility.yul\":8568:8572   */\n      0x00\n        /* \"#utility.yul\":8606:8608   */\n      0x20\n        /* \"#utility.yul\":8595:8604   */\n      dup3\n        /* \"#utility.yul\":8591:8609   */\n      add\n        /* \"#utility.yul\":8583:8609   */\n      swap1\n      pop\n        /* \"#utility.yul\":8655:8664   */\n      dup2\n        /* \"#utility.yul\":8649:8653   */\n      dup2\n        /* \"#utility.yul\":8645:8665   */\n      sub\n        /* \"#utility.yul\":8641:8642   */\n      0x00\n        /* \"#utility.yul\":8630:8639   */\n      dup4\n        /* \"#utility.yul\":8626:8643   */\n      add\n        /* \"#utility.yul\":8619:8666   */\n      mstore\n        /* \"#utility.yul\":8683:8814   */\n      tag_296\n        /* \"#utility.yul\":8809:8813   */\n      dup2\n        /* \"#utility.yul\":8683:8814   */\n      tag_203\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8675:8814   */\n      swap1\n      pop\n        /* \"#utility.yul\":8402:8821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8827:9005   */\n    tag_204:\n        /* \"#utility.yul\":8967:8997   */\n      0x4e6f2065786365737320746f6b656e7320746f20776974686472617700000000\n        /* \"#utility.yul\":8963:8964   */\n      0x00\n        /* \"#utility.yul\":8955:8961   */\n      dup3\n        /* \"#utility.yul\":8951:8965   */\n      add\n        /* \"#utility.yul\":8944:8998   */\n      mstore\n        /* \"#utility.yul\":8827:9005   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9011:9377   */\n    tag_205:\n        /* \"#utility.yul\":9153:9156   */\n      0x00\n        /* \"#utility.yul\":9174:9241   */\n      tag_299\n        /* \"#utility.yul\":9238:9240   */\n      0x1c\n        /* \"#utility.yul\":9233:9236   */\n      dup4\n        /* \"#utility.yul\":9174:9241   */\n      tag_195\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9167:9241   */\n      swap2\n      pop\n        /* \"#utility.yul\":9250:9343   */\n      tag_300\n        /* \"#utility.yul\":9339:9342   */\n      dup3\n        /* \"#utility.yul\":9250:9343   */\n      tag_204\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9368:9370   */\n      0x20\n        /* \"#utility.yul\":9363:9366   */\n      dup3\n        /* \"#utility.yul\":9359:9371   */\n      add\n        /* \"#utility.yul\":9352:9371   */\n      swap1\n      pop\n        /* \"#utility.yul\":9011:9377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9383:9802   */\n    tag_135:\n        /* \"#utility.yul\":9549:9553   */\n      0x00\n        /* \"#utility.yul\":9587:9589   */\n      0x20\n        /* \"#utility.yul\":9576:9585   */\n      dup3\n        /* \"#utility.yul\":9572:9590   */\n      add\n        /* \"#utility.yul\":9564:9590   */\n      swap1\n      pop\n        /* \"#utility.yul\":9636:9645   */\n      dup2\n        /* \"#utility.yul\":9630:9634   */\n      dup2\n        /* \"#utility.yul\":9626:9646   */\n      sub\n        /* \"#utility.yul\":9622:9623   */\n      0x00\n        /* \"#utility.yul\":9611:9620   */\n      dup4\n        /* \"#utility.yul\":9607:9624   */\n      add\n        /* \"#utility.yul\":9600:9647   */\n      mstore\n        /* \"#utility.yul\":9664:9795   */\n      tag_302\n        /* \"#utility.yul\":9790:9794   */\n      dup2\n        /* \"#utility.yul\":9664:9795   */\n      tag_205\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":9656:9795   */\n      swap1\n      pop\n        /* \"#utility.yul\":9383:9802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9808:9989   */\n    tag_206:\n        /* \"#utility.yul\":9948:9981   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9944:9945   */\n      0x00\n        /* \"#utility.yul\":9936:9942   */\n      dup3\n        /* \"#utility.yul\":9932:9946   */\n      add\n        /* \"#utility.yul\":9925:9982   */\n      mstore\n        /* \"#utility.yul\":9808:9989   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9995:10361   */\n    tag_207:\n        /* \"#utility.yul\":10137:10140   */\n      0x00\n        /* \"#utility.yul\":10158:10225   */\n      tag_305\n        /* \"#utility.yul\":10222:10224   */\n      0x1f\n        /* \"#utility.yul\":10217:10220   */\n      dup4\n        /* \"#utility.yul\":10158:10225   */\n      tag_195\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10151:10225   */\n      swap2\n      pop\n        /* \"#utility.yul\":10234:10327   */\n      tag_306\n        /* \"#utility.yul\":10323:10326   */\n      dup3\n        /* \"#utility.yul\":10234:10327   */\n      tag_206\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10352:10354   */\n      0x20\n        /* \"#utility.yul\":10347:10350   */\n      dup3\n        /* \"#utility.yul\":10343:10355   */\n      add\n        /* \"#utility.yul\":10336:10355   */\n      swap1\n      pop\n        /* \"#utility.yul\":9995:10361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10367:10786   */\n    tag_150:\n        /* \"#utility.yul\":10533:10537   */\n      0x00\n        /* \"#utility.yul\":10571:10573   */\n      0x20\n        /* \"#utility.yul\":10560:10569   */\n      dup3\n        /* \"#utility.yul\":10556:10574   */\n      add\n        /* \"#utility.yul\":10548:10574   */\n      swap1\n      pop\n        /* \"#utility.yul\":10620:10629   */\n      dup2\n        /* \"#utility.yul\":10614:10618   */\n      dup2\n        /* \"#utility.yul\":10610:10630   */\n      sub\n        /* \"#utility.yul\":10606:10607   */\n      0x00\n        /* \"#utility.yul\":10595:10604   */\n      dup4\n        /* \"#utility.yul\":10591:10608   */\n      add\n        /* \"#utility.yul\":10584:10631   */\n      mstore\n        /* \"#utility.yul\":10648:10779   */\n      tag_308\n        /* \"#utility.yul\":10774:10778   */\n      dup2\n        /* \"#utility.yul\":10648:10779   */\n      tag_207\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10640:10779   */\n      swap1\n      pop\n        /* \"#utility.yul\":10367:10786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10792:11124   */\n    tag_154:\n        /* \"#utility.yul\":10913:10917   */\n      0x00\n        /* \"#utility.yul\":10951:10953   */\n      0x40\n        /* \"#utility.yul\":10940:10949   */\n      dup3\n        /* \"#utility.yul\":10936:10954   */\n      add\n        /* \"#utility.yul\":10928:10954   */\n      swap1\n      pop\n        /* \"#utility.yul\":10964:11035   */\n      tag_310\n        /* \"#utility.yul\":11032:11033   */\n      0x00\n        /* \"#utility.yul\":11021:11030   */\n      dup4\n        /* \"#utility.yul\":11017:11034   */\n      add\n        /* \"#utility.yul\":11008:11014   */\n      dup6\n        /* \"#utility.yul\":10964:11035   */\n      tag_185\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11045:11117   */\n      tag_311\n        /* \"#utility.yul\":11113:11115   */\n      0x20\n        /* \"#utility.yul\":11102:11111   */\n      dup4\n        /* \"#utility.yul\":11098:11116   */\n      add\n        /* \"#utility.yul\":11089:11095   */\n      dup5\n        /* \"#utility.yul\":11045:11117   */\n      tag_177\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10792:11124   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11130:11572   */\n    tag_168:\n        /* \"#utility.yul\":11279:11283   */\n      0x00\n        /* \"#utility.yul\":11317:11319   */\n      0x60\n        /* \"#utility.yul\":11306:11315   */\n      dup3\n        /* \"#utility.yul\":11302:11320   */\n      add\n        /* \"#utility.yul\":11294:11320   */\n      swap1\n      pop\n        /* \"#utility.yul\":11330:11401   */\n      tag_313\n        /* \"#utility.yul\":11398:11399   */\n      0x00\n        /* \"#utility.yul\":11387:11396   */\n      dup4\n        /* \"#utility.yul\":11383:11400   */\n      add\n        /* \"#utility.yul\":11374:11380   */\n      dup7\n        /* \"#utility.yul\":11330:11401   */\n      tag_185\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11411:11483   */\n      tag_314\n        /* \"#utility.yul\":11479:11481   */\n      0x20\n        /* \"#utility.yul\":11468:11477   */\n      dup4\n        /* \"#utility.yul\":11464:11482   */\n      add\n        /* \"#utility.yul\":11455:11461   */\n      dup6\n        /* \"#utility.yul\":11411:11483   */\n      tag_185\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11493:11565   */\n      tag_315\n        /* \"#utility.yul\":11561:11563   */\n      0x40\n        /* \"#utility.yul\":11550:11559   */\n      dup4\n        /* \"#utility.yul\":11546:11564   */\n      add\n        /* \"#utility.yul\":11537:11543   */\n      dup5\n        /* \"#utility.yul\":11493:11565   */\n      tag_177\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11130:11572   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e5b846dd09585f4886943a0dbf0b1399f531f1c8a2bfb57391b25a178bd6def964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 372,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2700:10",
										"nodeType": "YulBlock",
										"src": "0:2700:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "922:274:10",
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:10",
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nativeSrc": "970:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nativeSrc": "970:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nativeSrc": "939:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:10",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nativeSrc": "935:32:10",
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nativeSrc": "932:119:10",
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nativeSrc": "1061:128:10",
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nativeSrc": "1076:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nativeSrc": "1147:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nativeSrc": "1115:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:10",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:10",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:10",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nativeSrc": "1267:53:10",
													"nodeType": "YulBlock",
													"src": "1267:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:10"
																		},
																		"nativeSrc": "1289:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:10"
																},
																"nativeSrc": "1277:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:10"
															},
															"nativeSrc": "1277:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:10",
														"nodeType": "YulTypedName",
														"src": "1255:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:10",
														"nodeType": "YulTypedName",
														"src": "1262:3:10",
														"type": ""
													}
												],
												"src": "1202:118:10"
											},
											{
												"body": {
													"nativeSrc": "1424:124:10",
													"nodeType": "YulBlock",
													"src": "1424:124:10",
													"statements": [
														{
															"nativeSrc": "1434:26:10",
															"nodeType": "YulAssignment",
															"src": "1434:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:10"
																},
																"nativeSrc": "1442:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:10"
																		},
																		"nativeSrc": "1523:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:10"
																},
																"nativeSrc": "1470:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:10"
															},
															"nativeSrc": "1470:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:10",
														"nodeType": "YulTypedName",
														"src": "1396:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:10",
														"nodeType": "YulTypedName",
														"src": "1408:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:10",
														"nodeType": "YulTypedName",
														"src": "1419:4:10",
														"type": ""
													}
												],
												"src": "1326:222:10"
											},
											{
												"body": {
													"nativeSrc": "1650:73:10",
													"nodeType": "YulBlock",
													"src": "1650:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1667:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1672:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:10"
																},
																"nativeSrc": "1660:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1660:19:10"
															},
															"nativeSrc": "1660:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1660:19:10"
														},
														{
															"nativeSrc": "1688:29:10",
															"nodeType": "YulAssignment",
															"src": "1688:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1707:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1703:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:10"
																},
																"nativeSrc": "1703:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1703:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1688:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1688:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1622:3:10",
														"nodeType": "YulTypedName",
														"src": "1622:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1627:6:10",
														"nodeType": "YulTypedName",
														"src": "1627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1638:11:10",
														"nodeType": "YulTypedName",
														"src": "1638:11:10",
														"type": ""
													}
												],
												"src": "1554:169:10"
											},
											{
												"body": {
													"nativeSrc": "1835:65:10",
													"nodeType": "YulBlock",
													"src": "1835:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1857:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1865:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1865:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:10"
																		},
																		"nativeSrc": "1853:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1869:23:10",
																		"nodeType": "YulLiteral",
																		"src": "1869:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1846:6:10"
																},
																"nativeSrc": "1846:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1846:47:10"
															},
															"nativeSrc": "1846:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1846:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1729:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1827:6:10",
														"nodeType": "YulTypedName",
														"src": "1827:6:10",
														"type": ""
													}
												],
												"src": "1729:171:10"
											},
											{
												"body": {
													"nativeSrc": "2052:220:10",
													"nodeType": "YulBlock",
													"src": "2052:220:10",
													"statements": [
														{
															"nativeSrc": "2062:74:10",
															"nodeType": "YulAssignment",
															"src": "2062:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2128:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2128:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2069:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2069:58:10"
																},
																"nativeSrc": "2069:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2069:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2062:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2234:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2145:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2145:88:10"
																},
																"nativeSrc": "2145:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2145:93:10"
															},
															"nativeSrc": "2145:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2145:93:10"
														},
														{
															"nativeSrc": "2247:19:10",
															"nodeType": "YulAssignment",
															"src": "2247:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2258:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2258:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2263:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:10"
																},
																"nativeSrc": "2254:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2254:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2247:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1906:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2040:3:10",
														"nodeType": "YulTypedName",
														"src": "2040:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2048:3:10",
														"nodeType": "YulTypedName",
														"src": "2048:3:10",
														"type": ""
													}
												],
												"src": "1906:366:10"
											},
											{
												"body": {
													"nativeSrc": "2449:248:10",
													"nodeType": "YulBlock",
													"src": "2449:248:10",
													"statements": [
														{
															"nativeSrc": "2459:26:10",
															"nodeType": "YulAssignment",
															"src": "2459:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:10"
																},
																"nativeSrc": "2467:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2459:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2506:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2517:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2517:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:10"
																		},
																		"nativeSrc": "2502:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2525:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2525:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2531:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2521:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2521:3:10"
																		},
																		"nativeSrc": "2521:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2521:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:10"
																},
																"nativeSrc": "2495:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2495:47:10"
															},
															"nativeSrc": "2495:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2495:47:10"
														},
														{
															"nativeSrc": "2551:139:10",
															"nodeType": "YulAssignment",
															"src": "2551:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2685:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2685:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2559:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2559:124:10"
																},
																"nativeSrc": "2559:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2559:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2551:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2551:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2278:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2429:9:10",
														"nodeType": "YulTypedName",
														"src": "2429:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2444:4:10",
														"nodeType": "YulTypedName",
														"src": "2444:4:10",
														"type": ""
													}
												],
												"src": "2278:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161172138038061172183398181016040528101906100319190610293565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102cd565b60405180910390fd5b6100b18161017460201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e90610340565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005819055505061035e565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61026282610239565b9050919050565b61027281610258565b811461027c575f5ffd5b50565b5f8151905061028d81610269565b92915050565b5f602082840312156102a8576102a7610235565b5b5f6102b58482850161027f565b91505092915050565b6102c781610258565b82525050565b5f6020820190506102e05f8301846102be565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f61032a6015836102e6565b9150610335826102f6565b602082019050919050565b5f6020820190508181035f8301526103578161031e565b9050919050565b6113b68061036b5f395ff3fe608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063a6e340c611610064578063a6e340c614610202578063b77cf9c61461021e578063c264a0631461024e578063f2fde38b14610258576100e8565b80638da5cb5b1461019657806393c30c0f146101b4578063a2177124146101e4576100e8565b80633a20c2f0116100c65780633a20c2f01461014657806348c54b9d1461016457806358a0bde31461016e578063715018a61461018c576100e8565b8063248ec326146100ec57806326b711631461010a5780632895f1c114610128575b5f5ffd5b6100f4610274565b6040516101019190610dcd565b60405180910390f35b610112610282565b60405161011f9190610dcd565b60405180910390f35b61013061032e565b60405161013d9190610dcd565b60405180910390f35b61014e610339565b60405161015b9190610dcd565b60405180910390f35b61016c61033f565b005b610176610674565b6040516101839190610e60565b60405180910390f35b610194610699565b005b61019e6106ac565b6040516101ab9190610e99565b60405180910390f35b6101ce60048036038101906101c99190610ee0565b6106d3565b6040516101db9190610dcd565b60405180910390f35b6101ec610727565b6040516101f99190610dcd565b60405180910390f35b61021c60048036038101906102179190610f35565b61072d565b005b61023860048036038101906102339190610ee0565b610826565b6040516102459190610dcd565b60405180910390f35b61025661083b565b005b610272600480360381019061026d9190610ee0565b6109ee565b005b69021e19e0c9bab240000081565b5f60045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102e09190610e99565b602060405180830381865afa1580156102fb573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031f9190610f74565b6103299190610fcc565b905090565b66038d7ea4c6800081565b60045481565b610347610a72565b620151806005546103589190610fff565b421061036d575f600481905550426005819055505b66038d7ea4c680003373ffffffffffffffffffffffffffffffffffffffff163110156103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c5906110b2565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050620151808161041e9190610fff565b421015610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790611140565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104bb9190610e99565b602060405180830381865afa1580156104d6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104fa9190610f74565b90508069021e19e0c9bab24000006004546105159190610fff565b1115610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d906111ce565b60405180910390fd5b4260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555069021e19e0c9bab240000060045f8282546105b39190610fff565b925050819055506106103369021e19e0c9bab240000060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac19092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43069021e19e0c9bab24000006040516106609190610dcd565b60405180910390a25050610672610b40565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106a1610b49565b6106aa5f610bd0565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6201518060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546107209190610fff565b9050919050565b60055481565b610735610b49565b61073d610a72565b5f811161077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611236565b60405180910390fd5b6107cd33308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c91909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8a609374befb6b58cb150d9bd9aafa56b72315f38a284e3c21c69827fe7102b9826040516108139190610dcd565b60405180910390a2610823610b40565b50565b6003602052805f5260405f205f915090505481565b610843610b49565b61084b610a72565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108a69190610e99565b602060405180830381865afa1580156108c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e59190610f74565b90505f600454826108f69190610fcc565b90505f811161093a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109319061129e565b60405180910390fd5b61098d6109456106ac565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac19092919063ffffffff16565b6109956106ac565b73ffffffffffffffffffffffffffffffffffffffff167f9bdedcc968f2c0682145c20289dfbb3081a39684571116ab45eabfef512e9473826040516109da9190610dcd565b60405180910390a250506109ec610b40565b565b6109f6610b49565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a66575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a5d9190610e99565b60405180910390fd5b610a6f81610bd0565b50565b600260015403610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611306565b60405180910390fd5b6002600181905550565b610b3b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610af4929190611324565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d13565b505050565b60018081905550565b610b51610dae565b73ffffffffffffffffffffffffffffffffffffffff16610b6f6106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610bce57610b92610dae565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bc59190610e99565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d0d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610cc69392919061134b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d13565b50505050565b5f5f60205f8451602086015f885af180610d32576040513d5f823e3d81fd5b3d92505f519150505f8214610d4b576001811415610d66565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610da857836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610d9f9190610e99565b60405180910390fd5b50505050565b5f33905090565b5f819050919050565b610dc781610db5565b82525050565b5f602082019050610de05f830184610dbe565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610e28610e23610e1e84610de6565b610e05565b610de6565b9050919050565b5f610e3982610e0e565b9050919050565b5f610e4a82610e2f565b9050919050565b610e5a81610e40565b82525050565b5f602082019050610e735f830184610e51565b92915050565b5f610e8382610de6565b9050919050565b610e9381610e79565b82525050565b5f602082019050610eac5f830184610e8a565b92915050565b5f5ffd5b610ebf81610e79565b8114610ec9575f5ffd5b50565b5f81359050610eda81610eb6565b92915050565b5f60208284031215610ef557610ef4610eb2565b5b5f610f0284828501610ecc565b91505092915050565b610f1481610db5565b8114610f1e575f5ffd5b50565b5f81359050610f2f81610f0b565b92915050565b5f60208284031215610f4a57610f49610eb2565b5b5f610f5784828501610f21565b91505092915050565b5f81519050610f6e81610f0b565b92915050565b5f60208284031215610f8957610f88610eb2565b5b5f610f9684828501610f60565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fd682610db5565b9150610fe183610db5565b9250828203905081811115610ff957610ff8610f9f565b5b92915050565b5f61100982610db5565b915061101483610db5565b925082820190508082111561102c5761102b610f9f565b5b92915050565b5f82825260208201905092915050565b7f4d696e696d756d20302e303031204554482062616c616e6365207265717569725f8201527f656420746f20636c61696d000000000000000000000000000000000000000000602082015250565b5f61109c602b83611032565b91506110a782611042565b604082019050919050565b5f6020820190508181035f8301526110c981611090565b9050919050565b7f596f752063616e206f6e6c7920636c61696d206f6e63652065766572792032345f8201527f20686f7572730000000000000000000000000000000000000000000000000000602082015250565b5f61112a602683611032565b9150611135826110d0565b604082019050919050565b5f6020820190508181035f8301526111578161111e565b9050919050565b7f46617563657420697320656d70747920666f7220746f6461792e20506c6561735f8201527f65207761697420666f72206120726566696c6c2e000000000000000000000000602082015250565b5f6111b8603483611032565b91506111c38261115e565b604082019050919050565b5f6020820190508181035f8301526111e5816111ac565b9050919050565b7f5a65726f20616d6f756e74206e6f7420616c6c6f7765640000000000000000005f82015250565b5f611220601783611032565b915061122b826111ec565b602082019050919050565b5f6020820190508181035f83015261124d81611214565b9050919050565b7f4e6f2065786365737320746f6b656e7320746f207769746864726177000000005f82015250565b5f611288601c83611032565b915061129382611254565b602082019050919050565b5f6020820190508181035f8301526112b58161127c565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6112f0601f83611032565b91506112fb826112bc565b602082019050919050565b5f6020820190508181035f83015261131d816112e4565b9050919050565b5f6040820190506113375f830185610e8a565b6113446020830184610dbe565b9392505050565b5f60608201905061135e5f830186610e8a565b61136b6020830185610e8a565b6113786040830184610dbe565b94935050505056fea2646970667358221220e5b846dd09585f4886943a0dbf0b1399f531f1c8a2bfb57391b25a178bd6def964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1721 CODESIZE SUB DUP1 PUSH2 0x1721 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x174 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP PUSH2 0x35E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x262 DUP3 PUSH2 0x239 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x258 JUMP JUMPDEST DUP2 EQ PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28D DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x235 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B5 DUP5 DUP3 DUP6 ADD PUSH2 0x27F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C7 DUP2 PUSH2 0x258 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32A PUSH1 0x15 DUP4 PUSH2 0x2E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x335 DUP3 PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x357 DUP2 PUSH2 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B6 DUP1 PUSH2 0x36B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA6E340C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA6E340C6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xB77CF9C6 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xC264A063 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x258 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x93C30C0F EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xA2177124 EQ PUSH2 0x1E4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3A20C2F0 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3A20C2F0 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x58A0BDE3 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x248EC326 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x26B71163 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x2895F1C1 EQ PUSH2 0x128 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST STOP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x347 PUSH2 0xA72 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x5 SLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST TIMESTAMP LT PUSH2 0x36D JUMPI PUSH0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH7 0x38D7EA4C68000 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH3 0x15180 DUP2 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x457 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP DUP1 PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x4 SLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST GT ISZERO PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x610 CALLER PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x40 MLOAD PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x672 PUSH2 0xB40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x6AA PUSH0 PUSH2 0xBD0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0x15180 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x735 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x73D PUSH2 0xA72 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CD CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC91 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A609374BEFB6B58CB150D9BD9AAFA56B72315F38A284E3C21C69827FE7102B9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x823 PUSH2 0xB40 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x843 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x84B PUSH2 0xA72 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x931 SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98D PUSH2 0x945 PUSH2 0x6AC JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x995 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9BDEDCC968F2C0682145C20289DFBB3081A39684571116AB45EABFEF512E9473 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x9EC PUSH2 0xB40 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0xB49 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA66 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP2 PUSH2 0xBD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB3B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB51 PUSH2 0xDAE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6F PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCE JUMPI PUSH2 0xB92 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD0D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD13 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD4B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD66 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xDA8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xDB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE0 PUSH0 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE28 PUSH2 0xE23 PUSH2 0xE1E DUP5 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE39 DUP3 PUSH2 0xE0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4A DUP3 PUSH2 0xE2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0xE40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE73 PUSH0 DUP4 ADD DUP5 PUSH2 0xE51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE83 DUP3 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE93 DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH0 DUP4 ADD DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEBF DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDA DUP2 PUSH2 0xEB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF5 JUMPI PUSH2 0xEF4 PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF02 DUP5 DUP3 DUP6 ADD PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0xDB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF1E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF2F DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4A JUMPI PUSH2 0xF49 PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF57 DUP5 DUP3 DUP6 ADD PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF6E DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF89 JUMPI PUSH2 0xF88 PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF96 DUP5 DUP3 DUP6 ADD PUSH2 0xF60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFD6 DUP3 PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE1 DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH2 0xFF8 PUSH2 0xF9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1009 DUP3 PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1014 DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102B PUSH2 0xF9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20302E303031204554482062616C616E636520726571756972 PUSH0 DUP3 ADD MSTORE PUSH32 0x656420746F20636C61696D000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109C PUSH1 0x2B DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A7 DUP3 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C9 DUP2 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D206F6E6365206576657279203234 PUSH0 DUP3 ADD MSTORE PUSH32 0x20686F7572730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112A PUSH1 0x26 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x1135 DUP3 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1157 DUP2 PUSH2 0x111E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46617563657420697320656D70747920666F7220746F6461792E20506C656173 PUSH0 DUP3 ADD MSTORE PUSH32 0x65207761697420666F72206120726566696C6C2E000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B8 PUSH1 0x34 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C3 DUP3 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11E5 DUP2 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74206E6F7420616C6C6F776564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1220 PUSH1 0x17 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x122B DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x124D DUP2 PUSH2 0x1214 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2065786365737320746F6B656E7320746F20776974686472617700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1288 PUSH1 0x1C DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x1293 DUP3 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12B5 DUP2 PUSH2 0x127C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F0 PUSH1 0x1F DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FB DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x131D DUP2 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1337 PUSH0 DUP4 ADD DUP6 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x1344 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x135E PUSH0 DUP4 ADD DUP7 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x136B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x1378 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPF 0xB846 0xDD MULMOD PC PUSH0 BASEFEE DUP7 SWAP5 GASPRICE 0xD 0xBF SIGNEXTEND SGT SWAP10 CREATE2 BALANCE CALL 0xC8 LOG2 0xBF 0xB5 PUSH20 0x91B25A178BD6DEF964736F6C634300081E003300 ",
							"sourceMap": "413:3567:9:-:0;;;1232:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1272:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;1342:1:9::2;1320:24;;:10;:24;;::::0;1312:58:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1399:10;1380:9;;:30;;;;;;;;;;;;;;;;;;1436:15;1420:13;:31;;;;1232:226:::0;413:3567;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:169::-;1638:11;1672:6;1667:3;1660:19;1712:4;1707:3;1703:14;1688:29;;1554:169;;;;:::o;1729:171::-;1869:23;1865:1;1857:6;1853:14;1846:47;1729:171;:::o;1906:366::-;2048:3;2069:67;2133:2;2128:3;2069:67;:::i;:::-;2062:74;;2145:93;2234:3;2145:93;:::i;:::-;2263:2;2258:3;2254:12;2247:19;;1906:366;;;:::o;2278:419::-;2444:4;2482:2;2471:9;2467:18;2459:26;;2531:9;2525:4;2521:20;2517:1;2506:9;2502:17;2495:47;2559:131;2685:4;2559:131;:::i;:::-;2551:139;;2278:419;;;:::o;413:3567:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAILY_LIMIT_909": {
									"entryPoint": 628,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MIN_ETH_BALANCE_912": {
									"entryPoint": 814,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 3347,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2889,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 3502,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 2880,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2674,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3024,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cafiToken_904": {
									"entryPoint": 1652,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimTokens_1072": {
									"entryPoint": 831,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getNextClaimTime_1186": {
									"entryPoint": 1747,
									"id": 1186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRemainingDailyQuota_1171": {
									"entryPoint": 642,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastClaimTime_916": {
									"entryPoint": 2086,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastResetTime_920": {
									"entryPoint": 1831,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1708,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@refillFaucet_1108": {
									"entryPoint": 1837,
									"id": 1108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1689,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 3217,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 2753,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@todayTotal_918": {
									"entryPoint": 825,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2542,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawExcess_1154": {
									"entryPoint": 2107,
									"id": 1154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4939,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4900,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6": {
									"entryPoint": 4692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11575:10",
										"nodeType": "YulBlock",
										"src": "0:11575:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "487:81:10",
													"nodeType": "YulBlock",
													"src": "487:81:10",
													"statements": [
														{
															"nativeSrc": "497:65:10",
															"nodeType": "YulAssignment",
															"src": "497:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:10",
																		"nodeType": "YulLiteral",
																		"src": "519:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:10"
																},
																"nativeSrc": "508:54:10",
																"nodeType": "YulFunctionCall",
																"src": "508:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:10",
														"nodeType": "YulTypedName",
														"src": "469:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:10",
														"nodeType": "YulTypedName",
														"src": "479:7:10",
														"type": ""
													}
												],
												"src": "442:126:10"
											},
											{
												"body": {
													"nativeSrc": "606:28:10",
													"nodeType": "YulBlock",
													"src": "606:28:10",
													"statements": [
														{
															"nativeSrc": "616:12:10",
															"nodeType": "YulAssignment",
															"src": "616:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "623:5:10",
																"nodeType": "YulIdentifier",
																"src": "623:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "616:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "574:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "592:5:10",
														"nodeType": "YulTypedName",
														"src": "592:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "602:3:10",
														"nodeType": "YulTypedName",
														"src": "602:3:10",
														"type": ""
													}
												],
												"src": "574:60:10"
											},
											{
												"body": {
													"nativeSrc": "700:82:10",
													"nodeType": "YulBlock",
													"src": "700:82:10",
													"statements": [
														{
															"nativeSrc": "710:66:10",
															"nodeType": "YulAssignment",
															"src": "710:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "768:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "750:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:10"
																				},
																				"nativeSrc": "750:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "741:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:10"
																		},
																		"nativeSrc": "741:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "723:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:10"
																},
																"nativeSrc": "723:53:10",
																"nodeType": "YulFunctionCall",
																"src": "723:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "710:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "640:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "680:5:10",
														"nodeType": "YulTypedName",
														"src": "680:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "690:9:10",
														"nodeType": "YulTypedName",
														"src": "690:9:10",
														"type": ""
													}
												],
												"src": "640:142:10"
											},
											{
												"body": {
													"nativeSrc": "848:66:10",
													"nodeType": "YulBlock",
													"src": "848:66:10",
													"statements": [
														{
															"nativeSrc": "858:50:10",
															"nodeType": "YulAssignment",
															"src": "858:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "902:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "871:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:10"
																},
																"nativeSrc": "871:37:10",
																"nodeType": "YulFunctionCall",
																"src": "871:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "858:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "788:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "828:5:10",
														"nodeType": "YulTypedName",
														"src": "828:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "838:9:10",
														"nodeType": "YulTypedName",
														"src": "838:9:10",
														"type": ""
													}
												],
												"src": "788:126:10"
											},
											{
												"body": {
													"nativeSrc": "994:66:10",
													"nodeType": "YulBlock",
													"src": "994:66:10",
													"statements": [
														{
															"nativeSrc": "1004:50:10",
															"nodeType": "YulAssignment",
															"src": "1004:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1048:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1017:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "1017:30:10"
																},
																"nativeSrc": "1017:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1017:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1004:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1004:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "920:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "974:5:10",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "984:9:10",
														"nodeType": "YulTypedName",
														"src": "984:9:10",
														"type": ""
													}
												],
												"src": "920:140:10"
											},
											{
												"body": {
													"nativeSrc": "1145:80:10",
													"nodeType": "YulBlock",
													"src": "1145:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1162:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1212:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "1167:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "1167:44:10"
																		},
																		"nativeSrc": "1167:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:10"
																},
																"nativeSrc": "1155:64:10",
																"nodeType": "YulFunctionCall",
																"src": "1155:64:10"
															},
															"nativeSrc": "1155:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "1155:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "1066:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1133:5:10",
														"nodeType": "YulTypedName",
														"src": "1133:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1140:3:10",
														"nodeType": "YulTypedName",
														"src": "1140:3:10",
														"type": ""
													}
												],
												"src": "1066:159:10"
											},
											{
												"body": {
													"nativeSrc": "1343:138:10",
													"nodeType": "YulBlock",
													"src": "1343:138:10",
													"statements": [
														{
															"nativeSrc": "1353:26:10",
															"nodeType": "YulAssignment",
															"src": "1353:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1365:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1376:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1361:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:10"
																},
																"nativeSrc": "1361:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1361:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1353:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1353:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1447:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1471:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:10"
																		},
																		"nativeSrc": "1456:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "1389:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "1389:57:10"
																},
																"nativeSrc": "1389:85:10",
																"nodeType": "YulFunctionCall",
																"src": "1389:85:10"
															},
															"nativeSrc": "1389:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "1389:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "1231:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1315:9:10",
														"nodeType": "YulTypedName",
														"src": "1315:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1327:6:10",
														"nodeType": "YulTypedName",
														"src": "1327:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1338:4:10",
														"nodeType": "YulTypedName",
														"src": "1338:4:10",
														"type": ""
													}
												],
												"src": "1231:250:10"
											},
											{
												"body": {
													"nativeSrc": "1532:51:10",
													"nodeType": "YulBlock",
													"src": "1532:51:10",
													"statements": [
														{
															"nativeSrc": "1542:35:10",
															"nodeType": "YulAssignment",
															"src": "1542:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1571:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1553:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1553:17:10"
																},
																"nativeSrc": "1553:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1553:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1542:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1542:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1487:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1514:5:10",
														"nodeType": "YulTypedName",
														"src": "1514:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1524:7:10",
														"nodeType": "YulTypedName",
														"src": "1524:7:10",
														"type": ""
													}
												],
												"src": "1487:96:10"
											},
											{
												"body": {
													"nativeSrc": "1654:53:10",
													"nodeType": "YulBlock",
													"src": "1654:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1671:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1671:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1694:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1676:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1676:17:10"
																		},
																		"nativeSrc": "1676:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1664:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:10"
																},
																"nativeSrc": "1664:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1664:37:10"
															},
															"nativeSrc": "1664:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1664:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1589:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1642:5:10",
														"nodeType": "YulTypedName",
														"src": "1642:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1649:3:10",
														"nodeType": "YulTypedName",
														"src": "1649:3:10",
														"type": ""
													}
												],
												"src": "1589:118:10"
											},
											{
												"body": {
													"nativeSrc": "1811:124:10",
													"nodeType": "YulBlock",
													"src": "1811:124:10",
													"statements": [
														{
															"nativeSrc": "1821:26:10",
															"nodeType": "YulAssignment",
															"src": "1821:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1833:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1833:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1844:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1844:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1829:3:10"
																},
																"nativeSrc": "1829:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1829:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1821:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1821:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1901:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1901:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1914:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1925:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1925:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:10"
																		},
																		"nativeSrc": "1910:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1857:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1857:43:10"
																},
																"nativeSrc": "1857:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1857:71:10"
															},
															"nativeSrc": "1857:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1857:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1713:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1783:9:10",
														"nodeType": "YulTypedName",
														"src": "1783:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1795:6:10",
														"nodeType": "YulTypedName",
														"src": "1795:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1806:4:10",
														"nodeType": "YulTypedName",
														"src": "1806:4:10",
														"type": ""
													}
												],
												"src": "1713:222:10"
											},
											{
												"body": {
													"nativeSrc": "1981:35:10",
													"nodeType": "YulBlock",
													"src": "1981:35:10",
													"statements": [
														{
															"nativeSrc": "1991:19:10",
															"nodeType": "YulAssignment",
															"src": "1991:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2007:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2007:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2001:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2001:5:10"
																},
																"nativeSrc": "2001:9:10",
																"nodeType": "YulFunctionCall",
																"src": "2001:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1991:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1941:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1974:6:10",
														"nodeType": "YulTypedName",
														"src": "1974:6:10",
														"type": ""
													}
												],
												"src": "1941:75:10"
											},
											{
												"body": {
													"nativeSrc": "2111:28:10",
													"nodeType": "YulBlock",
													"src": "2111:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2128:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:10"
																},
																"nativeSrc": "2121:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2121:12:10"
															},
															"nativeSrc": "2121:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2121:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2022:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2022:117:10"
											},
											{
												"body": {
													"nativeSrc": "2234:28:10",
													"nodeType": "YulBlock",
													"src": "2234:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2254:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2244:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2244:6:10"
																},
																"nativeSrc": "2244:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2244:12:10"
															},
															"nativeSrc": "2244:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2244:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2145:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2145:117:10"
											},
											{
												"body": {
													"nativeSrc": "2311:79:10",
													"nodeType": "YulBlock",
													"src": "2311:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:10",
																"nodeType": "YulBlock",
																"src": "2368:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:10"
																			},
																			"nativeSrc": "2370:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:10"
																		},
																		"nativeSrc": "2370:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2341:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:10"
																				},
																				"nativeSrc": "2341:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:10"
																		},
																		"nativeSrc": "2331:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:10"
																},
																"nativeSrc": "2324:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:10"
															},
															"nativeSrc": "2321:63:10",
															"nodeType": "YulIf",
															"src": "2321:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2268:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:10",
														"nodeType": "YulTypedName",
														"src": "2304:5:10",
														"type": ""
													}
												],
												"src": "2268:122:10"
											},
											{
												"body": {
													"nativeSrc": "2448:87:10",
													"nodeType": "YulBlock",
													"src": "2448:87:10",
													"statements": [
														{
															"nativeSrc": "2458:29:10",
															"nodeType": "YulAssignment",
															"src": "2458:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:10"
																},
																"nativeSrc": "2467:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2496:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:10"
																},
																"nativeSrc": "2496:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:10"
															},
															"nativeSrc": "2496:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2396:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:10",
														"nodeType": "YulTypedName",
														"src": "2426:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:10",
														"nodeType": "YulTypedName",
														"src": "2434:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:10",
														"nodeType": "YulTypedName",
														"src": "2442:5:10",
														"type": ""
													}
												],
												"src": "2396:139:10"
											},
											{
												"body": {
													"nativeSrc": "2607:263:10",
													"nodeType": "YulBlock",
													"src": "2607:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2653:83:10",
																"nodeType": "YulBlock",
																"src": "2653:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2655:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2655:77:10"
																			},
																			"nativeSrc": "2655:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2655:79:10"
																		},
																		"nativeSrc": "2655:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2655:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2628:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2628:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2637:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2637:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:10"
																		},
																		"nativeSrc": "2624:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2649:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2620:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2620:3:10"
																},
																"nativeSrc": "2620:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2620:32:10"
															},
															"nativeSrc": "2617:119:10",
															"nodeType": "YulIf",
															"src": "2617:119:10"
														},
														{
															"nativeSrc": "2746:117:10",
															"nodeType": "YulBlock",
															"src": "2746:117:10",
															"statements": [
																{
																	"nativeSrc": "2761:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2761:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2775:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2775:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2765:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2765:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2790:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2790:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2825:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2825:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2836:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2836:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2821:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:10"
																				},
																				"nativeSrc": "2821:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2821:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2845:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2845:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2800:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2800:20:10"
																		},
																		"nativeSrc": "2800:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2800:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2790:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2790:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2541:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2577:9:10",
														"nodeType": "YulTypedName",
														"src": "2577:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2588:7:10",
														"nodeType": "YulTypedName",
														"src": "2588:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2600:6:10",
														"nodeType": "YulTypedName",
														"src": "2600:6:10",
														"type": ""
													}
												],
												"src": "2541:329:10"
											},
											{
												"body": {
													"nativeSrc": "2919:79:10",
													"nodeType": "YulBlock",
													"src": "2919:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2976:16:10",
																"nodeType": "YulBlock",
																"src": "2976:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2985:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2985:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2978:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:10"
																			},
																			"nativeSrc": "2978:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2978:12:10"
																		},
																		"nativeSrc": "2978:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2978:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2942:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2942:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2967:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2967:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2949:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2949:17:10"
																				},
																				"nativeSrc": "2949:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2949:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2939:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2939:2:10"
																		},
																		"nativeSrc": "2939:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2939:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2932:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:10"
																},
																"nativeSrc": "2932:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2932:43:10"
															},
															"nativeSrc": "2929:63:10",
															"nodeType": "YulIf",
															"src": "2929:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2876:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:10",
														"nodeType": "YulTypedName",
														"src": "2912:5:10",
														"type": ""
													}
												],
												"src": "2876:122:10"
											},
											{
												"body": {
													"nativeSrc": "3056:87:10",
													"nodeType": "YulBlock",
													"src": "3056:87:10",
													"statements": [
														{
															"nativeSrc": "3066:29:10",
															"nodeType": "YulAssignment",
															"src": "3066:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3088:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3088:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3075:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3075:12:10"
																},
																"nativeSrc": "3075:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3075:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3066:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3066:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3131:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3104:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3104:26:10"
																},
																"nativeSrc": "3104:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3104:33:10"
															},
															"nativeSrc": "3104:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3104:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3004:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3034:6:10",
														"nodeType": "YulTypedName",
														"src": "3034:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3042:3:10",
														"nodeType": "YulTypedName",
														"src": "3042:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3050:5:10",
														"nodeType": "YulTypedName",
														"src": "3050:5:10",
														"type": ""
													}
												],
												"src": "3004:139:10"
											},
											{
												"body": {
													"nativeSrc": "3215:263:10",
													"nodeType": "YulBlock",
													"src": "3215:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3261:83:10",
																"nodeType": "YulBlock",
																"src": "3261:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3263:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3263:77:10"
																			},
																			"nativeSrc": "3263:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3263:79:10"
																		},
																		"nativeSrc": "3263:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3236:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3245:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3232:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:10"
																		},
																		"nativeSrc": "3232:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3228:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:10"
																},
																"nativeSrc": "3228:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3228:32:10"
															},
															"nativeSrc": "3225:119:10",
															"nodeType": "YulIf",
															"src": "3225:119:10"
														},
														{
															"nativeSrc": "3354:117:10",
															"nodeType": "YulBlock",
															"src": "3354:117:10",
															"statements": [
																{
																	"nativeSrc": "3369:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3369:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3383:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3373:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3373:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3398:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3398:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3433:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3433:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3444:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3444:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3429:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:10"
																				},
																				"nativeSrc": "3429:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3429:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3408:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3408:20:10"
																		},
																		"nativeSrc": "3408:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3398:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3398:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3149:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3185:9:10",
														"nodeType": "YulTypedName",
														"src": "3185:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3196:7:10",
														"nodeType": "YulTypedName",
														"src": "3196:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3208:6:10",
														"nodeType": "YulTypedName",
														"src": "3208:6:10",
														"type": ""
													}
												],
												"src": "3149:329:10"
											},
											{
												"body": {
													"nativeSrc": "3547:80:10",
													"nodeType": "YulBlock",
													"src": "3547:80:10",
													"statements": [
														{
															"nativeSrc": "3557:22:10",
															"nodeType": "YulAssignment",
															"src": "3557:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3572:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3572:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3566:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3566:5:10"
																},
																"nativeSrc": "3566:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3566:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3557:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3557:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3615:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3615:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3588:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3588:26:10"
																},
																"nativeSrc": "3588:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3588:33:10"
															},
															"nativeSrc": "3588:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3588:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3484:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3525:6:10",
														"nodeType": "YulTypedName",
														"src": "3525:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3533:3:10",
														"nodeType": "YulTypedName",
														"src": "3533:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3541:5:10",
														"nodeType": "YulTypedName",
														"src": "3541:5:10",
														"type": ""
													}
												],
												"src": "3484:143:10"
											},
											{
												"body": {
													"nativeSrc": "3710:274:10",
													"nodeType": "YulBlock",
													"src": "3710:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3756:83:10",
																"nodeType": "YulBlock",
																"src": "3756:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3758:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3758:77:10"
																			},
																			"nativeSrc": "3758:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3758:79:10"
																		},
																		"nativeSrc": "3758:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3731:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3731:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3740:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3740:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3727:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:10"
																		},
																		"nativeSrc": "3727:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3752:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3752:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3723:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:10"
																},
																"nativeSrc": "3723:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3723:32:10"
															},
															"nativeSrc": "3720:119:10",
															"nodeType": "YulIf",
															"src": "3720:119:10"
														},
														{
															"nativeSrc": "3849:128:10",
															"nodeType": "YulBlock",
															"src": "3849:128:10",
															"statements": [
																{
																	"nativeSrc": "3864:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3864:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3878:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3878:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3868:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3868:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3893:74:10",
																	"nodeType": "YulAssignment",
																	"src": "3893:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3939:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3939:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3950:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3950:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3935:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3935:3:10"
																				},
																				"nativeSrc": "3935:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3935:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3959:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3959:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3903:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "3903:31:10"
																		},
																		"nativeSrc": "3903:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3893:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3893:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3633:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:10",
														"nodeType": "YulTypedName",
														"src": "3680:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3691:7:10",
														"nodeType": "YulTypedName",
														"src": "3691:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3703:6:10",
														"nodeType": "YulTypedName",
														"src": "3703:6:10",
														"type": ""
													}
												],
												"src": "3633:351:10"
											},
											{
												"body": {
													"nativeSrc": "4018:152:10",
													"nodeType": "YulBlock",
													"src": "4018:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4035:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4035:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4038:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4038:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4028:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4028:6:10"
																},
																"nativeSrc": "4028:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4028:88:10"
															},
															"nativeSrc": "4028:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4028:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4132:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4132:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4135:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4135:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4125:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:10"
																},
																"nativeSrc": "4125:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4125:15:10"
															},
															"nativeSrc": "4125:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4125:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4156:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4156:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4159:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4159:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4149:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:10"
																},
																"nativeSrc": "4149:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4149:15:10"
															},
															"nativeSrc": "4149:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4149:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3990:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3990:180:10"
											},
											{
												"body": {
													"nativeSrc": "4221:149:10",
													"nodeType": "YulBlock",
													"src": "4221:149:10",
													"statements": [
														{
															"nativeSrc": "4231:25:10",
															"nodeType": "YulAssignment",
															"src": "4231:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4254:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4254:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4236:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4236:17:10"
																},
																"nativeSrc": "4236:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4236:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4231:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "4231:1:10"
																}
															]
														},
														{
															"nativeSrc": "4265:25:10",
															"nodeType": "YulAssignment",
															"src": "4265:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4288:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4288:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4270:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4270:17:10"
																},
																"nativeSrc": "4270:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4270:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4265:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "4265:1:10"
																}
															]
														},
														{
															"nativeSrc": "4299:17:10",
															"nodeType": "YulAssignment",
															"src": "4299:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4311:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4311:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4314:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4314:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:10"
																},
																"nativeSrc": "4307:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4307:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4299:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4299:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4341:22:10",
																"nodeType": "YulBlock",
																"src": "4341:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4343:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4343:16:10"
																			},
																			"nativeSrc": "4343:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4343:18:10"
																		},
																		"nativeSrc": "4343:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4332:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4332:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4338:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4338:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4329:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4329:2:10"
																},
																"nativeSrc": "4329:11:10",
																"nodeType": "YulFunctionCall",
																"src": "4329:11:10"
															},
															"nativeSrc": "4326:37:10",
															"nodeType": "YulIf",
															"src": "4326:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4176:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4207:1:10",
														"nodeType": "YulTypedName",
														"src": "4207:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4210:1:10",
														"nodeType": "YulTypedName",
														"src": "4210:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4216:4:10",
														"nodeType": "YulTypedName",
														"src": "4216:4:10",
														"type": ""
													}
												],
												"src": "4176:194:10"
											},
											{
												"body": {
													"nativeSrc": "4420:147:10",
													"nodeType": "YulBlock",
													"src": "4420:147:10",
													"statements": [
														{
															"nativeSrc": "4430:25:10",
															"nodeType": "YulAssignment",
															"src": "4430:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4453:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4453:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4435:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4435:17:10"
																},
																"nativeSrc": "4435:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4435:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4430:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "4430:1:10"
																}
															]
														},
														{
															"nativeSrc": "4464:25:10",
															"nodeType": "YulAssignment",
															"src": "4464:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4487:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4487:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4469:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4469:17:10"
																},
																"nativeSrc": "4469:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4469:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4464:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "4464:1:10"
																}
															]
														},
														{
															"nativeSrc": "4498:16:10",
															"nodeType": "YulAssignment",
															"src": "4498:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4509:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4509:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4512:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4512:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:10"
																},
																"nativeSrc": "4505:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4505:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4498:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4498:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4538:22:10",
																"nodeType": "YulBlock",
																"src": "4538:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4540:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4540:16:10"
																			},
																			"nativeSrc": "4540:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4540:18:10"
																		},
																		"nativeSrc": "4540:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4540:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4530:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4530:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4533:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4527:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4527:2:10"
																},
																"nativeSrc": "4527:10:10",
																"nodeType": "YulFunctionCall",
																"src": "4527:10:10"
															},
															"nativeSrc": "4524:36:10",
															"nodeType": "YulIf",
															"src": "4524:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4376:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4407:1:10",
														"nodeType": "YulTypedName",
														"src": "4407:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4410:1:10",
														"nodeType": "YulTypedName",
														"src": "4410:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4416:3:10",
														"nodeType": "YulTypedName",
														"src": "4416:3:10",
														"type": ""
													}
												],
												"src": "4376:191:10"
											},
											{
												"body": {
													"nativeSrc": "4669:73:10",
													"nodeType": "YulBlock",
													"src": "4669:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4686:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4686:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4691:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4691:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4679:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4679:6:10"
																},
																"nativeSrc": "4679:19:10",
																"nodeType": "YulFunctionCall",
																"src": "4679:19:10"
															},
															"nativeSrc": "4679:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "4679:19:10"
														},
														{
															"nativeSrc": "4707:29:10",
															"nodeType": "YulAssignment",
															"src": "4707:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4726:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4726:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4731:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4722:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:10"
																},
																"nativeSrc": "4722:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4722:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4707:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4707:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4573:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4641:3:10",
														"nodeType": "YulTypedName",
														"src": "4641:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4646:6:10",
														"nodeType": "YulTypedName",
														"src": "4646:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4657:11:10",
														"nodeType": "YulTypedName",
														"src": "4657:11:10",
														"type": ""
													}
												],
												"src": "4573:169:10"
											},
											{
												"body": {
													"nativeSrc": "4854:124:10",
													"nodeType": "YulBlock",
													"src": "4854:124:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4876:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4876:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4884:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4884:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4872:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:10"
																		},
																		"nativeSrc": "4872:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4872:14:10"
																	},
																	{
																		"hexValue": "4d696e696d756d20302e303031204554482062616c616e636520726571756972",
																		"kind": "string",
																		"nativeSrc": "4888:34:10",
																		"nodeType": "YulLiteral",
																		"src": "4888:34:10",
																		"type": "",
																		"value": "Minimum 0.001 ETH balance requir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4865:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:10"
																},
																"nativeSrc": "4865:58:10",
																"nodeType": "YulFunctionCall",
																"src": "4865:58:10"
															},
															"nativeSrc": "4865:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "4865:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4944:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4944:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4952:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4952:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4940:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4940:3:10"
																		},
																		"nativeSrc": "4940:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:15:10"
																	},
																	{
																		"hexValue": "656420746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "4957:13:10",
																		"nodeType": "YulLiteral",
																		"src": "4957:13:10",
																		"type": "",
																		"value": "ed to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4933:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4933:6:10"
																},
																"nativeSrc": "4933:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4933:38:10"
															},
															"nativeSrc": "4933:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "4933:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b",
												"nativeSrc": "4748:230:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4846:6:10",
														"nodeType": "YulTypedName",
														"src": "4846:6:10",
														"type": ""
													}
												],
												"src": "4748:230:10"
											},
											{
												"body": {
													"nativeSrc": "5130:220:10",
													"nodeType": "YulBlock",
													"src": "5130:220:10",
													"statements": [
														{
															"nativeSrc": "5140:74:10",
															"nodeType": "YulAssignment",
															"src": "5140:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5206:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5206:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5211:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5211:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5147:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5147:58:10"
																},
																"nativeSrc": "5147:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5147:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5312:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5312:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b",
																	"nativeSrc": "5223:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5223:88:10"
																},
																"nativeSrc": "5223:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5223:93:10"
															},
															"nativeSrc": "5223:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5223:93:10"
														},
														{
															"nativeSrc": "5325:19:10",
															"nodeType": "YulAssignment",
															"src": "5325:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5336:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5336:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5341:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5341:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5332:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5332:3:10"
																},
																"nativeSrc": "5332:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5332:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5325:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4984:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5118:3:10",
														"nodeType": "YulTypedName",
														"src": "5118:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5126:3:10",
														"nodeType": "YulTypedName",
														"src": "5126:3:10",
														"type": ""
													}
												],
												"src": "4984:366:10"
											},
											{
												"body": {
													"nativeSrc": "5527:248:10",
													"nodeType": "YulBlock",
													"src": "5527:248:10",
													"statements": [
														{
															"nativeSrc": "5537:26:10",
															"nodeType": "YulAssignment",
															"src": "5537:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5549:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5549:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5560:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5560:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5545:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5545:3:10"
																},
																"nativeSrc": "5545:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5545:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5537:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5537:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5580:3:10"
																		},
																		"nativeSrc": "5580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5580:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5603:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5603:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5609:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5599:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5599:3:10"
																		},
																		"nativeSrc": "5599:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5599:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5573:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:10"
																},
																"nativeSrc": "5573:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5573:47:10"
															},
															"nativeSrc": "5573:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5573:47:10"
														},
														{
															"nativeSrc": "5629:139:10",
															"nodeType": "YulAssignment",
															"src": "5629:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5763:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5763:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5637:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5637:124:10"
																},
																"nativeSrc": "5637:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5637:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5629:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5629:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5356:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5507:9:10",
														"nodeType": "YulTypedName",
														"src": "5507:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5522:4:10",
														"nodeType": "YulTypedName",
														"src": "5522:4:10",
														"type": ""
													}
												],
												"src": "5356:419:10"
											},
											{
												"body": {
													"nativeSrc": "5887:119:10",
													"nodeType": "YulBlock",
													"src": "5887:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5909:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5917:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5917:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5905:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:10"
																		},
																		"nativeSrc": "5905:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5905:14:10"
																	},
																	{
																		"hexValue": "596f752063616e206f6e6c7920636c61696d206f6e6365206576657279203234",
																		"kind": "string",
																		"nativeSrc": "5921:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5921:34:10",
																		"type": "",
																		"value": "You can only claim once every 24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:10"
																},
																"nativeSrc": "5898:58:10",
																"nodeType": "YulFunctionCall",
																"src": "5898:58:10"
															},
															"nativeSrc": "5898:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "5898:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5977:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5977:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5985:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5985:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5973:3:10"
																		},
																		"nativeSrc": "5973:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5973:15:10"
																	},
																	{
																		"hexValue": "20686f757273",
																		"kind": "string",
																		"nativeSrc": "5990:8:10",
																		"nodeType": "YulLiteral",
																		"src": "5990:8:10",
																		"type": "",
																		"value": " hours"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:10"
																},
																"nativeSrc": "5966:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5966:33:10"
															},
															"nativeSrc": "5966:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5966:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5",
												"nativeSrc": "5781:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5879:6:10",
														"nodeType": "YulTypedName",
														"src": "5879:6:10",
														"type": ""
													}
												],
												"src": "5781:225:10"
											},
											{
												"body": {
													"nativeSrc": "6158:220:10",
													"nodeType": "YulBlock",
													"src": "6158:220:10",
													"statements": [
														{
															"nativeSrc": "6168:74:10",
															"nodeType": "YulAssignment",
															"src": "6168:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6234:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6234:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6239:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6239:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6175:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6175:58:10"
																},
																"nativeSrc": "6175:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6175:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6168:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6340:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6340:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5",
																	"nativeSrc": "6251:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6251:88:10"
																},
																"nativeSrc": "6251:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6251:93:10"
															},
															"nativeSrc": "6251:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6251:93:10"
														},
														{
															"nativeSrc": "6353:19:10",
															"nodeType": "YulAssignment",
															"src": "6353:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6364:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6364:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6369:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6360:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6360:3:10"
																},
																"nativeSrc": "6360:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6360:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6353:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6012:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6146:3:10",
														"nodeType": "YulTypedName",
														"src": "6146:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6154:3:10",
														"nodeType": "YulTypedName",
														"src": "6154:3:10",
														"type": ""
													}
												],
												"src": "6012:366:10"
											},
											{
												"body": {
													"nativeSrc": "6555:248:10",
													"nodeType": "YulBlock",
													"src": "6555:248:10",
													"statements": [
														{
															"nativeSrc": "6565:26:10",
															"nodeType": "YulAssignment",
															"src": "6565:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6577:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6577:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6588:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6588:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6573:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6573:3:10"
																},
																"nativeSrc": "6573:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6573:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6565:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6565:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6612:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6623:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6623:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6608:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:10"
																		},
																		"nativeSrc": "6608:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6631:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6631:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6637:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6637:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:10"
																		},
																		"nativeSrc": "6627:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6601:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:10"
																},
																"nativeSrc": "6601:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6601:47:10"
															},
															"nativeSrc": "6601:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6601:47:10"
														},
														{
															"nativeSrc": "6657:139:10",
															"nodeType": "YulAssignment",
															"src": "6657:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6791:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6791:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6665:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6665:124:10"
																},
																"nativeSrc": "6665:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6665:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6657:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6657:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6384:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6535:9:10",
														"nodeType": "YulTypedName",
														"src": "6535:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6550:4:10",
														"nodeType": "YulTypedName",
														"src": "6550:4:10",
														"type": ""
													}
												],
												"src": "6384:419:10"
											},
											{
												"body": {
													"nativeSrc": "6915:133:10",
													"nodeType": "YulBlock",
													"src": "6915:133:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6937:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6937:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6945:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6945:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6933:3:10"
																		},
																		"nativeSrc": "6933:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6933:14:10"
																	},
																	{
																		"hexValue": "46617563657420697320656d70747920666f7220746f6461792e20506c656173",
																		"kind": "string",
																		"nativeSrc": "6949:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6949:34:10",
																		"type": "",
																		"value": "Faucet is empty for today. Pleas"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6926:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6926:6:10"
																},
																"nativeSrc": "6926:58:10",
																"nodeType": "YulFunctionCall",
																"src": "6926:58:10"
															},
															"nativeSrc": "6926:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "6926:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7005:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7005:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7013:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7013:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7001:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:10"
																		},
																		"nativeSrc": "7001:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:15:10"
																	},
																	{
																		"hexValue": "65207761697420666f72206120726566696c6c2e",
																		"kind": "string",
																		"nativeSrc": "7018:22:10",
																		"nodeType": "YulLiteral",
																		"src": "7018:22:10",
																		"type": "",
																		"value": "e wait for a refill."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6994:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:10"
																},
																"nativeSrc": "6994:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6994:47:10"
															},
															"nativeSrc": "6994:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6994:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7",
												"nativeSrc": "6809:239:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6907:6:10",
														"nodeType": "YulTypedName",
														"src": "6907:6:10",
														"type": ""
													}
												],
												"src": "6809:239:10"
											},
											{
												"body": {
													"nativeSrc": "7200:220:10",
													"nodeType": "YulBlock",
													"src": "7200:220:10",
													"statements": [
														{
															"nativeSrc": "7210:74:10",
															"nodeType": "YulAssignment",
															"src": "7210:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7276:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7281:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7281:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7217:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7217:58:10"
																},
																"nativeSrc": "7217:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7217:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7382:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7382:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7",
																	"nativeSrc": "7293:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7293:88:10"
																},
																"nativeSrc": "7293:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7293:93:10"
															},
															"nativeSrc": "7293:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7293:93:10"
														},
														{
															"nativeSrc": "7395:19:10",
															"nodeType": "YulAssignment",
															"src": "7395:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7406:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7406:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7411:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7402:3:10"
																},
																"nativeSrc": "7402:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7402:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7395:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7395:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7054:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7188:3:10",
														"nodeType": "YulTypedName",
														"src": "7188:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7196:3:10",
														"nodeType": "YulTypedName",
														"src": "7196:3:10",
														"type": ""
													}
												],
												"src": "7054:366:10"
											},
											{
												"body": {
													"nativeSrc": "7597:248:10",
													"nodeType": "YulBlock",
													"src": "7597:248:10",
													"statements": [
														{
															"nativeSrc": "7607:26:10",
															"nodeType": "YulAssignment",
															"src": "7607:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7619:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7619:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7630:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7630:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:10"
																},
																"nativeSrc": "7615:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7615:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7607:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7607:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7654:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7665:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7650:3:10"
																		},
																		"nativeSrc": "7650:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7650:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7673:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7673:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7679:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7679:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7669:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:10"
																		},
																		"nativeSrc": "7669:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7643:6:10"
																},
																"nativeSrc": "7643:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7643:47:10"
															},
															"nativeSrc": "7643:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7643:47:10"
														},
														{
															"nativeSrc": "7699:139:10",
															"nodeType": "YulAssignment",
															"src": "7699:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7833:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7833:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7707:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7707:124:10"
																},
																"nativeSrc": "7707:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7707:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7699:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7699:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7426:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7577:9:10",
														"nodeType": "YulTypedName",
														"src": "7577:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7592:4:10",
														"nodeType": "YulTypedName",
														"src": "7592:4:10",
														"type": ""
													}
												],
												"src": "7426:419:10"
											},
											{
												"body": {
													"nativeSrc": "7957:67:10",
													"nodeType": "YulBlock",
													"src": "7957:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7979:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7987:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7987:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7975:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7975:3:10"
																		},
																		"nativeSrc": "7975:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7975:14:10"
																	},
																	{
																		"hexValue": "5a65726f20616d6f756e74206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "7991:25:10",
																		"nodeType": "YulLiteral",
																		"src": "7991:25:10",
																		"type": "",
																		"value": "Zero amount not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7968:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7968:6:10"
																},
																"nativeSrc": "7968:49:10",
																"nodeType": "YulFunctionCall",
																"src": "7968:49:10"
															},
															"nativeSrc": "7968:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "7968:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32",
												"nativeSrc": "7851:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7949:6:10",
														"nodeType": "YulTypedName",
														"src": "7949:6:10",
														"type": ""
													}
												],
												"src": "7851:173:10"
											},
											{
												"body": {
													"nativeSrc": "8176:220:10",
													"nodeType": "YulBlock",
													"src": "8176:220:10",
													"statements": [
														{
															"nativeSrc": "8186:74:10",
															"nodeType": "YulAssignment",
															"src": "8186:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8252:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8252:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8257:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8257:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8193:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8193:58:10"
																},
																"nativeSrc": "8193:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8193:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8186:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8358:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8358:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32",
																	"nativeSrc": "8269:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8269:88:10"
																},
																"nativeSrc": "8269:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8269:93:10"
															},
															"nativeSrc": "8269:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8269:93:10"
														},
														{
															"nativeSrc": "8371:19:10",
															"nodeType": "YulAssignment",
															"src": "8371:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8382:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8382:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8387:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8387:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8378:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8378:3:10"
																},
																"nativeSrc": "8378:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8378:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8371:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8371:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8030:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8164:3:10",
														"nodeType": "YulTypedName",
														"src": "8164:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8172:3:10",
														"nodeType": "YulTypedName",
														"src": "8172:3:10",
														"type": ""
													}
												],
												"src": "8030:366:10"
											},
											{
												"body": {
													"nativeSrc": "8573:248:10",
													"nodeType": "YulBlock",
													"src": "8573:248:10",
													"statements": [
														{
															"nativeSrc": "8583:26:10",
															"nodeType": "YulAssignment",
															"src": "8583:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8595:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8595:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8606:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8606:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8591:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8591:3:10"
																},
																"nativeSrc": "8591:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8591:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8583:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8583:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8630:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8630:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8641:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8641:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8626:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8626:3:10"
																		},
																		"nativeSrc": "8626:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8626:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8649:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8649:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8655:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8655:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8645:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8645:3:10"
																		},
																		"nativeSrc": "8645:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8645:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8619:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8619:6:10"
																},
																"nativeSrc": "8619:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8619:47:10"
															},
															"nativeSrc": "8619:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8619:47:10"
														},
														{
															"nativeSrc": "8675:139:10",
															"nodeType": "YulAssignment",
															"src": "8675:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8809:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8809:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8683:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8683:124:10"
																},
																"nativeSrc": "8683:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8683:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8675:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8675:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8402:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8553:9:10",
														"nodeType": "YulTypedName",
														"src": "8553:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8568:4:10",
														"nodeType": "YulTypedName",
														"src": "8568:4:10",
														"type": ""
													}
												],
												"src": "8402:419:10"
											},
											{
												"body": {
													"nativeSrc": "8933:72:10",
													"nodeType": "YulBlock",
													"src": "8933:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8955:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8955:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8963:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8963:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8951:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8951:3:10"
																		},
																		"nativeSrc": "8951:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8951:14:10"
																	},
																	{
																		"hexValue": "4e6f2065786365737320746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "8967:30:10",
																		"nodeType": "YulLiteral",
																		"src": "8967:30:10",
																		"type": "",
																		"value": "No excess tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:10"
																},
																"nativeSrc": "8944:54:10",
																"nodeType": "YulFunctionCall",
																"src": "8944:54:10"
															},
															"nativeSrc": "8944:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "8944:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6",
												"nativeSrc": "8827:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8925:6:10",
														"nodeType": "YulTypedName",
														"src": "8925:6:10",
														"type": ""
													}
												],
												"src": "8827:178:10"
											},
											{
												"body": {
													"nativeSrc": "9157:220:10",
													"nodeType": "YulBlock",
													"src": "9157:220:10",
													"statements": [
														{
															"nativeSrc": "9167:74:10",
															"nodeType": "YulAssignment",
															"src": "9167:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9233:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9233:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9238:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9238:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9174:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9174:58:10"
																},
																"nativeSrc": "9174:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9174:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9167:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9167:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9339:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9339:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6",
																	"nativeSrc": "9250:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9250:88:10"
																},
																"nativeSrc": "9250:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9250:93:10"
															},
															"nativeSrc": "9250:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9250:93:10"
														},
														{
															"nativeSrc": "9352:19:10",
															"nodeType": "YulAssignment",
															"src": "9352:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9363:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9363:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9368:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9368:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9359:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9359:3:10"
																},
																"nativeSrc": "9359:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9359:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9352:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9352:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9011:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9145:3:10",
														"nodeType": "YulTypedName",
														"src": "9145:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9153:3:10",
														"nodeType": "YulTypedName",
														"src": "9153:3:10",
														"type": ""
													}
												],
												"src": "9011:366:10"
											},
											{
												"body": {
													"nativeSrc": "9554:248:10",
													"nodeType": "YulBlock",
													"src": "9554:248:10",
													"statements": [
														{
															"nativeSrc": "9564:26:10",
															"nodeType": "YulAssignment",
															"src": "9564:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9576:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9576:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9587:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9587:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9572:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9572:3:10"
																},
																"nativeSrc": "9572:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9572:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9564:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9564:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9611:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9622:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9622:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:10"
																		},
																		"nativeSrc": "9607:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9630:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9630:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9636:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9636:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9626:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:10"
																		},
																		"nativeSrc": "9626:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9626:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:10"
																},
																"nativeSrc": "9600:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9600:47:10"
															},
															"nativeSrc": "9600:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9600:47:10"
														},
														{
															"nativeSrc": "9656:139:10",
															"nodeType": "YulAssignment",
															"src": "9656:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9790:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9790:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9664:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9664:124:10"
																},
																"nativeSrc": "9664:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9664:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9656:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9656:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9383:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9534:9:10",
														"nodeType": "YulTypedName",
														"src": "9534:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9549:4:10",
														"nodeType": "YulTypedName",
														"src": "9549:4:10",
														"type": ""
													}
												],
												"src": "9383:419:10"
											},
											{
												"body": {
													"nativeSrc": "9914:75:10",
													"nodeType": "YulBlock",
													"src": "9914:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9936:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9936:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9944:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9944:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9932:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9932:3:10"
																		},
																		"nativeSrc": "9932:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9932:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9948:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9948:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9925:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9925:6:10"
																},
																"nativeSrc": "9925:57:10",
																"nodeType": "YulFunctionCall",
																"src": "9925:57:10"
															},
															"nativeSrc": "9925:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "9925:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "9808:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9906:6:10",
														"nodeType": "YulTypedName",
														"src": "9906:6:10",
														"type": ""
													}
												],
												"src": "9808:181:10"
											},
											{
												"body": {
													"nativeSrc": "10141:220:10",
													"nodeType": "YulBlock",
													"src": "10141:220:10",
													"statements": [
														{
															"nativeSrc": "10151:74:10",
															"nodeType": "YulAssignment",
															"src": "10151:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10217:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10217:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10222:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10222:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10158:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10158:58:10"
																},
																"nativeSrc": "10158:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10158:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10151:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10151:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10323:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "10234:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10234:88:10"
																},
																"nativeSrc": "10234:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10234:93:10"
															},
															"nativeSrc": "10234:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10234:93:10"
														},
														{
															"nativeSrc": "10336:19:10",
															"nodeType": "YulAssignment",
															"src": "10336:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10347:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10347:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10352:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10352:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10343:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10343:3:10"
																},
																"nativeSrc": "10343:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10343:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10336:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9995:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10129:3:10",
														"nodeType": "YulTypedName",
														"src": "10129:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10137:3:10",
														"nodeType": "YulTypedName",
														"src": "10137:3:10",
														"type": ""
													}
												],
												"src": "9995:366:10"
											},
											{
												"body": {
													"nativeSrc": "10538:248:10",
													"nodeType": "YulBlock",
													"src": "10538:248:10",
													"statements": [
														{
															"nativeSrc": "10548:26:10",
															"nodeType": "YulAssignment",
															"src": "10548:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10560:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10560:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10571:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10571:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10556:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10556:3:10"
																},
																"nativeSrc": "10556:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10556:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10548:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10548:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10595:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10595:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10606:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10606:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10591:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10591:3:10"
																		},
																		"nativeSrc": "10591:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10591:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10614:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10614:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10620:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10620:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10610:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10610:3:10"
																		},
																		"nativeSrc": "10610:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10610:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10584:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10584:6:10"
																},
																"nativeSrc": "10584:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10584:47:10"
															},
															"nativeSrc": "10584:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10584:47:10"
														},
														{
															"nativeSrc": "10640:139:10",
															"nodeType": "YulAssignment",
															"src": "10640:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10774:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10648:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10648:124:10"
																},
																"nativeSrc": "10648:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10648:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10640:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10640:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10367:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10518:9:10",
														"nodeType": "YulTypedName",
														"src": "10518:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10533:4:10",
														"nodeType": "YulTypedName",
														"src": "10533:4:10",
														"type": ""
													}
												],
												"src": "10367:419:10"
											},
											{
												"body": {
													"nativeSrc": "10918:206:10",
													"nodeType": "YulBlock",
													"src": "10918:206:10",
													"statements": [
														{
															"nativeSrc": "10928:26:10",
															"nodeType": "YulAssignment",
															"src": "10928:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10940:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10940:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10951:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10951:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10936:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10936:3:10"
																},
																"nativeSrc": "10936:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10936:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10928:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10928:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11008:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11008:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11021:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11021:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11032:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11032:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11017:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11017:3:10"
																		},
																		"nativeSrc": "11017:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11017:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10964:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10964:43:10"
																},
																"nativeSrc": "10964:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10964:71:10"
															},
															"nativeSrc": "10964:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10964:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11089:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11089:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11102:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11102:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11113:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11113:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11098:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11098:3:10"
																		},
																		"nativeSrc": "11098:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11098:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11045:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11045:43:10"
																},
																"nativeSrc": "11045:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11045:72:10"
															},
															"nativeSrc": "11045:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11045:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10792:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10882:9:10",
														"nodeType": "YulTypedName",
														"src": "10882:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10894:6:10",
														"nodeType": "YulTypedName",
														"src": "10894:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10902:6:10",
														"nodeType": "YulTypedName",
														"src": "10902:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10913:4:10",
														"nodeType": "YulTypedName",
														"src": "10913:4:10",
														"type": ""
													}
												],
												"src": "10792:332:10"
											},
											{
												"body": {
													"nativeSrc": "11284:288:10",
													"nodeType": "YulBlock",
													"src": "11284:288:10",
													"statements": [
														{
															"nativeSrc": "11294:26:10",
															"nodeType": "YulAssignment",
															"src": "11294:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11306:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11306:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11317:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11317:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11302:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11302:3:10"
																},
																"nativeSrc": "11302:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11302:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11294:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11374:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11374:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11387:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11387:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11398:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11398:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11383:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11383:3:10"
																		},
																		"nativeSrc": "11383:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11383:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11330:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11330:43:10"
																},
																"nativeSrc": "11330:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11330:71:10"
															},
															"nativeSrc": "11330:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11330:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11455:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11455:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11468:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11468:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11479:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11479:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11464:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11464:3:10"
																		},
																		"nativeSrc": "11464:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11464:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11411:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11411:43:10"
																},
																"nativeSrc": "11411:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11411:72:10"
															},
															"nativeSrc": "11411:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11411:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11537:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11537:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11550:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11550:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11561:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11561:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11546:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11546:3:10"
																		},
																		"nativeSrc": "11546:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11546:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11493:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11493:43:10"
																},
																"nativeSrc": "11493:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11493:72:10"
															},
															"nativeSrc": "11493:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11493:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11130:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11240:9:10",
														"nodeType": "YulTypedName",
														"src": "11240:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11252:6:10",
														"nodeType": "YulTypedName",
														"src": "11252:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11260:6:10",
														"nodeType": "YulTypedName",
														"src": "11260:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11268:6:10",
														"nodeType": "YulTypedName",
														"src": "11268:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11279:4:10",
														"nodeType": "YulTypedName",
														"src": "11279:4:10",
														"type": ""
													}
												],
												"src": "11130:442:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum 0.001 ETH balance requir\")\n\n        mstore(add(memPtr, 32), \"ed to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only claim once every 24\")\n\n        mstore(add(memPtr, 32), \" hours\")\n\n    }\n\n    function abi_encode_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Faucet is empty for today. Pleas\")\n\n        mstore(add(memPtr, 32), \"e wait for a refill.\")\n\n    }\n\n    function abi_encode_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero amount not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6(memPtr) {\n\n        mstore(add(memPtr, 0), \"No excess tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063a6e340c611610064578063a6e340c614610202578063b77cf9c61461021e578063c264a0631461024e578063f2fde38b14610258576100e8565b80638da5cb5b1461019657806393c30c0f146101b4578063a2177124146101e4576100e8565b80633a20c2f0116100c65780633a20c2f01461014657806348c54b9d1461016457806358a0bde31461016e578063715018a61461018c576100e8565b8063248ec326146100ec57806326b711631461010a5780632895f1c114610128575b5f5ffd5b6100f4610274565b6040516101019190610dcd565b60405180910390f35b610112610282565b60405161011f9190610dcd565b60405180910390f35b61013061032e565b60405161013d9190610dcd565b60405180910390f35b61014e610339565b60405161015b9190610dcd565b60405180910390f35b61016c61033f565b005b610176610674565b6040516101839190610e60565b60405180910390f35b610194610699565b005b61019e6106ac565b6040516101ab9190610e99565b60405180910390f35b6101ce60048036038101906101c99190610ee0565b6106d3565b6040516101db9190610dcd565b60405180910390f35b6101ec610727565b6040516101f99190610dcd565b60405180910390f35b61021c60048036038101906102179190610f35565b61072d565b005b61023860048036038101906102339190610ee0565b610826565b6040516102459190610dcd565b60405180910390f35b61025661083b565b005b610272600480360381019061026d9190610ee0565b6109ee565b005b69021e19e0c9bab240000081565b5f60045460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102e09190610e99565b602060405180830381865afa1580156102fb573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031f9190610f74565b6103299190610fcc565b905090565b66038d7ea4c6800081565b60045481565b610347610a72565b620151806005546103589190610fff565b421061036d575f600481905550426005819055505b66038d7ea4c680003373ffffffffffffffffffffffffffffffffffffffff163110156103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c5906110b2565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050620151808161041e9190610fff565b421015610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790611140565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104bb9190610e99565b602060405180830381865afa1580156104d6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104fa9190610f74565b90508069021e19e0c9bab24000006004546105159190610fff565b1115610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d906111ce565b60405180910390fd5b4260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555069021e19e0c9bab240000060045f8282546105b39190610fff565b925050819055506106103369021e19e0c9bab240000060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac19092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43069021e19e0c9bab24000006040516106609190610dcd565b60405180910390a25050610672610b40565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106a1610b49565b6106aa5f610bd0565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6201518060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546107209190610fff565b9050919050565b60055481565b610735610b49565b61073d610a72565b5f811161077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690611236565b60405180910390fd5b6107cd33308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c91909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8a609374befb6b58cb150d9bd9aafa56b72315f38a284e3c21c69827fe7102b9826040516108139190610dcd565b60405180910390a2610823610b40565b50565b6003602052805f5260405f205f915090505481565b610843610b49565b61084b610a72565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108a69190610e99565b602060405180830381865afa1580156108c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e59190610f74565b90505f600454826108f69190610fcc565b90505f811161093a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109319061129e565b60405180910390fd5b61098d6109456106ac565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ac19092919063ffffffff16565b6109956106ac565b73ffffffffffffffffffffffffffffffffffffffff167f9bdedcc968f2c0682145c20289dfbb3081a39684571116ab45eabfef512e9473826040516109da9190610dcd565b60405180910390a250506109ec610b40565b565b6109f6610b49565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a66575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a5d9190610e99565b60405180910390fd5b610a6f81610bd0565b50565b600260015403610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611306565b60405180910390fd5b6002600181905550565b610b3b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610af4929190611324565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d13565b505050565b60018081905550565b610b51610dae565b73ffffffffffffffffffffffffffffffffffffffff16610b6f6106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610bce57610b92610dae565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bc59190610e99565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610d0d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610cc69392919061134b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d13565b50505050565b5f5f60205f8451602086015f885af180610d32576040513d5f823e3d81fd5b3d92505f519150505f8214610d4b576001811415610d66565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610da857836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610d9f9190610e99565b60405180910390fd5b50505050565b5f33905090565b5f819050919050565b610dc781610db5565b82525050565b5f602082019050610de05f830184610dbe565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610e28610e23610e1e84610de6565b610e05565b610de6565b9050919050565b5f610e3982610e0e565b9050919050565b5f610e4a82610e2f565b9050919050565b610e5a81610e40565b82525050565b5f602082019050610e735f830184610e51565b92915050565b5f610e8382610de6565b9050919050565b610e9381610e79565b82525050565b5f602082019050610eac5f830184610e8a565b92915050565b5f5ffd5b610ebf81610e79565b8114610ec9575f5ffd5b50565b5f81359050610eda81610eb6565b92915050565b5f60208284031215610ef557610ef4610eb2565b5b5f610f0284828501610ecc565b91505092915050565b610f1481610db5565b8114610f1e575f5ffd5b50565b5f81359050610f2f81610f0b565b92915050565b5f60208284031215610f4a57610f49610eb2565b5b5f610f5784828501610f21565b91505092915050565b5f81519050610f6e81610f0b565b92915050565b5f60208284031215610f8957610f88610eb2565b5b5f610f9684828501610f60565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fd682610db5565b9150610fe183610db5565b9250828203905081811115610ff957610ff8610f9f565b5b92915050565b5f61100982610db5565b915061101483610db5565b925082820190508082111561102c5761102b610f9f565b5b92915050565b5f82825260208201905092915050565b7f4d696e696d756d20302e303031204554482062616c616e6365207265717569725f8201527f656420746f20636c61696d000000000000000000000000000000000000000000602082015250565b5f61109c602b83611032565b91506110a782611042565b604082019050919050565b5f6020820190508181035f8301526110c981611090565b9050919050565b7f596f752063616e206f6e6c7920636c61696d206f6e63652065766572792032345f8201527f20686f7572730000000000000000000000000000000000000000000000000000602082015250565b5f61112a602683611032565b9150611135826110d0565b604082019050919050565b5f6020820190508181035f8301526111578161111e565b9050919050565b7f46617563657420697320656d70747920666f7220746f6461792e20506c6561735f8201527f65207761697420666f72206120726566696c6c2e000000000000000000000000602082015250565b5f6111b8603483611032565b91506111c38261115e565b604082019050919050565b5f6020820190508181035f8301526111e5816111ac565b9050919050565b7f5a65726f20616d6f756e74206e6f7420616c6c6f7765640000000000000000005f82015250565b5f611220601783611032565b915061122b826111ec565b602082019050919050565b5f6020820190508181035f83015261124d81611214565b9050919050565b7f4e6f2065786365737320746f6b656e7320746f207769746864726177000000005f82015250565b5f611288601c83611032565b915061129382611254565b602082019050919050565b5f6020820190508181035f8301526112b58161127c565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6112f0601f83611032565b91506112fb826112bc565b602082019050919050565b5f6020820190508181035f83015261131d816112e4565b9050919050565b5f6040820190506113375f830185610e8a565b6113446020830184610dbe565b9392505050565b5f60608201905061135e5f830186610e8a565b61136b6020830185610e8a565b6113786040830184610dbe565b94935050505056fea2646970667358221220e5b846dd09585f4886943a0dbf0b1399f531f1c8a2bfb57391b25a178bd6def964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA6E340C6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA6E340C6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xB77CF9C6 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xC264A063 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x258 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x93C30C0F EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xA2177124 EQ PUSH2 0x1E4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3A20C2F0 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x3A20C2F0 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x58A0BDE3 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x248EC326 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x26B71163 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x2895F1C1 EQ PUSH2 0x128 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xF35 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST STOP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x329 SWAP2 SWAP1 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x347 PUSH2 0xA72 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x5 SLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST TIMESTAMP LT PUSH2 0x36D JUMPI PUSH0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH7 0x38D7EA4C68000 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C5 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH3 0x15180 DUP2 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x457 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP DUP1 PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x4 SLOAD PUSH2 0x515 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST GT ISZERO PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x610 CALLER PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x40 MLOAD PUSH2 0x660 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x672 PUSH2 0xB40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x6AA PUSH0 PUSH2 0xBD0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0x15180 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x735 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x73D PUSH2 0xA72 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP1 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CD CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC91 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A609374BEFB6B58CB150D9BD9AAFA56B72315F38A284E3C21C69827FE7102B9 DUP3 PUSH1 0x40 MLOAD PUSH2 0x813 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x823 PUSH2 0xB40 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x843 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x84B PUSH2 0xA72 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xFCC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x931 SWAP1 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x98D PUSH2 0x945 PUSH2 0x6AC JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAC1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x995 PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9BDEDCC968F2C0682145C20289DFBB3081A39684571116AB45EABFEF512E9473 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x9EC PUSH2 0xB40 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0xB49 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA66 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP2 PUSH2 0xBD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB3B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB51 PUSH2 0xDAE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6F PUSH2 0x6AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCE JUMPI PUSH2 0xB92 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD0D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD13 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD4B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD66 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xDA8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xDB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE0 PUSH0 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE28 PUSH2 0xE23 PUSH2 0xE1E DUP5 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE39 DUP3 PUSH2 0xE0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4A DUP3 PUSH2 0xE2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0xE40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE73 PUSH0 DUP4 ADD DUP5 PUSH2 0xE51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE83 DUP3 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE93 DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH0 DUP4 ADD DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEBF DUP2 PUSH2 0xE79 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEDA DUP2 PUSH2 0xEB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF5 JUMPI PUSH2 0xEF4 PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF02 DUP5 DUP3 DUP6 ADD PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF14 DUP2 PUSH2 0xDB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF1E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF2F DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4A JUMPI PUSH2 0xF49 PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF57 DUP5 DUP3 DUP6 ADD PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF6E DUP2 PUSH2 0xF0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF89 JUMPI PUSH2 0xF88 PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF96 DUP5 DUP3 DUP6 ADD PUSH2 0xF60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFD6 DUP3 PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE1 DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH2 0xFF8 PUSH2 0xF9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1009 DUP3 PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1014 DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102B PUSH2 0xF9F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20302E303031204554482062616C616E636520726571756972 PUSH0 DUP3 ADD MSTORE PUSH32 0x656420746F20636C61696D000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109C PUSH1 0x2B DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A7 DUP3 PUSH2 0x1042 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C9 DUP2 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C7920636C61696D206F6E6365206576657279203234 PUSH0 DUP3 ADD MSTORE PUSH32 0x20686F7572730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112A PUSH1 0x26 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x1135 DUP3 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1157 DUP2 PUSH2 0x111E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46617563657420697320656D70747920666F7220746F6461792E20506C656173 PUSH0 DUP3 ADD MSTORE PUSH32 0x65207761697420666F72206120726566696C6C2E000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B8 PUSH1 0x34 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C3 DUP3 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11E5 DUP2 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74206E6F7420616C6C6F776564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1220 PUSH1 0x17 DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x122B DUP3 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x124D DUP2 PUSH2 0x1214 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2065786365737320746F6B656E7320746F20776974686472617700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1288 PUSH1 0x1C DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x1293 DUP3 PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12B5 DUP2 PUSH2 0x127C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F0 PUSH1 0x1F DUP4 PUSH2 0x1032 JUMP JUMPDEST SWAP2 POP PUSH2 0x12FB DUP3 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x131D DUP2 PUSH2 0x12E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1337 PUSH0 DUP4 ADD DUP6 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x1344 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x135E PUSH0 DUP4 ADD DUP7 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x136B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x1378 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPF 0xB846 0xDD MULMOD PC PUSH0 BASEFEE DUP7 SWAP5 GASPRICE 0xD 0xBF SIGNEXTEND SGT SWAP10 CREATE2 BALANCE CALL 0xC8 LOG2 0xBF 0xB5 PUSH20 0x91B25A178BD6DEF964736F6C634300081E003300 ",
							"sourceMap": "413:3567:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3649:137;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;608:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1546:1182;;;:::i;:::-;;500:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3854:124:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;773:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2809:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;688:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3178:398;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;529:51:9;567:13;529:51;:::o;3649:137::-;3706:7;3769:10;;3732:9;;;;;;;;;;;:19;;;3760:4;3732:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;3725:54;;3649:137;:::o;608:53::-;650:11;608:53;:::o;742:25::-;;;;:::o;1546:1182::-;2261:21:4;:19;:21::i;:::-;1683:6:9::1;1667:13;;:22;;;;:::i;:::-;1648:15;:41;1644:131;;1718:1;1705:10;:14;;;;1749:15;1733:13;:31;;;;1644:131;650:11;1854:10;1846:27;;;:46;;1825:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;2005:21;2029:13;:25;2043:10;2029:25;;;;;;;;;;;;;;;;2005:49;;2120:6;2104:13;:22;;;;:::i;:::-;2085:15;:41;;2064:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;2243:22;2268:9;;;;;;;;;;;:19;;;2296:4;2268:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2243:59;;2361:14;567:13;2333:10;;:24;;;;:::i;:::-;:42;;2312:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;2532:15;2504:13;:25;2518:10;2504:25;;;;;;;;;;;;;;;:43;;;;567:13;2557:10;;:25;;;;;;;:::i;:::-;;;;;;;;2620:47;2643:10;567:13;2620:9;;;;;;;;;;;:22;;;;:47;;;;;:::i;:::-;2697:10;2683:38;;;567:13;2683:38;;;;;;:::i;:::-;;;;;;;;1591:1137;;2303:20:4::0;:18;:20::i;:::-;1546:1182:9:o;500:23::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3854:124:9:-;3917:7;3965:6;3943:13;:19;3957:4;3943:19;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;3936:35;;3854:124;;;:::o;773:28::-;;;;:::o;2809:296::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;2906:1:9::2;2897:6;:10;2889:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2987:61;3014:10;3034:4;3041:6;2987:9;;;;;;;;;;;:26;;;;:61;;;;;;:::i;:::-;3079:10;3064:34;;;3091:6;3064:34;;;;;;:::i;:::-;;;;;;;;2303:20:4::1;:18;:20::i;:::-;2809:296:9::0;:::o;688:48::-;;;;;;;;;;;;;;;;;:::o;3178:398::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;3246:22:9::2;3271:9;;;;;;;;;;;:19;;;3299:4;3271:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3246:59;;3315:27;3362:10;;3345:14;:27;;;;:::i;:::-;3315:57;;3412:1;3390:19;:23;3382:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3457:52;3480:7;:5;:7::i;:::-;3489:19;3457:9;;;;;;;;;;;:22;;;;:52;;;;;:::i;:::-;3540:7;:5;:7::i;:::-;3524:45;;;3549:19;3524:45;;;;;;:::i;:::-;;;;;;;;3236:340;;2303:20:4::1;:18;:20::i;:::-;3178:398:9:o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:140::-;984:9;1017:37;1048:5;1017:37;:::i;:::-;1004:50;;920:140;;;:::o;1066:159::-;1167:51;1212:5;1167:51;:::i;:::-;1162:3;1155:64;1066:159;;:::o;1231:250::-;1338:4;1376:2;1365:9;1361:18;1353:26;;1389:85;1471:1;1460:9;1456:17;1447:6;1389:85;:::i;:::-;1231:250;;;;:::o;1487:96::-;1524:7;1553:24;1571:5;1553:24;:::i;:::-;1542:35;;1487:96;;;:::o;1589:118::-;1676:24;1694:5;1676:24;:::i;:::-;1671:3;1664:37;1589:118;;:::o;1713:222::-;1806:4;1844:2;1833:9;1829:18;1821:26;;1857:71;1925:1;1914:9;1910:17;1901:6;1857:71;:::i;:::-;1713:222;;;;:::o;2022:117::-;2131:1;2128;2121:12;2268:122;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:329::-;2600:6;2649:2;2637:9;2628:7;2624:23;2620:32;2617:119;;;2655:79;;:::i;:::-;2617:119;2775:1;2800:53;2845:7;2836:6;2825:9;2821:22;2800:53;:::i;:::-;2790:63;;2746:117;2541:329;;;;:::o;2876:122::-;2949:24;2967:5;2949:24;:::i;:::-;2942:5;2939:35;2929:63;;2988:1;2985;2978:12;2929:63;2876:122;:::o;3004:139::-;3050:5;3088:6;3075:20;3066:29;;3104:33;3131:5;3104:33;:::i;:::-;3004:139;;;;:::o;3149:329::-;3208:6;3257:2;3245:9;3236:7;3232:23;3228:32;3225:119;;;3263:79;;:::i;:::-;3225:119;3383:1;3408:53;3453:7;3444:6;3433:9;3429:22;3408:53;:::i;:::-;3398:63;;3354:117;3149:329;;;;:::o;3484:143::-;3541:5;3572:6;3566:13;3557:22;;3588:33;3615:5;3588:33;:::i;:::-;3484:143;;;;:::o;3633:351::-;3703:6;3752:2;3740:9;3731:7;3727:23;3723:32;3720:119;;;3758:79;;:::i;:::-;3720:119;3878:1;3903:64;3959:7;3950:6;3939:9;3935:22;3903:64;:::i;:::-;3893:74;;3849:128;3633:351;;;;:::o;3990:180::-;4038:77;4035:1;4028:88;4135:4;4132:1;4125:15;4159:4;4156:1;4149:15;4176:194;4216:4;4236:20;4254:1;4236:20;:::i;:::-;4231:25;;4270:20;4288:1;4270:20;:::i;:::-;4265:25;;4314:1;4311;4307:9;4299:17;;4338:1;4332:4;4329:11;4326:37;;;4343:18;;:::i;:::-;4326:37;4176:194;;;;:::o;4376:191::-;4416:3;4435:20;4453:1;4435:20;:::i;:::-;4430:25;;4469:20;4487:1;4469:20;:::i;:::-;4464:25;;4512:1;4509;4505:9;4498:16;;4533:3;4530:1;4527:10;4524:36;;;4540:18;;:::i;:::-;4524:36;4376:191;;;;:::o;4573:169::-;4657:11;4691:6;4686:3;4679:19;4731:4;4726:3;4722:14;4707:29;;4573:169;;;;:::o;4748:230::-;4888:34;4884:1;4876:6;4872:14;4865:58;4957:13;4952:2;4944:6;4940:15;4933:38;4748:230;:::o;4984:366::-;5126:3;5147:67;5211:2;5206:3;5147:67;:::i;:::-;5140:74;;5223:93;5312:3;5223:93;:::i;:::-;5341:2;5336:3;5332:12;5325:19;;4984:366;;;:::o;5356:419::-;5522:4;5560:2;5549:9;5545:18;5537:26;;5609:9;5603:4;5599:20;5595:1;5584:9;5580:17;5573:47;5637:131;5763:4;5637:131;:::i;:::-;5629:139;;5356:419;;;:::o;5781:225::-;5921:34;5917:1;5909:6;5905:14;5898:58;5990:8;5985:2;5977:6;5973:15;5966:33;5781:225;:::o;6012:366::-;6154:3;6175:67;6239:2;6234:3;6175:67;:::i;:::-;6168:74;;6251:93;6340:3;6251:93;:::i;:::-;6369:2;6364:3;6360:12;6353:19;;6012:366;;;:::o;6384:419::-;6550:4;6588:2;6577:9;6573:18;6565:26;;6637:9;6631:4;6627:20;6623:1;6612:9;6608:17;6601:47;6665:131;6791:4;6665:131;:::i;:::-;6657:139;;6384:419;;;:::o;6809:239::-;6949:34;6945:1;6937:6;6933:14;6926:58;7018:22;7013:2;7005:6;7001:15;6994:47;6809:239;:::o;7054:366::-;7196:3;7217:67;7281:2;7276:3;7217:67;:::i;:::-;7210:74;;7293:93;7382:3;7293:93;:::i;:::-;7411:2;7406:3;7402:12;7395:19;;7054:366;;;:::o;7426:419::-;7592:4;7630:2;7619:9;7615:18;7607:26;;7679:9;7673:4;7669:20;7665:1;7654:9;7650:17;7643:47;7707:131;7833:4;7707:131;:::i;:::-;7699:139;;7426:419;;;:::o;7851:173::-;7991:25;7987:1;7979:6;7975:14;7968:49;7851:173;:::o;8030:366::-;8172:3;8193:67;8257:2;8252:3;8193:67;:::i;:::-;8186:74;;8269:93;8358:3;8269:93;:::i;:::-;8387:2;8382:3;8378:12;8371:19;;8030:366;;;:::o;8402:419::-;8568:4;8606:2;8595:9;8591:18;8583:26;;8655:9;8649:4;8645:20;8641:1;8630:9;8626:17;8619:47;8683:131;8809:4;8683:131;:::i;:::-;8675:139;;8402:419;;;:::o;8827:178::-;8967:30;8963:1;8955:6;8951:14;8944:54;8827:178;:::o;9011:366::-;9153:3;9174:67;9238:2;9233:3;9174:67;:::i;:::-;9167:74;;9250:93;9339:3;9250:93;:::i;:::-;9368:2;9363:3;9359:12;9352:19;;9011:366;;;:::o;9383:419::-;9549:4;9587:2;9576:9;9572:18;9564:26;;9636:9;9630:4;9626:20;9622:1;9611:9;9607:17;9600:47;9664:131;9790:4;9664:131;:::i;:::-;9656:139;;9383:419;;;:::o;9808:181::-;9948:33;9944:1;9936:6;9932:14;9925:57;9808:181;:::o;9995:366::-;10137:3;10158:67;10222:2;10217:3;10158:67;:::i;:::-;10151:74;;10234:93;10323:3;10234:93;:::i;:::-;10352:2;10347:3;10343:12;10336:19;;9995:366;;;:::o;10367:419::-;10533:4;10571:2;10560:9;10556:18;10548:26;;10620:9;10614:4;10610:20;10606:1;10595:9;10591:17;10584:47;10648:131;10774:4;10648:131;:::i;:::-;10640:139;;10367:419;;;:::o;10792:332::-;10913:4;10951:2;10940:9;10936:18;10928:26;;10964:71;11032:1;11021:9;11017:17;11008:6;10964:71;:::i;:::-;11045:72;11113:2;11102:9;11098:18;11089:6;11045:72;:::i;:::-;10792:332;;;;;:::o;11130:442::-;11279:4;11317:2;11306:9;11302:18;11294:26;;11330:71;11398:1;11387:9;11383:17;11374:6;11330:71;:::i;:::-;11411:72;11479:2;11468:9;11464:18;11455:6;11411:72;:::i;:::-;11493;11561:2;11550:9;11546:18;11537:6;11493:72;:::i;:::-;11130:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1009200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAILY_LIMIT()": "349",
								"MIN_ETH_BALANCE()": "393",
								"cafiToken()": "infinite",
								"claimTokens()": "infinite",
								"getNextClaimTime(address)": "infinite",
								"getRemainingDailyQuota()": "infinite",
								"lastClaimTime(address)": "2846",
								"lastResetTime()": "2492",
								"owner()": "2537",
								"refillFaucet(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"todayTotal()": "2448",
								"transferOwnership(address)": "infinite",
								"withdrawExcess()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1232,
									"end": 1458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1282,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1342,
									"end": 1343,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1320,
									"end": 1344,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1320,
									"end": 1330,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1320,
									"end": 1344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1320,
									"end": 1344,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1320,
									"end": 1344,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1312,
									"end": 1370,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1312,
									"end": 1370,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1399,
									"end": 1409,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1380,
									"end": 1389,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1410,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1451,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1433,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1420,
									"end": 1451,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1451,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 1451,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1232,
									"end": 1458,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1660,
									"end": 1679,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1710,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1703,
									"end": 1717,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1688,
									"end": 1717,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1554,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1892,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1865,
									"end": 1866,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1893,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1729,
									"end": 1900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2048,
									"end": 2051,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2133,
									"end": 2135,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2128,
									"end": 2131,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2069,
									"end": 2136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2069,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2136,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2136,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2234,
									"end": 2237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2145,
									"end": 2238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2145,
									"end": 2238,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2263,
									"end": 2265,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2258,
									"end": 2261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2254,
									"end": 2266,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2448,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2484,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2471,
									"end": 2480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2540,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2529,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2521,
									"end": 2541,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2502,
									"end": 2519,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2542,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2685,
									"end": 2689,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2559,
									"end": 2690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2559,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2551,
									"end": 2690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 3980,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5b846dd09585f4886943a0dbf0b1399f531f1c8a2bfb57391b25a178bd6def964736f6c634300081e0033",
									".code": [
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "A6E340C6"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "A6E340C6"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "B77CF9C6"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "C264A063"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "93C30C0F"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "A2177124"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "3A20C2F0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "3A20C2F0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "48C54B9D"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "58A0BDE3"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "248EC326"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "26B71163"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "2895F1C1"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 3980,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 529,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3649,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3649,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 608,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 608,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 742,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 742,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1546,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 500,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 500,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3854,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3854,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3854,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 773,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 773,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2809,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2809,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 688,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 688,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 688,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3178,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 567,
											"end": 580,
											"name": "PUSH",
											"source": 9,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 529,
											"end": 580,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 529,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3779,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3769,
											"end": 3779,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3760,
											"end": 3764,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3732,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3732,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3732,
											"end": 3779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3732,
											"end": 3779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3779,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3732,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 650,
											"end": 661,
											"name": "PUSH",
											"source": 9,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 608,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 608,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 767,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 742,
											"end": 767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1546,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 1667,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1667,
											"end": 1680,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1667,
											"end": 1689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1667,
											"end": 1689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1667,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1663,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1644,
											"end": 1775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1644,
											"end": 1775,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 1719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1719,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1764,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1733,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1764,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1764,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1644,
											"end": 1775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1644,
											"end": 1775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 650,
											"end": 661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 1854,
											"end": 1864,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1873,
											"modifierDepth": 1,
											"name": "BALANCE",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1892,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1825,
											"end": 1961,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1825,
											"end": 1961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2053,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 2104,
											"end": 2117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2104,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2104,
											"end": 2126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2104,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2100,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2126,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2064,
											"end": 2190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2064,
											"end": 2190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 2296,
											"end": 2300,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2268,
											"end": 2302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2268,
											"end": 2302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2268,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 2333,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2333,
											"end": 2343,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2333,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2333,
											"end": 2357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2333,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2375,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2312,
											"end": 2453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2312,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2547,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2528,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2529,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 2557,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2557,
											"end": 2582,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2643,
											"end": 2653,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 567,
											"end": 580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2620,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2620,
											"end": 2667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2707,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430"
										},
										{
											"begin": 567,
											"end": 580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2683,
											"end": 2721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2721,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 2728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 2728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 523,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 500,
											"end": 523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 3943,
											"end": 3956,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3962,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3943,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3936,
											"end": 3971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3936,
											"end": 3971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 773,
											"end": 801,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 773,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2907,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2889,
											"end": 2935,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2889,
											"end": 2935,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3014,
											"end": 3024,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3038,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3047,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 2996,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3013,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3013,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3013,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2987,
											"end": 3013,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2987,
											"end": 3048,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3079,
											"end": 3089,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8A609374BEFB6B58CB150D9BD9AAFA56B72315F38A284E3C21C69827FE7102B9"
										},
										{
											"begin": 3091,
											"end": 3097,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3064,
											"end": 3098,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3098,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 3105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3178,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3246,
											"end": 3268,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3280,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3290,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3299,
											"end": 3303,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3271,
											"end": 3305,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3271,
											"end": 3305,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3271,
											"end": 3305,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3305,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3305,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3342,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3372,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3362,
											"end": 3372,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3359,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3372,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3345,
											"end": 3372,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3372,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3372,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3345,
											"end": 3372,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3372,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3345,
											"end": 3372,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3372,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3409,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3413,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3382,
											"end": 3446,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3382,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3480,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3480,
											"end": 3485,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3480,
											"end": 3487,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3480,
											"end": 3487,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3480,
											"end": 3487,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3489,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3466,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3479,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3457,
											"end": 3479,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3457,
											"end": 3509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3547,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3540,
											"end": 3545,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3540,
											"end": 3547,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3547,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3540,
											"end": 3547,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9BDEDCC968F2C0682145C20289DFBB3081A39684571116AB45EABFEF512E9473"
										},
										{
											"begin": 3549,
											"end": 3568,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3524,
											"end": 3569,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3524,
											"end": 3569,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3576,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3576,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 723,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 871,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 1017,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 1167,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 1389,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1583,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1487,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1571,
											"end": 1576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1553,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1577,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1553,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1707,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1589,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1676,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1935,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1713,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1846,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1829,
											"end": 1847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 1857,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2139,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2022,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2652,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 2655,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2845,
											"end": 2852,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 2800,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2967,
											"end": 2972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2949,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2942,
											"end": 2947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2974,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3104,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3263,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3408,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3588,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3755,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3758,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3959,
											"end": 3966,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 3957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3903,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3849,
											"end": 3977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4170,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3990,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4038,
											"end": 4115,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4139,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4125,
											"end": 4140,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4370,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4176,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4236,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4256,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4236,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4256,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4256,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4288,
											"end": 4289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4270,
											"end": 4290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4314,
											"end": 4315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4316,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4299,
											"end": 4316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4299,
											"end": 4316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 4340,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4343,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4326,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4370,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4370,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4176,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4567,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 4376,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4453,
											"end": 4454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4435,
											"end": 4455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4455,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 4435,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4455,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4469,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4489,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 4469,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4505,
											"end": 4514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 4536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4537,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4560,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4524,
											"end": 4560,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4540,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4540,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4560,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4524,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4567,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4567,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4742,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4573,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4657,
											"end": 4668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4726,
											"end": 4729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 4978,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4748,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4922,
											"name": "PUSH",
											"source": 10,
											"value": "4D696E696D756D20302E303031204554482062616C616E636520726571756972"
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4970,
											"name": "PUSH",
											"source": 10,
											"value": "656420746F20636C61696D000000000000000000000000000000000000000000"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 4950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 4955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4971,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 4978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4748,
											"end": 4978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5126,
											"end": 5129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 5206,
											"end": 5209,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5147,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5147,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5214,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5312,
											"end": 5315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5223,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5223,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5609,
											"end": 5618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5763,
											"end": 5767,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5637,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5637,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5356,
											"end": 5775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5356,
											"end": 5775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 6006,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5781,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 10,
											"value": "596F752063616E206F6E6C7920636C61696D206F6E6365206576657279203234"
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "PUSH",
											"source": 10,
											"value": "20686F7572730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5985,
											"end": 5987,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 6006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 6006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6378,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 6012,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6154,
											"end": 6157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6239,
											"end": 6241,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6234,
											"end": 6237,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6175,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6242,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6175,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6340,
											"end": 6343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6251,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6344,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6251,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6360,
											"end": 6372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6803,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 6384,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6588,
											"end": 6590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6647,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6608,
											"end": 6625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6648,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6791,
											"end": 6795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 6665,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6796,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6665,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6657,
											"end": 6796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6657,
											"end": 6796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6803,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 7048,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6809,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 6983,
											"name": "PUSH",
											"source": 10,
											"value": "46617563657420697320656D70747920666F7220746F6461792E20506C656173"
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6937,
											"end": 6943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6926,
											"end": 6984,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7040,
											"name": "PUSH",
											"source": 10,
											"value": "65207761697420666F72206120726566696C6C2E000000000000000000000000"
										},
										{
											"begin": 7013,
											"end": 7015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6994,
											"end": 7041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 7048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 7048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7420,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7054,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7196,
											"end": 7199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7276,
											"end": 7279,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7217,
											"end": 7284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7284,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7217,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7382,
											"end": 7385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 7293,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7293,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7402,
											"end": 7414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7395,
											"end": 7414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7395,
											"end": 7414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7845,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 7426,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7630,
											"end": 7632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7633,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7679,
											"end": 7688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 7689,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7663,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7833,
											"end": 7837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7707,
											"end": 7838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7838,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 7707,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7838,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 8024,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7851,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "5A65726F20616D6F756E74206E6F7420616C6C6F776564000000000000000000"
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 7989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 8017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 8024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 8024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8396,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8030,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8172,
											"end": 8175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 8257,
											"end": 8259,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 8193,
											"end": 8260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8260,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 8193,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8186,
											"end": 8260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8186,
											"end": 8260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 8269,
											"end": 8362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 8362,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8269,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8389,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8382,
											"end": 8385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8378,
											"end": 8390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8821,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8402,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8583,
											"end": 8609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8583,
											"end": 8609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8655,
											"end": 8664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8649,
											"end": 8653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8645,
											"end": 8665,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8630,
											"end": 8639,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8626,
											"end": 8643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8809,
											"end": 8813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 8683,
											"end": 8814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8814,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8683,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 9005,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 8827,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8967,
											"end": 8997,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2065786365737320746F6B656E7320746F20776974686472617700000000"
										},
										{
											"begin": 8963,
											"end": 8964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8951,
											"end": 8965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8998,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 9005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 9005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9377,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 9011,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9238,
											"end": 9240,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 9233,
											"end": 9236,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 9174,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9241,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9174,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9167,
											"end": 9241,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9167,
											"end": 9241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 9339,
											"end": 9342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 9250,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 9250,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9368,
											"end": 9370,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9363,
											"end": 9366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9359,
											"end": 9371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9576,
											"end": 9585,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9564,
											"end": 9590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9564,
											"end": 9590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9626,
											"end": 9646,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9622,
											"end": 9623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9607,
											"end": 9624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9600,
											"end": 9647,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9790,
											"end": 9794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 9664,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9664,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9989,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 9808,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9948,
											"end": 9981,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9932,
											"end": 9946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9982,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10361,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 9995,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 10140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10222,
											"end": 10224,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10217,
											"end": 10220,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10158,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 10158,
											"end": 10225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10158,
											"end": 10225,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10158,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10323,
											"end": 10326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 10234,
											"end": 10327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10327,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10234,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10352,
											"end": 10354,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10343,
											"end": 10355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9995,
											"end": 10361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10786,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 10367,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10533,
											"end": 10537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10573,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10560,
											"end": 10569,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10556,
											"end": 10574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10620,
											"end": 10629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10630,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10606,
											"end": 10607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10595,
											"end": 10604,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10591,
											"end": 10608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10584,
											"end": 10631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10774,
											"end": 10778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 10648,
											"end": 10779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10648,
											"end": 10779,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10648,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10367,
											"end": 10786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10913,
											"end": 10917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10951,
											"end": 10953,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10940,
											"end": 10949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10928,
											"end": 10954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10928,
											"end": 10954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 11032,
											"end": 11033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11017,
											"end": 11034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11008,
											"end": 11014,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 10964,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10964,
											"end": 11035,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 10964,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 11113,
											"end": 11115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11102,
											"end": 11111,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11095,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 11045,
											"end": 11117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11117,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 11045,
											"end": 11117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 11124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11279,
											"end": 11283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11317,
											"end": 11319,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11306,
											"end": 11315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11294,
											"end": 11320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11294,
											"end": 11320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11330,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 11398,
											"end": 11399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11387,
											"end": 11396,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11383,
											"end": 11400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11374,
											"end": 11380,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11330,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11330,
											"end": 11401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11330,
											"end": 11401,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 11330,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11479,
											"end": 11481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11468,
											"end": 11477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11464,
											"end": 11482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11455,
											"end": 11461,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11411,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11483,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11411,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11493,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11561,
											"end": 11563,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11550,
											"end": 11559,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11546,
											"end": 11564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11537,
											"end": 11543,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11493,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 11493,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11493,
											"end": 11565,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11493,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11130,
											"end": 11572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Cafi_Faucet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAILY_LIMIT()": "248ec326",
							"MIN_ETH_BALANCE()": "2895f1c1",
							"cafiToken()": "58a0bde3",
							"claimTokens()": "48c54b9d",
							"getNextClaimTime(address)": "93c30c0f",
							"getRemainingDailyQuota()": "26b71163",
							"lastClaimTime(address)": "b77cf9c6",
							"lastResetTime()": "a2177124",
							"owner()": "8da5cb5b",
							"refillFaucet(uint256)": "a6e340c6",
							"renounceOwnership()": "715018a6",
							"todayTotal()": "3a20c2f0",
							"transferOwnership(address)": "f2fde38b",
							"withdrawExcess()": "c264a063"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cafiToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExcessWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FaucetRefilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAILY_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_ETH_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cafiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingDailyQuota\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastResetTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refillFaucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"todayTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawExcess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Faucet for distributing CAFi tokens with daily limit and anti-bot protection.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CAFiFaucet\",\"version\":1},\"userdoc\":{\"events\":{\"ExcessWithdrawn(address,uint256)\":{\"notice\":\"Emitted when owner withdraws excess tokens\"},\"FaucetRefilled(address,uint256)\":{\"notice\":\"Emitted when owner refills the faucet\"},\"TokensClaimed(address,uint256)\":{\"notice\":\"Emitted when user claims tokens from the faucet\"}},\"kind\":\"user\",\"methods\":{\"claimTokens()\":{\"notice\":\"Claim tokens from the faucet (once every 24 hours)\"},\"getNextClaimTime(address)\":{\"notice\":\"Get next claim time for a user\"},\"getRemainingDailyQuota()\":{\"notice\":\"Get remaining daily quota in faucet\"},\"refillFaucet(uint256)\":{\"notice\":\"Refill faucet with CAFi tokens (owner only)\"},\"withdrawExcess()\":{\"notice\":\"Withdraw excess tokens (owner only)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cafi_Faucet.sol\":\"CAFiFaucet\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Cafi_Faucet.sol\":{\"keccak256\":\"0x2b48aed6eb7828cc130bf126eb25dafd43bc9f06d8bfe363621d186b3dfaa3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a34132acd7861c14b474966c4dc3934fb76fcdd6f25a1e61fa96a5ef38d6b13b\",\"dweb:/ipfs/QmWjbdVgGM86mjaFXbs2U7oAr6eUXv8MPXKaJUYfNoWV5T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Cafi_Faucet.sol:CAFiFaucet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "Cafi_Faucet.sol:CAFiFaucet",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 904,
								"contract": "Cafi_Faucet.sol:CAFiFaucet",
								"label": "cafiToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 916,
								"contract": "Cafi_Faucet.sol:CAFiFaucet",
								"label": "lastClaimTime",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 918,
								"contract": "Cafi_Faucet.sol:CAFiFaucet",
								"label": "todayTotal",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 920,
								"contract": "Cafi_Faucet.sol:CAFiFaucet",
								"label": "lastResetTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ExcessWithdrawn(address,uint256)": {
								"notice": "Emitted when owner withdraws excess tokens"
							},
							"FaucetRefilled(address,uint256)": {
								"notice": "Emitted when owner refills the faucet"
							},
							"TokensClaimed(address,uint256)": {
								"notice": "Emitted when user claims tokens from the faucet"
							}
						},
						"kind": "user",
						"methods": {
							"claimTokens()": {
								"notice": "Claim tokens from the faucet (once every 24 hours)"
							},
							"getNextClaimTime(address)": {
								"notice": "Get next claim time for a user"
							},
							"getRemainingDailyQuota()": {
								"notice": "Get remaining daily quota in faucet"
							},
							"refillFaucet(uint256)": {
								"notice": "Refill faucet with CAFi tokens (owner only)"
							},
							"withdrawExcess()": {
								"notice": "Withdraw excess tokens (owner only)"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 886,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"Cafi_Faucet.sol": {
				"ast": {
					"absolutePath": "Cafi_Faucet.sol",
					"exportedSymbols": {
						"CAFiFaucet": [
							1187
						],
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 381,
							"src": "58:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 845,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 148,
							"src": "181:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 303,
							"src": "234:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 894,
										"name": "Ownable",
										"nameLocations": [
											"436:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "436:7:9"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "436:7:9"
								},
								{
									"baseName": {
										"id": 896,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"445:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "445:15:9"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "445:15:9"
								}
							],
							"canonicalName": "CAFiFaucet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "298:114:9",
								"text": " @title CAFiFaucet\n @dev Faucet for distributing CAFi tokens with daily limit and anti-bot protection."
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								302,
								147,
								874
							],
							"name": "CAFiFaucet",
							"nameLocation": "422:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 898,
										"name": "SafeERC20",
										"nameLocations": [
											"473:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "473:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "467:27:9",
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"487:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "487:6:9"
										},
										"referencedDeclaration": 380,
										"src": "487:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "58a0bde3",
									"id": 904,
									"mutability": "mutable",
									"name": "cafiToken",
									"nameLocation": "514:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "500:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 903,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 902,
											"name": "IERC20",
											"nameLocations": [
												"500:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "500:6:9"
										},
										"referencedDeclaration": 380,
										"src": "500:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "248ec326",
									"id": 909,
									"mutability": "constant",
									"name": "DAILY_LIMIT",
									"nameLocation": "553:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "529:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 905,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"id": 908,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f303030",
											"id": 906,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "567:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 907,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "576:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "567:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2895f1c1",
									"id": 912,
									"mutability": "constant",
									"name": "MIN_ETH_BALANCE",
									"nameLocation": "632:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "608:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "608:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303031",
										"id": 911,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "650:11:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"value": "0.001"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b77cf9c6",
									"id": 916,
									"mutability": "mutable",
									"name": "lastClaimTime",
									"nameLocation": "723:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "688:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 915,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 913,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "696:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "688:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 914,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "707:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a20c2f0",
									"id": 918,
									"mutability": "mutable",
									"name": "todayTotal",
									"nameLocation": "757:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "742:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 917,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "742:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2177124",
									"id": 920,
									"mutability": "mutable",
									"name": "lastResetTime",
									"nameLocation": "788:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "773:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "808:74:9",
										"text": " @notice Emitted when user claims tokens from the faucet"
									},
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 927,
									"name": "TokensClaimed",
									"nameLocation": "893:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "923:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "907:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "942:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "934:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:43:9"
									},
									"src": "887:63:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "956:64:9",
										"text": " @notice Emitted when owner refills the faucet"
									},
									"eventSelector": "8a609374befb6b58cb150d9bd9aafa56b72315f38a284e3c21c69827fe7102b9",
									"id": 934,
									"name": "FaucetRefilled",
									"nameLocation": "1031:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1062:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1046:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1077:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1069:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:39:9"
									},
									"src": "1025:60:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1091:69:9",
										"text": " @notice Emitted when owner withdraws excess tokens"
									},
									"eventSelector": "9bdedcc968f2c0682145c20289dfbb3081a39684571116ab45eabfef512e9473",
									"id": 941,
									"name": "ExcessWithdrawn",
									"nameLocation": "1171:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1203:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "1187:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1218:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "1210:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:39:9"
									},
									"src": "1165:61:9"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "1302:156:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 953,
																"name": "_cafiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "1320:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1342:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1334:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1334:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1334:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1320:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1346:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 952,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1312:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1312:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "1312:58:9"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 962,
														"name": "cafiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "1380:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 964,
																"name": "_cafiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "1399:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 963,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1392:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1392:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1380:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1380:30:9"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "lastResetTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "1420:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 969,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1436:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1442:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1436:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1420:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "1420:31:9"
											}
										]
									},
									"id": 974,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 946,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1272:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1276:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1272:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 948,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 945,
												"name": "Ownable",
												"nameLocations": [
													"1264:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1264:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1264:19:9"
										},
										{
											"arguments": [],
											"id": 950,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 949,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"1284:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1284:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1284:17:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "_cafiToken",
												"nameLocation": "1252:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1244:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:20:9"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1302:0:9"
									},
									"scope": 1187,
									"src": "1232:226:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "1591:1137:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 980,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1648:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1654:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1648:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 982,
															"name": "lastResetTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "1667:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1683:6:9",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														},
														"src": "1667:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1648:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"nodeType": "IfStatement",
												"src": "1644:131:9",
												"trueBody": {
													"id": 995,
													"nodeType": "Block",
													"src": "1691:84:9",
													"statements": [
														{
															"expression": {
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 986,
																	"name": "todayTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "1705:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1718:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1705:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 989,
															"nodeType": "ExpressionStatement",
															"src": "1705:14:9"
														},
														{
															"expression": {
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 990,
																	"name": "lastResetTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "1733:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 991,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1749:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1755:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1749:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1733:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 994,
															"nodeType": "ExpressionStatement",
															"src": "1733:31:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1000,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1854:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1858:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1854:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1846:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 998,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1846:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1846:19:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1866:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1846:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1004,
																"name": "MIN_ETH_BALANCE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1877:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1846:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20302e303031204554482062616c616e636520726571756972656420746f20636c61696d",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b",
																"typeString": "literal_string \"Minimum 0.001 ETH balance required to claim\""
															},
															"value": "Minimum 0.001 ETH balance required to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4445bf8e8c89798e7efa44d8434667905baad60e385f9aadbb4ee5040f3d554b",
																"typeString": "literal_string \"Minimum 0.001 ETH balance required to claim\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1825:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1825:136:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "1825:136:9"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "userLastClaim",
														"nameLocation": "2013:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "2005:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1009,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2005:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"baseExpression": {
														"id": 1011,
														"name": "lastClaimTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2029:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1014,
													"indexExpression": {
														"expression": {
															"id": 1012,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2043:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2047:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2043:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2029:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2005:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1017,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2085:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2091:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2085:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1019,
																	"name": "userLastClaim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "2104:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2120:6:9",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "2104:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2085:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c7920636c61696d206f6e636520657665727920323420686f757273",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2140:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5",
																"typeString": "literal_string \"You can only claim once every 24 hours\""
															},
															"value": "You can only claim once every 24 hours"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_356d9b8315ee773d9fb3e537cad4d3c6417bfee40de8706d680fe6c79d5699a5",
																"typeString": "literal_string \"You can only claim once every 24 hours\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2064:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:126:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "2064:126:9"
											},
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "2251:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "2243:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2243:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1035,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1032,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2296:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																		"typeString": "contract CAFiFaucet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																		"typeString": "contract CAFiFaucet"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2288:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2288:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2288:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1028,
															"name": "cafiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "2268:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2278:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "2268:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2243:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1037,
																	"name": "todayTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "2333:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1038,
																	"name": "DAILY_LIMIT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2346:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2333:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1040,
																"name": "currentBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "2361:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2333:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46617563657420697320656d70747920666f7220746f6461792e20506c65617365207761697420666f72206120726566696c6c2e",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2389:54:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7",
																"typeString": "literal_string \"Faucet is empty for today. Please wait for a refill.\""
															},
															"value": "Faucet is empty for today. Please wait for a refill."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_969433a673ba0068ffa29a83f1da24171048ee3312ed77153ef1b11fb838fec7",
																"typeString": "literal_string \"Faucet is empty for today. Please wait for a refill.\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2312:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:141:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "2312:141:9"
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1045,
															"name": "lastClaimTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2504:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1048,
														"indexExpression": {
															"expression": {
																"id": 1046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2518:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2522:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2518:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2504:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1049,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2532:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2538:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2532:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2504:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "2504:43:9"
											},
											{
												"expression": {
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "todayTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2557:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1054,
														"name": "DAILY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2571:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2557:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "2557:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2643:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2647:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2643:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "DAILY_LIMIT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "2655:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1057,
															"name": "cafiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "2620:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2630:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "2620:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "2620:47:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2697:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2701:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2697:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "DAILY_LIMIT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "2709:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1065,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2683:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2683:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "2678:43:9"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "1464:77:9",
										"text": " @notice Claim tokens from the faucet (once every 24 hours)"
									},
									"functionSelector": "48c54b9d",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 978,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 977,
												"name": "nonReentrant",
												"nameLocations": [
													"1578:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "1578:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1578:12:9"
										}
									],
									"name": "claimTokens",
									"nameLocation": "1555:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:2:9"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:0:9"
									},
									"scope": 1187,
									"src": "1546:1182:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "2879:226:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "2897:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2906:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2897:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74206e6f7420616c6c6f776564",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2909:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32",
																"typeString": "literal_string \"Zero amount not allowed\""
															},
															"value": "Zero amount not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc05c79ed3da923196573855907721f2f36c46e4a008b2b6d0b9c61519f96d32",
																"typeString": "literal_string \"Zero amount not allowed\""
															}
														],
														"id": 1082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2889:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2889:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "2889:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3014:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3014:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1096,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3034:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																		"typeString": "contract CAFiFaucet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																		"typeString": "contract CAFiFaucet"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3026:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3026:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3026:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3041:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1089,
															"name": "cafiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "2987:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2997:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "2987:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2987:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "2987:61:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3079:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3083:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3079:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "3091:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1101,
														"name": "FaucetRefilled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3064:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "EmitStatement",
												"src": "3059:39:9"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "2734:70:9",
										"text": " @notice Refill faucet with CAFi tokens (owner only)"
									},
									"functionSelector": "a6e340c6",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1077,
												"name": "onlyOwner",
												"nameLocations": [
													"2856:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2856:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2856:9:9"
										},
										{
											"id": 1080,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1079,
												"name": "nonReentrant",
												"nameLocations": [
													"2866:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2866:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2866:12:9"
										}
									],
									"name": "refillFaucet",
									"nameLocation": "2818:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2839:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2831:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:16:9"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2879:0:9"
									},
									"scope": 1187,
									"src": "2809:296:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "3236:340:9",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "3254:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "3246:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3246:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1122,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3299:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																		"typeString": "contract CAFiFaucet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																		"typeString": "contract CAFiFaucet"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3291:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3291:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3291:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1118,
															"name": "cafiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3271:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3281:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "3271:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3246:59:9"
											},
											{
												"assignments": [
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "availableToWithdraw",
														"nameLocation": "3323:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "3315:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3315:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "3345:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1129,
														"name": "todayTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3362:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3345:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3315:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "availableToWithdraw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "3390:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3412:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3390:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2065786365737320746f6b656e7320746f207769746864726177",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3415:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6",
																"typeString": "literal_string \"No excess tokens to withdraw\""
															},
															"value": "No excess tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4c90e85d307850262761762b5e20bce4ac7e03622170509c09d2de96cd67bf6",
																"typeString": "literal_string \"No excess tokens to withdraw\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3382:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "3382:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1142,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3480:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3480:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "availableToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "3489:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1139,
															"name": "cafiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3457:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3467:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "3457:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3457:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "3457:52:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1148,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3540:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3540:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "availableToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "3549:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "ExcessWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "3524:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "EmitStatement",
												"src": "3519:50:9"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "3111:62:9",
										"text": " @notice Withdraw excess tokens (owner only)"
									},
									"functionSelector": "c264a063",
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1111,
												"name": "onlyOwner",
												"nameLocations": [
													"3213:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3213:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3213:9:9"
										},
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "nonReentrant",
												"nameLocations": [
													"3223:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3223:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3223:12:9"
										}
									],
									"name": "withdrawExcess",
									"nameLocation": "3187:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3201:2:9"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3236:0:9"
									},
									"scope": 1187,
									"src": "3178:398:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "3715:71:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1164,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3760:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																			"typeString": "contract CAFiFaucet"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CAFiFaucet_$1187",
																			"typeString": "contract CAFiFaucet"
																		}
																	],
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3752:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3752:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1160,
																"name": "cafiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "3732:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3742:9:9",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "3732:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3732:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1167,
														"name": "todayTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3769:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3732:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1169,
												"nodeType": "Return",
												"src": "3725:54:9"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "3582:62:9",
										"text": " @notice Get remaining daily quota in faucet"
									},
									"functionSelector": "26b71163",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainingDailyQuota",
									"nameLocation": "3658:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3680:2:9"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "3706:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3705:9:9"
									},
									"scope": 1187,
									"src": "3649:137:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "3926:52:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1179,
															"name": "lastClaimTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3943:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1181,
														"indexExpression": {
															"id": 1180,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "3957:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3943:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3965:6:9",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "3943:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1184,
												"nodeType": "Return",
												"src": "3936:35:9"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "3792:57:9",
										"text": " @notice Get next claim time for a user"
									},
									"functionSelector": "93c30c0f",
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextClaimTime",
									"nameLocation": "3863:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3888:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3880:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:14:9"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "3917:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3917:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:9:9"
									},
									"scope": 1187,
									"src": "3854:124:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1188,
							"src": "413:3567:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								927,
								934,
								941
							]
						}
					],
					"src": "32:3948:9"
				},
				"id": 9
			}
		}
	}
}