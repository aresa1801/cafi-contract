{
	"id": "6f1549726ac86dd3c55eff870618f168",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Farming.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title CAFIFarming\n * @dev Contract for farming rewards based on staking packages with adjustable APY.\n */\ncontract CAFIFarming is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Struct untuk paket farming\n    struct FarmPackage {\n        address stakeToken;     // Token yang diterima untuk staking\n        uint256 duration;       // Durasi staking (dalam detik)\n        uint256 apy;            // APY dalam basis points (e.g., 1500 = 15%)\n        uint256 minStake;      // Minimal jumlah staking\n        bool isActive;\n    }\n\n    // Struct untuk stake user\n    struct UserStake {\n        uint256 packageId;\n        uint256 amount;\n        uint256 startTime;\n        uint256 lastClaimTime;\n        bool isAutoFarming;\n    }\n\n    // Token contracts\n    IERC20 public immutable cafiToken;\n\n    // Paket farming\n    FarmPackage[] public farmPackages;\n\n    // Mapping user stakes\n    mapping(address => UserStake[]) public userStakes;\n\n    // Auto-farming pool\n    uint256 public autoFarmingPool;\n    uint256 public autoFarmingFee = 50; // 0.5%\n    address public treasuryWallet;\n\n    // Events\n    event Staked(address indexed user, uint256 packageId, uint256 amount);\n    event Unstaked(address indexed user, uint256 stakeIndex, uint256 amount, uint256 reward);\n    event RewardClaimed(address indexed user, uint256 stakeIndex, uint256 amount);\n    event AutoFarmingToggled(address indexed user, uint256 stakeIndex, bool status);\n    event PackageAdded(uint256 packageId, address stakeToken, uint256 duration, uint256 apy, uint256 minStake, bool isActive);\n    event PackageAPYUpdated(uint256 packageId, uint256 oldAPY, uint256 newAPY);\n    event FeeReceiverUpdated(address indexed newTreasury);\n\n    constructor(\n        address _cafiToken,\n        address _treasuryWallet,\n        address _initialOwner\n    ) Ownable(_initialOwner) ReentrancyGuard() {\n        require(_cafiToken != address(0), \"Invalid CAFI token\");\n        require(_treasuryWallet != address(0), \"Invalid treasury wallet\");\n\n        cafiToken = IERC20(_cafiToken);\n        treasuryWallet = _treasuryWallet;\n    }\n\n    /**\n     * @notice Proteksi tambahan: hanya EOA yang boleh memanggil fungsi ini\n     */\n    modifier onlyEOA() {\n        require(tx.origin == msg.sender, \"Only EOA can call\");\n        _;\n    }\n\n    /**\n     * @notice Stake token ke farming berdasarkan package ID\n     */\n    function stake(uint256 packageId, uint256 amount) external nonReentrant onlyEOA {\n        FarmPackage memory package = farmPackages[packageId];\n        require(package.isActive, \"Package not active\");\n        require(amount >= package.minStake, \"Amount too low\");\n\n        IERC20(package.stakeToken).safeTransferFrom(msg.sender, address(this), amount);\n\n        userStakes[msg.sender].push(UserStake({\n            packageId: packageId,\n            amount: amount,\n            startTime: block.timestamp,\n            lastClaimTime: block.timestamp,\n            isAutoFarming: false\n        }));\n\n        emit Staked(msg.sender, packageId, amount);\n    }\n\n    /**\n     * @notice Klaim reward dari farming\n     */\n    function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {\n        UserStake storage userStake = userStakes[msg.sender][stakeIndex];\n        require(userStake.amount > 0, \"No active stake\");\n\n        uint256 reward = calculateReward(msg.sender, stakeIndex);\n        require(reward > 0, \"No reward to claim\");\n\n        userStake.lastClaimTime = block.timestamp;\n\n        if (userStake.isAutoFarming) {\n            userStake.amount += reward;\n        } else {\n            cafiToken.safeTransfer(msg.sender, reward);\n        }\n\n        emit RewardClaimed(msg.sender, stakeIndex, reward);\n    }\n\n    /**\n     * @notice Withdraw stake + reward\n     */\n    function unstake(uint256 stakeIndex) external nonReentrant onlyEOA {\n        UserStake storage currentStake = userStakes[msg.sender][stakeIndex];\n        require(currentStake.amount > 0, \"No active stake\");\n\n        FarmPackage memory package = farmPackages[currentStake.packageId];\n        require(block.timestamp >= currentStake.startTime + package.duration, \"Still locked\");\n\n        uint256 reward = calculateReward(msg.sender, stakeIndex);\n        uint256 totalAmount = currentStake.amount;\n\n        delete userStakes[msg.sender][stakeIndex];\n\n        // Transfer stake token kembali\n        IERC20(package.stakeToken).safeTransfer(msg.sender, totalAmount);\n\n        // Transfer reward\n        if (reward > 0) {\n            cafiToken.safeTransfer(msg.sender, reward);\n        }\n\n        emit Unstaked(msg.sender, stakeIndex, totalAmount, reward);\n    }\n\n    /**\n     * @notice Toggle mode auto farming\n     */\n    function toggleAutoFarming(uint256 stakeIndex) external nonReentrant onlyEOA {\n        UserStake storage stakeData = userStakes[msg.sender][stakeIndex];\n        require(stakeData.amount > 0, \"No active stake\");\n\n        stakeData.isAutoFarming = !stakeData.isAutoFarming;\n        emit AutoFarmingToggled(msg.sender, stakeIndex, stakeData.isAutoFarming);\n    }\n\n    /**\n     * @notice Hitung reward\n     */\n    function calculateReward(address user, uint256 stakeIndex) public view returns (uint256) {\n        UserStake memory userStake = userStakes[user][stakeIndex];\n        if (userStake.amount == 0) return 0;\n\n        FarmPackage memory package = farmPackages[userStake.packageId];\n        uint256 timeStaked = block.timestamp - userStake.lastClaimTime;\n        uint256 rewardPerYear = (userStake.amount * package.apy) / 10000;\n        return (rewardPerYear * timeStaked) / 365 days;\n    }\n\n    /**\n     * @notice Tambahkan paket farming baru\n     */\n    function addFarmPackage(\n        address stakeToken,\n        uint256 duration,\n        uint256 apy,\n        uint256 minStake\n    ) external onlyOwner {\n        farmPackages.push(FarmPackage({\n            stakeToken: stakeToken,\n            duration: duration,\n            apy: apy,\n            minStake: minStake,\n            isActive: true\n        }));\n        emit PackageAdded(farmPackages.length - 1, stakeToken, duration, apy, minStake, true);\n    }\n\n    /**\n     * @notice Aktif/nonaktifkan paket farming\n     */\n    function toggleFarmPackage(uint256 packageId, bool isActive) external onlyOwner {\n        require(packageId < farmPackages.length, \"Invalid package ID\");\n        farmPackages[packageId].isActive = isActive;\n    }\n\n    /**\n     * @notice Atur ulang APY untuk paket tertentu\n     */\n    function setAPY(uint256 packageId, uint256 newAPY) external onlyOwner {\n        require(packageId < farmPackages.length, \"Invalid package ID\");\n        FarmPackage storage package = farmPackages[packageId];\n        uint256 oldAPY = package.apy;\n        package.apy = newAPY;\n\n        emit PackageAPYUpdated(packageId, oldAPY, newAPY);\n    }\n\n    /**\n     * @notice Set fee untuk auto farming\n     */\n    function setAutoFarmingFee(uint256 fee) external onlyOwner {\n        require(fee <= 1000, \"Max fee is 10%\");\n        autoFarmingFee = fee;\n    }\n\n    /**\n     * @notice Update wallet penerima fee\n     */\n    function setTreasuryWallet(address newWallet) external onlyOwner {\n        require(newWallet != address(0), \"Zero address not allowed\");\n        treasuryWallet = newWallet;\n        emit FeeReceiverUpdated(newWallet);\n    }\n\n    /**\n     * @notice Owner dapat menarik biaya auto farming\n     */\n    function withdrawFees() external onlyOwner {\n        uint256 amount = autoFarmingPool;\n        require(amount > 0, \"No fees to withdraw\");\n        autoFarmingPool = 0;\n        cafiToken.safeTransfer(treasuryWallet, amount);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Farming.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Farming.sol": {
				"CAFIFarming": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cafiToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "AutoFarmingToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "FeeReceiverUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldAPY",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "PackageAPYUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minStake",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "PackageAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minStake",
									"type": "uint256"
								}
							],
							"name": "addFarmPackage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoFarmingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoFarmingPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cafiToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "farmPackages",
							"outputs": [
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minStake",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "setAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "setAutoFarmingFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "setTreasuryWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "toggleAutoFarming",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "toggleFarmPackage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaimTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAutoFarming",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract for farming rewards based on staking packages with adjustable APY.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "CAFIFarming",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farming.sol\":412:7893  contract CAFIFarming is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"Farming.sol\":1354:1356  50 */\n  0x32\n    /* \"Farming.sol\":1322:1356  uint256 public autoFarmingFee = 50 */\n  0x05\n  sstore\n    /* \"Farming.sol\":2024:2405  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Farming.sol\":2142:2155  _initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Farming.sol\":2215:2216  0 */\n  0x00\n    /* \"Farming.sol\":2193:2217  _cafiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farming.sol\":2193:2203  _cafiToken */\n  dup4\n    /* \"Farming.sol\":2193:2217  _cafiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Farming.sol\":2185:2240  require(_cafiToken != address(0), \"Invalid CAFI token\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"Farming.sol\":2285:2286  0 */\n  0x00\n    /* \"Farming.sol\":2258:2287  _treasuryWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farming.sol\":2258:2273  _treasuryWallet */\n  dup3\n    /* \"Farming.sol\":2258:2287  _treasuryWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Farming.sol\":2250:2315  require(_treasuryWallet != address(0), \"Invalid treasury wallet\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"Farming.sol\":2345:2355  _cafiToken */\n  dup3\n    /* \"Farming.sol\":2326:2356  cafiToken = IERC20(_cafiToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Farming.sol\":2383:2398  _treasuryWallet */\n  dup2\n    /* \"Farming.sol\":2366:2380  treasuryWallet */\n  0x06\n  0x00\n    /* \"Farming.sol\":2366:2398  treasuryWallet = _treasuryWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farming.sol\":2024:2405  constructor(... */\n  pop\n  pop\n  pop\n    /* \"Farming.sol\":412:7893  contract CAFIFarming is Ownable, ReentrancyGuard {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_27:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_42\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_28:\n    /* \"#utility.yul\":641:665   */\n  tag_44\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_27\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_45:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_29:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_47\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_28\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  0x00\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_50\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":966:1085   */\ntag_49:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_51\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_29\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_52\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_29\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_53\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_29\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_30:\n    /* \"#utility.yul\":1601:1625   */\n  tag_55\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_27\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_10:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_57\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1866:2035   */\ntag_31:\n    /* \"#utility.yul\":1950:1961   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  dup3\n    /* \"#utility.yul\":1979:1982   */\n  dup3\n    /* \"#utility.yul\":1972:1991   */\n  mstore\n    /* \"#utility.yul\":2024:2028   */\n  0x20\n    /* \"#utility.yul\":2019:2022   */\n  dup3\n    /* \"#utility.yul\":2015:2029   */\n  add\n    /* \"#utility.yul\":2000:2029   */\n  swap1\n  pop\n    /* \"#utility.yul\":1866:2035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2041:2209   */\ntag_32:\n    /* \"#utility.yul\":2181:2201   */\n  0x496e76616c6964204341464920746f6b656e0000000000000000000000000000\n    /* \"#utility.yul\":2177:2178   */\n  0x00\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2165:2179   */\n  add\n    /* \"#utility.yul\":2158:2202   */\n  mstore\n    /* \"#utility.yul\":2041:2209   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2215:2581   */\ntag_33:\n    /* \"#utility.yul\":2357:2360   */\n  0x00\n    /* \"#utility.yul\":2378:2445   */\n  tag_61\n    /* \"#utility.yul\":2442:2444   */\n  0x12\n    /* \"#utility.yul\":2437:2440   */\n  dup4\n    /* \"#utility.yul\":2378:2445   */\n  tag_31\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2371:2445   */\n  swap2\n  pop\n    /* \"#utility.yul\":2454:2547   */\n  tag_62\n    /* \"#utility.yul\":2543:2546   */\n  dup3\n    /* \"#utility.yul\":2454:2547   */\n  tag_32\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2572:2574   */\n  0x20\n    /* \"#utility.yul\":2567:2570   */\n  dup3\n    /* \"#utility.yul\":2563:2575   */\n  add\n    /* \"#utility.yul\":2556:2575   */\n  swap1\n  pop\n    /* \"#utility.yul\":2215:2581   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2587:3006   */\ntag_17:\n    /* \"#utility.yul\":2753:2757   */\n  0x00\n    /* \"#utility.yul\":2791:2793   */\n  0x20\n    /* \"#utility.yul\":2780:2789   */\n  dup3\n    /* \"#utility.yul\":2776:2794   */\n  add\n    /* \"#utility.yul\":2768:2794   */\n  swap1\n  pop\n    /* \"#utility.yul\":2840:2849   */\n  dup2\n    /* \"#utility.yul\":2834:2838   */\n  dup2\n    /* \"#utility.yul\":2830:2850   */\n  sub\n    /* \"#utility.yul\":2826:2827   */\n  0x00\n    /* \"#utility.yul\":2815:2824   */\n  dup4\n    /* \"#utility.yul\":2811:2828   */\n  add\n    /* \"#utility.yul\":2804:2851   */\n  mstore\n    /* \"#utility.yul\":2868:2999   */\n  tag_64\n    /* \"#utility.yul\":2994:2998   */\n  dup2\n    /* \"#utility.yul\":2868:2999   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2860:2999   */\n  swap1\n  pop\n    /* \"#utility.yul\":2587:3006   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3012:3185   */\ntag_34:\n    /* \"#utility.yul\":3152:3177   */\n  0x496e76616c69642074726561737572792077616c6c6574000000000000000000\n    /* \"#utility.yul\":3148:3149   */\n  0x00\n    /* \"#utility.yul\":3140:3146   */\n  dup3\n    /* \"#utility.yul\":3136:3150   */\n  add\n    /* \"#utility.yul\":3129:3178   */\n  mstore\n    /* \"#utility.yul\":3012:3185   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3191:3557   */\ntag_35:\n    /* \"#utility.yul\":3333:3336   */\n  0x00\n    /* \"#utility.yul\":3354:3421   */\n  tag_67\n    /* \"#utility.yul\":3418:3420   */\n  0x17\n    /* \"#utility.yul\":3413:3416   */\n  dup4\n    /* \"#utility.yul\":3354:3421   */\n  tag_31\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3347:3421   */\n  swap2\n  pop\n    /* \"#utility.yul\":3430:3523   */\n  tag_68\n    /* \"#utility.yul\":3519:3522   */\n  dup3\n    /* \"#utility.yul\":3430:3523   */\n  tag_34\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3548:3550   */\n  0x20\n    /* \"#utility.yul\":3543:3546   */\n  dup3\n    /* \"#utility.yul\":3539:3551   */\n  add\n    /* \"#utility.yul\":3532:3551   */\n  swap1\n  pop\n    /* \"#utility.yul\":3191:3557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3563:3982   */\ntag_20:\n    /* \"#utility.yul\":3729:3733   */\n  0x00\n    /* \"#utility.yul\":3767:3769   */\n  0x20\n    /* \"#utility.yul\":3756:3765   */\n  dup3\n    /* \"#utility.yul\":3752:3770   */\n  add\n    /* \"#utility.yul\":3744:3770   */\n  swap1\n  pop\n    /* \"#utility.yul\":3816:3825   */\n  dup2\n    /* \"#utility.yul\":3810:3814   */\n  dup2\n    /* \"#utility.yul\":3806:3826   */\n  sub\n    /* \"#utility.yul\":3802:3803   */\n  0x00\n    /* \"#utility.yul\":3791:3800   */\n  dup4\n    /* \"#utility.yul\":3787:3804   */\n  add\n    /* \"#utility.yul\":3780:3827   */\n  mstore\n    /* \"#utility.yul\":3844:3975   */\n  tag_70\n    /* \"#utility.yul\":3970:3974   */\n  dup2\n    /* \"#utility.yul\":3844:3975   */\n  tag_35\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3836:3975   */\n  swap1\n  pop\n    /* \"#utility.yul\":3563:3982   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Farming.sol\":412:7893  contract CAFIFarming is Ownable, ReentrancyGuard {... */\ntag_21:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Farming.sol\":412:7893  contract CAFIFarming is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0472f0\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb5d5b5fa\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb5d5b5fa\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcb8f63f6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd96acc72\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xeb16975d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x7b0472f0\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa6fdc26c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa8602fea\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x4626402b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x476343ee\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x58a0bde3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5acd2e4c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x0a34cc12\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x181d06a9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1852e8d9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x407bb09d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Farming.sol\":6467:6679  function toggleFarmPackage(uint256 packageId, bool isActive) external onlyOwner {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Farming.sol\":7156:7300  function setAutoFarmingFee(uint256 fee) external onlyOwner {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"Farming.sol\":5395:5878  function calculateReward(address user, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":4066:4923  function unstake(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Farming.sol\":1138:1171  FarmPackage[] public farmPackages */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":1370:1399  address public treasuryWallet */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":7662:7891  function withdrawFees() external onlyOwner {... */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"Farming.sol\":1077:1110  IERC20 public immutable cafiToken */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":6752:7092  function setAPY(uint256 packageId, uint256 newAPY) external onlyOwner {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"Farming.sol\":2686:3338  function stake(uint256 packageId, uint256 amount) external nonReentrant onlyEOA {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":4985:5344  function toggleAutoFarming(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"Farming.sol\":7364:7586  function setTreasuryWallet(address newWallet) external onlyOwner {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"Farming.sol\":3401:4005  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"Farming.sol\":1205:1254  mapping(address => UserStake[]) public userStakes */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":1286:1316  uint256 public autoFarmingPool */\n    tag_19:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":1322:1356  uint256 public autoFarmingFee = 50 */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":5944:6398  function addFarmPackage(... */\n    tag_21:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"Farming.sol\":6467:6679  function toggleFarmPackage(uint256 packageId, bool isActive) external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_99:\n        /* \"Farming.sol\":6577:6589  farmPackages */\n      0x02\n        /* \"Farming.sol\":6577:6596  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":6565:6574  packageId */\n      dup3\n        /* \"Farming.sol\":6565:6596  packageId < farmPackages.length */\n      lt\n        /* \"Farming.sol\":6557:6619  require(packageId < farmPackages.length, \"Invalid package ID\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"Farming.sol\":6664:6672  isActive */\n      dup1\n        /* \"Farming.sol\":6629:6641  farmPackages */\n      0x02\n        /* \"Farming.sol\":6642:6651  packageId */\n      dup4\n        /* \"Farming.sol\":6629:6652  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n    tag_105:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":6629:6661  farmPackages[packageId].isActive */\n      0x04\n      add\n      0x00\n        /* \"Farming.sol\":6629:6672  farmPackages[packageId].isActive = isActive */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":6467:6679  function toggleFarmPackage(uint256 packageId, bool isActive) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":7156:7300  function setAutoFarmingFee(uint256 fee) external onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"Farming.sol\":7240:7244  1000 */\n      0x03e8\n        /* \"Farming.sol\":7233:7236  fee */\n      dup2\n        /* \"Farming.sol\":7233:7244  fee <= 1000 */\n      gt\n      iszero\n        /* \"Farming.sol\":7225:7263  require(fee <= 1000, \"Max fee is 10%\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"Farming.sol\":7290:7293  fee */\n      dup1\n        /* \"Farming.sol\":7273:7287  autoFarmingFee */\n      0x05\n        /* \"Farming.sol\":7273:7293  autoFarmingFee = fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":7156:7300  function setAutoFarmingFee(uint256 fee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":5395:5878  function calculateReward(address user, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_37:\n        /* \"Farming.sol\":5475:5482  uint256 */\n      0x00\n        /* \"Farming.sol\":5494:5520  UserStake memory userStake */\n      0x00\n        /* \"Farming.sol\":5523:5533  userStakes */\n      0x03\n        /* \"Farming.sol\":5523:5539  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":5534:5538  user */\n      dup6\n        /* \"Farming.sol\":5523:5539  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":5540:5550  stakeIndex */\n      dup4\n        /* \"Farming.sol\":5523:5551  userStakes[user][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_107\n      jump\t// in\n    tag_117:\n    tag_116:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":5494:5551  UserStake memory userStake = userStakes[user][stakeIndex] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":5585:5586  0 */\n      0x00\n        /* \"Farming.sol\":5565:5574  userStake */\n      dup2\n        /* \"Farming.sol\":5565:5581  userStake.amount */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":5565:5586  userStake.amount == 0 */\n      sub\n        /* \"Farming.sol\":5561:5596  if (userStake.amount == 0) return 0 */\n      tag_119\n      jumpi\n        /* \"Farming.sol\":5595:5596  0 */\n      0x00\n        /* \"Farming.sol\":5588:5596  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_115)\n        /* \"Farming.sol\":5561:5596  if (userStake.amount == 0) return 0 */\n    tag_119:\n        /* \"Farming.sol\":5607:5633  FarmPackage memory package */\n      0x00\n        /* \"Farming.sol\":5636:5648  farmPackages */\n      0x02\n        /* \"Farming.sol\":5649:5658  userStake */\n      dup3\n        /* \"Farming.sol\":5649:5668  userStake.packageId */\n      0x00\n      add\n      mload\n        /* \"Farming.sol\":5636:5669  farmPackages[userStake.packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_121\n      tag_107\n      jump\t// in\n    tag_121:\n    tag_120:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":5607:5669  FarmPackage memory package = farmPackages[userStake.packageId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":5679:5697  uint256 timeStaked */\n      0x00\n        /* \"Farming.sol\":5718:5727  userStake */\n      dup3\n        /* \"Farming.sol\":5718:5741  userStake.lastClaimTime */\n      0x60\n      add\n      mload\n        /* \"Farming.sol\":5700:5715  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":5700:5741  block.timestamp - userStake.lastClaimTime */\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"Farming.sol\":5679:5741  uint256 timeStaked = block.timestamp - userStake.lastClaimTime */\n      swap1\n      pop\n        /* \"Farming.sol\":5751:5772  uint256 rewardPerYear */\n      0x00\n        /* \"Farming.sol\":5810:5815  10000 */\n      0x2710\n        /* \"Farming.sol\":5795:5802  package */\n      dup4\n        /* \"Farming.sol\":5795:5806  package.apy */\n      0x40\n      add\n      mload\n        /* \"Farming.sol\":5776:5785  userStake */\n      dup6\n        /* \"Farming.sol\":5776:5792  userStake.amount */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":5776:5806  userStake.amount * package.apy */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"Farming.sol\":5775:5815  (userStake.amount * package.apy) / 10000 */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"Farming.sol\":5751:5815  uint256 rewardPerYear = (userStake.amount * package.apy) / 10000 */\n      swap1\n      pop\n        /* \"Farming.sol\":5863:5871  365 days */\n      0x01e13380\n        /* \"Farming.sol\":5849:5859  timeStaked */\n      dup3\n        /* \"Farming.sol\":5833:5846  rewardPerYear */\n      dup3\n        /* \"Farming.sol\":5833:5859  rewardPerYear * timeStaked */\n      tag_129\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_129:\n        /* \"Farming.sol\":5832:5871  (rewardPerYear * timeStaked) / 365 days */\n      tag_130\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_130:\n        /* \"Farming.sol\":5825:5871  return (rewardPerYear * timeStaked) / 365 days */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Farming.sol\":5395:5878  function calculateReward(address user, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_115:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":4066:4923  function unstake(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_132\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_133\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_132:\n        /* \"Farming.sol\":2553:2563  msg.sender */\n      caller\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":2540:2549  tx.origin */\n      origin\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farming.sol\":2532:2585  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"Farming.sol\":4143:4173  UserStake storage currentStake */\n      0x00\n        /* \"Farming.sol\":4176:4186  userStakes */\n      0x03\n        /* \"Farming.sol\":4176:4198  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":4187:4197  msg.sender */\n      caller\n        /* \"Farming.sol\":4176:4198  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":4199:4209  stakeIndex */\n      dup3\n        /* \"Farming.sol\":4176:4210  userStakes[msg.sender][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_140\n      tag_107\n      jump\t// in\n    tag_140:\n    tag_139:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":4143:4210  UserStake storage currentStake = userStakes[msg.sender][stakeIndex] */\n      swap1\n      pop\n        /* \"Farming.sol\":4250:4251  0 */\n      0x00\n        /* \"Farming.sol\":4228:4240  currentStake */\n      dup2\n        /* \"Farming.sol\":4228:4247  currentStake.amount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":4228:4251  currentStake.amount > 0 */\n      gt\n        /* \"Farming.sol\":4220:4271  require(currentStake.amount > 0, \"No active stake\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"Farming.sol\":4282:4308  FarmPackage memory package */\n      0x00\n        /* \"Farming.sol\":4311:4323  farmPackages */\n      0x02\n        /* \"Farming.sol\":4324:4336  currentStake */\n      dup3\n        /* \"Farming.sol\":4324:4346  currentStake.packageId */\n      0x00\n      add\n      sload\n        /* \"Farming.sol\":4311:4347  farmPackages[currentStake.packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_146\n      tag_107\n      jump\t// in\n    tag_146:\n    tag_145:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":4282:4347  FarmPackage memory package = farmPackages[currentStake.packageId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":4409:4416  package */\n      dup1\n        /* \"Farming.sol\":4409:4425  package.duration */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":4384:4396  currentStake */\n      dup3\n        /* \"Farming.sol\":4384:4406  currentStake.startTime */\n      0x02\n      add\n      sload\n        /* \"Farming.sol\":4384:4425  currentStake.startTime + package.duration */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"Farming.sol\":4365:4380  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":4365:4425  block.timestamp >= currentStake.startTime + package.duration */\n      lt\n      iszero\n        /* \"Farming.sol\":4357:4442  require(block.timestamp >= currentStake.startTime + package.duration, \"Still locked\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"Farming.sol\":4453:4467  uint256 reward */\n      0x00\n        /* \"Farming.sol\":4470:4509  calculateReward(msg.sender, stakeIndex) */\n      tag_153\n        /* \"Farming.sol\":4486:4496  msg.sender */\n      caller\n        /* \"Farming.sol\":4498:4508  stakeIndex */\n      dup6\n        /* \"Farming.sol\":4470:4485  calculateReward */\n      tag_37\n        /* \"Farming.sol\":4470:4509  calculateReward(msg.sender, stakeIndex) */\n      jump\t// in\n    tag_153:\n        /* \"Farming.sol\":4453:4509  uint256 reward = calculateReward(msg.sender, stakeIndex) */\n      swap1\n      pop\n        /* \"Farming.sol\":4519:4538  uint256 totalAmount */\n      0x00\n        /* \"Farming.sol\":4541:4553  currentStake */\n      dup4\n        /* \"Farming.sol\":4541:4560  currentStake.amount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":4519:4560  uint256 totalAmount = currentStake.amount */\n      swap1\n      pop\n        /* \"Farming.sol\":4578:4588  userStakes */\n      0x03\n        /* \"Farming.sol\":4578:4600  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":4589:4599  msg.sender */\n      caller\n        /* \"Farming.sol\":4578:4600  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":4601:4611  stakeIndex */\n      dup6\n        /* \"Farming.sol\":4578:4612  userStakes[msg.sender][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_155\n      tag_107\n      jump\t// in\n    tag_155:\n    tag_154:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n        /* \"Farming.sol\":4571:4612  delete userStakes[msg.sender][stakeIndex] */\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Farming.sol\":4663:4727  IERC20(package.stakeToken).safeTransfer(msg.sender, totalAmount) */\n      tag_157\n        /* \"Farming.sol\":4703:4713  msg.sender */\n      caller\n        /* \"Farming.sol\":4715:4726  totalAmount */\n      dup3\n        /* \"Farming.sol\":4670:4677  package */\n      dup6\n        /* \"Farming.sol\":4670:4688  package.stakeToken */\n      0x00\n      add\n      mload\n        /* \"Farming.sol\":4663:4702  IERC20(package.stakeToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"Farming.sol\":4663:4727  IERC20(package.stakeToken).safeTransfer(msg.sender, totalAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"Farming.sol\":4778:4779  0 */\n      0x00\n        /* \"Farming.sol\":4769:4775  reward */\n      dup3\n        /* \"Farming.sol\":4769:4779  reward > 0 */\n      gt\n        /* \"Farming.sol\":4765:4848  if (reward > 0) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"Farming.sol\":4795:4837  cafiToken.safeTransfer(msg.sender, reward) */\n      tag_160\n        /* \"Farming.sol\":4818:4828  msg.sender */\n      caller\n        /* \"Farming.sol\":4830:4836  reward */\n      dup4\n        /* \"Farming.sol\":4795:4804  cafiToken */\n      immutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n        /* \"Farming.sol\":4795:4817  cafiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"Farming.sol\":4795:4837  cafiToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"Farming.sol\":4765:4848  if (reward > 0) {... */\n    tag_159:\n        /* \"Farming.sol\":4872:4882  msg.sender */\n      caller\n        /* \"Farming.sol\":4863:4916  Unstaked(msg.sender, stakeIndex, totalAmount, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x204fccf0d92ed8d48f204adb39b2e81e92bad0dedb93f5716ca9478cfb57de00\n        /* \"Farming.sol\":4884:4894  stakeIndex */\n      dup7\n        /* \"Farming.sol\":4896:4907  totalAmount */\n      dup4\n        /* \"Farming.sol\":4909:4915  reward */\n      dup6\n        /* \"Farming.sol\":4863:4916  Unstaked(msg.sender, stakeIndex, totalAmount, reward) */\n      mload(0x40)\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Farming.sol\":4133:4923  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_164\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_163:\n        /* \"Farming.sol\":4066:4923  function unstake(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":1138:1171  FarmPackage[] public farmPackages */\n    tag_45:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"Farming.sol\":1370:1399  address public treasuryWallet */\n    tag_49:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":7662:7891  function withdrawFees() external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"Farming.sol\":7715:7729  uint256 amount */\n      0x00\n        /* \"Farming.sol\":7732:7747  autoFarmingPool */\n      sload(0x04)\n        /* \"Farming.sol\":7715:7747  uint256 amount = autoFarmingPool */\n      swap1\n      pop\n        /* \"Farming.sol\":7774:7775  0 */\n      0x00\n        /* \"Farming.sol\":7765:7771  amount */\n      dup2\n        /* \"Farming.sol\":7765:7775  amount > 0 */\n      gt\n        /* \"Farming.sol\":7757:7799  require(amount > 0, \"No fees to withdraw\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"Farming.sol\":7827:7828  0 */\n      0x00\n        /* \"Farming.sol\":7809:7824  autoFarmingPool */\n      0x04\n        /* \"Farming.sol\":7809:7828  autoFarmingPool = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":7838:7884  cafiToken.safeTransfer(treasuryWallet, amount) */\n      tag_173\n        /* \"Farming.sol\":7861:7875  treasuryWallet */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":7877:7883  amount */\n      dup3\n        /* \"Farming.sol\":7838:7847  cafiToken */\n      immutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n        /* \"Farming.sol\":7838:7860  cafiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"Farming.sol\":7838:7884  cafiToken.safeTransfer(treasuryWallet, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"Farming.sol\":7705:7891  {... */\n      pop\n        /* \"Farming.sol\":7662:7891  function withdrawFees() external onlyOwner {... */\n      jump\t// out\n        /* \"Farming.sol\":1077:1110  IERC20 public immutable cafiToken */\n    tag_55:\n      immutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":6752:7092  function setAPY(uint256 packageId, uint256 newAPY) external onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"Farming.sol\":6852:6864  farmPackages */\n      0x02\n        /* \"Farming.sol\":6852:6871  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":6840:6849  packageId */\n      dup3\n        /* \"Farming.sol\":6840:6871  packageId < farmPackages.length */\n      lt\n        /* \"Farming.sol\":6832:6894  require(packageId < farmPackages.length, \"Invalid package ID\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_104\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"Farming.sol\":6904:6931  FarmPackage storage package */\n      0x00\n        /* \"Farming.sol\":6934:6946  farmPackages */\n      0x02\n        /* \"Farming.sol\":6947:6956  packageId */\n      dup4\n        /* \"Farming.sol\":6934:6957  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_180\n      tag_107\n      jump\t// in\n    tag_180:\n    tag_179:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":6904:6957  FarmPackage storage package = farmPackages[packageId] */\n      swap1\n      pop\n        /* \"Farming.sol\":6967:6981  uint256 oldAPY */\n      0x00\n        /* \"Farming.sol\":6984:6991  package */\n      dup2\n        /* \"Farming.sol\":6984:6995  package.apy */\n      0x02\n      add\n      sload\n        /* \"Farming.sol\":6967:6995  uint256 oldAPY = package.apy */\n      swap1\n      pop\n        /* \"Farming.sol\":7019:7025  newAPY */\n      dup3\n        /* \"Farming.sol\":7005:7012  package */\n      dup3\n        /* \"Farming.sol\":7005:7016  package.apy */\n      0x02\n      add\n        /* \"Farming.sol\":7005:7025  package.apy = newAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":7041:7085  PackageAPYUpdated(packageId, oldAPY, newAPY) */\n      0x447f7585030d3ef3a73db720f6082f657781a4a8657461796b868687caaea1e2\n        /* \"Farming.sol\":7059:7068  packageId */\n      dup5\n        /* \"Farming.sol\":7070:7076  oldAPY */\n      dup3\n        /* \"Farming.sol\":7078:7084  newAPY */\n      dup6\n        /* \"Farming.sol\":7041:7085  PackageAPYUpdated(packageId, oldAPY, newAPY) */\n      mload(0x40)\n      tag_182\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Farming.sol\":6822:7092  {... */\n      pop\n      pop\n        /* \"Farming.sol\":6752:7092  function setAPY(uint256 packageId, uint256 newAPY) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Farming.sol\":2686:3338  function stake(uint256 packageId, uint256 amount) external nonReentrant onlyEOA {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_133\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_189:\n        /* \"Farming.sol\":2553:2563  msg.sender */\n      caller\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":2540:2549  tx.origin */\n      origin\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farming.sol\":2532:2585  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_137\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"Farming.sol\":2776:2802  FarmPackage memory package */\n      0x00\n        /* \"Farming.sol\":2805:2817  farmPackages */\n      0x02\n        /* \"Farming.sol\":2818:2827  packageId */\n      dup4\n        /* \"Farming.sol\":2805:2828  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_195\n      tag_107\n      jump\t// in\n    tag_195:\n    tag_194:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":2776:2828  FarmPackage memory package = farmPackages[packageId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":2846:2853  package */\n      dup1\n        /* \"Farming.sol\":2846:2862  package.isActive */\n      0x80\n      add\n      mload\n        /* \"Farming.sol\":2838:2885  require(package.isActive, \"Package not active\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"Farming.sol\":2913:2920  package */\n      dup1\n        /* \"Farming.sol\":2913:2929  package.minStake */\n      0x60\n      add\n      mload\n        /* \"Farming.sol\":2903:2909  amount */\n      dup3\n        /* \"Farming.sol\":2903:2929  amount >= package.minStake */\n      lt\n      iszero\n        /* \"Farming.sol\":2895:2948  require(amount >= package.minStake, \"Amount too low\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"Farming.sol\":2959:3037  IERC20(package.stakeToken).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_203\n        /* \"Farming.sol\":3003:3013  msg.sender */\n      caller\n        /* \"Farming.sol\":3023:3027  this */\n      address\n        /* \"Farming.sol\":3030:3036  amount */\n      dup5\n        /* \"Farming.sol\":2966:2973  package */\n      dup5\n        /* \"Farming.sol\":2966:2984  package.stakeToken */\n      0x00\n      add\n      mload\n        /* \"Farming.sol\":2959:3002  IERC20(package.stakeToken).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_204\n      swap1\n        /* \"Farming.sol\":2959:3037  IERC20(package.stakeToken).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"Farming.sol\":3048:3058  userStakes */\n      0x03\n        /* \"Farming.sol\":3048:3070  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":3059:3069  msg.sender */\n      caller\n        /* \"Farming.sol\":3048:3070  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":3076:3277  UserStake({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Farming.sol\":3111:3120  packageId */\n      dup6\n        /* \"Farming.sol\":3076:3277  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":3142:3148  amount */\n      dup5\n        /* \"Farming.sol\":3076:3277  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":3173:3188  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":3076:3277  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":3217:3232  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":3076:3277  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":3261:3266  false */\n      0x00\n        /* \"Farming.sol\":3076:3277  UserStake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Farming.sol\":3048:3278  userStakes[msg.sender].push(UserStake({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Farming.sol\":3301:3311  msg.sender */\n      caller\n        /* \"Farming.sol\":3294:3331  Staked(msg.sender, packageId, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"Farming.sol\":3313:3322  packageId */\n      dup5\n        /* \"Farming.sol\":3324:3330  amount */\n      dup5\n        /* \"Farming.sol\":3294:3331  Staked(msg.sender, packageId, amount) */\n      mload(0x40)\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Farming.sol\":2766:3338  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_208\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_164\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_208:\n        /* \"Farming.sol\":2686:3338  function stake(uint256 packageId, uint256 amount) external nonReentrant onlyEOA {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Farming.sol\":4985:5344  function toggleAutoFarming(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_211\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_133\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_211:\n        /* \"Farming.sol\":2553:2563  msg.sender */\n      caller\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":2540:2549  tx.origin */\n      origin\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farming.sol\":2532:2585  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_137\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"Farming.sol\":5072:5099  UserStake storage stakeData */\n      0x00\n        /* \"Farming.sol\":5102:5112  userStakes */\n      0x03\n        /* \"Farming.sol\":5102:5124  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":5113:5123  msg.sender */\n      caller\n        /* \"Farming.sol\":5102:5124  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":5125:5135  stakeIndex */\n      dup3\n        /* \"Farming.sol\":5102:5136  userStakes[msg.sender][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_107\n      jump\t// in\n    tag_217:\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":5072:5136  UserStake storage stakeData = userStakes[msg.sender][stakeIndex] */\n      swap1\n      pop\n        /* \"Farming.sol\":5173:5174  0 */\n      0x00\n        /* \"Farming.sol\":5154:5163  stakeData */\n      dup2\n        /* \"Farming.sol\":5154:5170  stakeData.amount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":5154:5174  stakeData.amount > 0 */\n      gt\n        /* \"Farming.sol\":5146:5194  require(stakeData.amount > 0, \"No active stake\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_144\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"Farming.sol\":5232:5241  stakeData */\n      dup1\n        /* \"Farming.sol\":5232:5255  stakeData.isAutoFarming */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":5231:5255  !stakeData.isAutoFarming */\n      iszero\n        /* \"Farming.sol\":5205:5214  stakeData */\n      dup2\n        /* \"Farming.sol\":5205:5228  stakeData.isAutoFarming */\n      0x04\n      add\n      0x00\n        /* \"Farming.sol\":5205:5255  stakeData.isAutoFarming = !stakeData.isAutoFarming */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":5289:5299  msg.sender */\n      caller\n        /* \"Farming.sol\":5270:5337  AutoFarmingToggled(msg.sender, stakeIndex, stakeData.isAutoFarming) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x31a69d42a6f751ecfc0dbb2406339aec90a8398da52cec9760a134a10d430c02\n        /* \"Farming.sol\":5301:5311  stakeIndex */\n      dup4\n        /* \"Farming.sol\":5313:5322  stakeData */\n      dup4\n        /* \"Farming.sol\":5313:5336  stakeData.isAutoFarming */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":5270:5337  AutoFarmingToggled(msg.sender, stakeIndex, stakeData.isAutoFarming) */\n      mload(0x40)\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Farming.sol\":5062:5344  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_164\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_223:\n        /* \"Farming.sol\":4985:5344  function toggleAutoFarming(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":7364:7586  function setTreasuryWallet(address newWallet) external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_225:\n        /* \"Farming.sol\":7468:7469  0 */\n      0x00\n        /* \"Farming.sol\":7447:7470  newWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":7447:7456  newWallet */\n      dup2\n        /* \"Farming.sol\":7447:7470  newWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Farming.sol\":7439:7499  require(newWallet != address(0), \"Zero address not allowed\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"Farming.sol\":7526:7535  newWallet */\n      dup1\n        /* \"Farming.sol\":7509:7523  treasuryWallet */\n      0x06\n      0x00\n        /* \"Farming.sol\":7509:7535  treasuryWallet = newWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":7569:7578  newWallet */\n      dup1\n        /* \"Farming.sol\":7550:7579  FeeReceiverUpdated(newWallet) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Farming.sol\":7364:7586  function setTreasuryWallet(address newWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":3401:4005  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_231\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_133\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_231:\n        /* \"Farming.sol\":2553:2563  msg.sender */\n      caller\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":2540:2549  tx.origin */\n      origin\n        /* \"Farming.sol\":2540:2563  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farming.sol\":2532:2585  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_137\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"Farming.sol\":3482:3509  UserStake storage userStake */\n      0x00\n        /* \"Farming.sol\":3512:3522  userStakes */\n      0x03\n        /* \"Farming.sol\":3512:3534  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":3523:3533  msg.sender */\n      caller\n        /* \"Farming.sol\":3512:3534  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":3535:3545  stakeIndex */\n      dup3\n        /* \"Farming.sol\":3512:3546  userStakes[msg.sender][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_107\n      jump\t// in\n    tag_237:\n    tag_236:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":3482:3546  UserStake storage userStake = userStakes[msg.sender][stakeIndex] */\n      swap1\n      pop\n        /* \"Farming.sol\":3583:3584  0 */\n      0x00\n        /* \"Farming.sol\":3564:3573  userStake */\n      dup2\n        /* \"Farming.sol\":3564:3580  userStake.amount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":3564:3584  userStake.amount > 0 */\n      gt\n        /* \"Farming.sol\":3556:3604  require(userStake.amount > 0, \"No active stake\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_144\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"Farming.sol\":3615:3629  uint256 reward */\n      0x00\n        /* \"Farming.sol\":3632:3671  calculateReward(msg.sender, stakeIndex) */\n      tag_241\n        /* \"Farming.sol\":3648:3658  msg.sender */\n      caller\n        /* \"Farming.sol\":3660:3670  stakeIndex */\n      dup5\n        /* \"Farming.sol\":3632:3647  calculateReward */\n      tag_37\n        /* \"Farming.sol\":3632:3671  calculateReward(msg.sender, stakeIndex) */\n      jump\t// in\n    tag_241:\n        /* \"Farming.sol\":3615:3671  uint256 reward = calculateReward(msg.sender, stakeIndex) */\n      swap1\n      pop\n        /* \"Farming.sol\":3698:3699  0 */\n      0x00\n        /* \"Farming.sol\":3689:3695  reward */\n      dup2\n        /* \"Farming.sol\":3689:3699  reward > 0 */\n      gt\n        /* \"Farming.sol\":3681:3722  require(reward > 0, \"No reward to claim\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"Farming.sol\":3759:3774  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":3733:3742  userStake */\n      dup3\n        /* \"Farming.sol\":3733:3756  userStake.lastClaimTime */\n      0x03\n      add\n        /* \"Farming.sol\":3733:3774  userStake.lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":3789:3798  userStake */\n      dup2\n        /* \"Farming.sol\":3789:3812  userStake.isAutoFarming */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":3785:3938  if (userStake.isAutoFarming) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"Farming.sol\":3848:3854  reward */\n      dup1\n        /* \"Farming.sol\":3828:3837  userStake */\n      dup3\n        /* \"Farming.sol\":3828:3844  userStake.amount */\n      0x01\n      add\n      0x00\n        /* \"Farming.sol\":3828:3854  userStake.amount += reward */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_246:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":3785:3938  if (userStake.isAutoFarming) {... */\n      jump(tag_247)\n    tag_245:\n        /* \"Farming.sol\":3885:3927  cafiToken.safeTransfer(msg.sender, reward) */\n      tag_248\n        /* \"Farming.sol\":3908:3918  msg.sender */\n      caller\n        /* \"Farming.sol\":3920:3926  reward */\n      dup3\n        /* \"Farming.sol\":3885:3894  cafiToken */\n      immutable(\"0x915df03ad3d1adec3bd513726627a8fc7bf9ec81edb3bb322f7db8a8bc5664b4\")\n        /* \"Farming.sol\":3885:3907  cafiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"Farming.sol\":3885:3927  cafiToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"Farming.sol\":3785:3938  if (userStake.isAutoFarming) {... */\n    tag_247:\n        /* \"Farming.sol\":3967:3977  msg.sender */\n      caller\n        /* \"Farming.sol\":3953:3998  RewardClaimed(msg.sender, stakeIndex, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743\n        /* \"Farming.sol\":3979:3989  stakeIndex */\n      dup5\n        /* \"Farming.sol\":3991:3997  reward */\n      dup4\n        /* \"Farming.sol\":3953:3998  RewardClaimed(msg.sender, stakeIndex, reward) */\n      mload(0x40)\n      tag_249\n      swap3\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Farming.sol\":3472:4005  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_250\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_164\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_250:\n        /* \"Farming.sol\":3401:4005  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA {... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":1205:1254  mapping(address => UserStake[]) public userStakes */\n    tag_82:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"Farming.sol\":1286:1316  uint256 public autoFarmingPool */\n    tag_86:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":1322:1356  uint256 public autoFarmingFee = 50 */\n    tag_89:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":5944:6398  function addFarmPackage(... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_254:\n        /* \"Farming.sol\":6104:6116  farmPackages */\n      0x02\n        /* \"Farming.sol\":6122:6295  FarmPackage({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Farming.sol\":6160:6170  stakeToken */\n      dup7\n        /* \"Farming.sol\":6122:6295  FarmPackage({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":6194:6202  duration */\n      dup6\n        /* \"Farming.sol\":6122:6295  FarmPackage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":6221:6224  apy */\n      dup5\n        /* \"Farming.sol\":6122:6295  FarmPackage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":6248:6256  minStake */\n      dup4\n        /* \"Farming.sol\":6122:6295  FarmPackage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":6280:6284  true */\n      0x01\n        /* \"Farming.sol\":6122:6295  FarmPackage({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Farming.sol\":6104:6296  farmPackages.push(FarmPackage({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Farming.sol\":6311:6391  PackageAdded(farmPackages.length - 1, stakeToken, duration, apy, minStake, true) */\n      0x449d6803fbc50a1b24602b1756ef38e10c1fb9c7f3d93da3e692636702585548\n        /* \"Farming.sol\":6346:6347  1 */\n      0x01\n        /* \"Farming.sol\":6324:6336  farmPackages */\n      0x02\n        /* \"Farming.sol\":6324:6343  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":6324:6347  farmPackages.length - 1 */\n      tag_257\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_257:\n        /* \"Farming.sol\":6349:6359  stakeToken */\n      dup6\n        /* \"Farming.sol\":6361:6369  duration */\n      dup6\n        /* \"Farming.sol\":6371:6374  apy */\n      dup6\n        /* \"Farming.sol\":6376:6384  minStake */\n      dup6\n        /* \"Farming.sol\":6386:6390  true */\n      0x01\n        /* \"Farming.sol\":6311:6391  PackageAdded(farmPackages.length - 1, stakeToken, duration, apy, minStake, true) */\n      mload(0x40)\n      tag_258\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Farming.sol\":5944:6398  function addFarmPackage(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_279\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_286\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_292)\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_296:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_298:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_299:\n        /* \"#utility.yul\":490:514   */\n      tag_347\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_298\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_348:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_300:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_350\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_299\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:780   */\n    tag_301:\n        /* \"#utility.yul\":724:731   */\n      0x00\n        /* \"#utility.yul\":767:772   */\n      dup2\n        /* \"#utility.yul\":760:773   */\n      iszero\n        /* \"#utility.yul\":753:774   */\n      iszero\n        /* \"#utility.yul\":742:774   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":786:902   */\n    tag_302:\n        /* \"#utility.yul\":856:877   */\n      tag_353\n        /* \"#utility.yul\":871:876   */\n      dup2\n        /* \"#utility.yul\":856:877   */\n      tag_301\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":849:854   */\n      dup2\n        /* \"#utility.yul\":846:878   */\n      eq\n        /* \"#utility.yul\":836:896   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":892:893   */\n      0x00\n        /* \"#utility.yul\":889:890   */\n      0x00\n        /* \"#utility.yul\":882:894   */\n      revert\n        /* \"#utility.yul\":836:896   */\n    tag_354:\n        /* \"#utility.yul\":786:902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":908:1041   */\n    tag_303:\n        /* \"#utility.yul\":951:956   */\n      0x00\n        /* \"#utility.yul\":989:995   */\n      dup2\n        /* \"#utility.yul\":976:996   */\n      calldataload\n        /* \"#utility.yul\":967:996   */\n      swap1\n      pop\n        /* \"#utility.yul\":1005:1035   */\n      tag_356\n        /* \"#utility.yul\":1029:1034   */\n      dup2\n        /* \"#utility.yul\":1005:1035   */\n      tag_302\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":908:1041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1515   */\n    tag_28:\n        /* \"#utility.yul\":1112:1118   */\n      0x00\n        /* \"#utility.yul\":1120:1126   */\n      0x00\n        /* \"#utility.yul\":1169:1171   */\n      0x40\n        /* \"#utility.yul\":1157:1166   */\n      dup4\n        /* \"#utility.yul\":1148:1155   */\n      dup6\n        /* \"#utility.yul\":1144:1167   */\n      sub\n        /* \"#utility.yul\":1140:1172   */\n      slt\n        /* \"#utility.yul\":1137:1256   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":1175:1254   */\n      tag_359\n      tag_296\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1137:1256   */\n    tag_358:\n        /* \"#utility.yul\":1295:1296   */\n      0x00\n        /* \"#utility.yul\":1320:1373   */\n      tag_360\n        /* \"#utility.yul\":1365:1372   */\n      dup6\n        /* \"#utility.yul\":1356:1362   */\n      dup3\n        /* \"#utility.yul\":1345:1354   */\n      dup7\n        /* \"#utility.yul\":1341:1363   */\n      add\n        /* \"#utility.yul\":1320:1373   */\n      tag_300\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1310:1373   */\n      swap3\n      pop\n        /* \"#utility.yul\":1266:1383   */\n      pop\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1448:1498   */\n      tag_361\n        /* \"#utility.yul\":1490:1497   */\n      dup6\n        /* \"#utility.yul\":1481:1487   */\n      dup3\n        /* \"#utility.yul\":1470:1479   */\n      dup7\n        /* \"#utility.yul\":1466:1488   */\n      add\n        /* \"#utility.yul\":1448:1498   */\n      tag_303\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1438:1498   */\n      swap2\n      pop\n        /* \"#utility.yul\":1393:1508   */\n      pop\n        /* \"#utility.yul\":1047:1515   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1850   */\n    tag_32:\n        /* \"#utility.yul\":1580:1586   */\n      0x00\n        /* \"#utility.yul\":1629:1631   */\n      0x20\n        /* \"#utility.yul\":1617:1626   */\n      dup3\n        /* \"#utility.yul\":1608:1615   */\n      dup5\n        /* \"#utility.yul\":1604:1627   */\n      sub\n        /* \"#utility.yul\":1600:1632   */\n      slt\n        /* \"#utility.yul\":1597:1716   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":1635:1714   */\n      tag_364\n      tag_296\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1597:1716   */\n    tag_363:\n        /* \"#utility.yul\":1755:1756   */\n      0x00\n        /* \"#utility.yul\":1780:1833   */\n      tag_365\n        /* \"#utility.yul\":1825:1832   */\n      dup5\n        /* \"#utility.yul\":1816:1822   */\n      dup3\n        /* \"#utility.yul\":1805:1814   */\n      dup6\n        /* \"#utility.yul\":1801:1823   */\n      add\n        /* \"#utility.yul\":1780:1833   */\n      tag_300\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1770:1833   */\n      swap2\n      pop\n        /* \"#utility.yul\":1726:1843   */\n      pop\n        /* \"#utility.yul\":1521:1850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1982   */\n    tag_304:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1933:1975   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1926:1931   */\n      dup3\n        /* \"#utility.yul\":1922:1976   */\n      and\n        /* \"#utility.yul\":1911:1976   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1988:2084   */\n    tag_305:\n        /* \"#utility.yul\":2025:2032   */\n      0x00\n        /* \"#utility.yul\":2054:2078   */\n      tag_368\n        /* \"#utility.yul\":2072:2077   */\n      dup3\n        /* \"#utility.yul\":2054:2078   */\n      tag_304\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2043:2078   */\n      swap1\n      pop\n        /* \"#utility.yul\":1988:2084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2090:2212   */\n    tag_306:\n        /* \"#utility.yul\":2163:2187   */\n      tag_370\n        /* \"#utility.yul\":2181:2186   */\n      dup2\n        /* \"#utility.yul\":2163:2187   */\n      tag_305\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2156:2161   */\n      dup2\n        /* \"#utility.yul\":2153:2188   */\n      eq\n        /* \"#utility.yul\":2143:2206   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2202:2203   */\n      0x00\n        /* \"#utility.yul\":2199:2200   */\n      0x00\n        /* \"#utility.yul\":2192:2204   */\n      revert\n        /* \"#utility.yul\":2143:2206   */\n    tag_371:\n        /* \"#utility.yul\":2090:2212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2218:2357   */\n    tag_307:\n        /* \"#utility.yul\":2264:2269   */\n      0x00\n        /* \"#utility.yul\":2302:2308   */\n      dup2\n        /* \"#utility.yul\":2289:2309   */\n      calldataload\n        /* \"#utility.yul\":2280:2309   */\n      swap1\n      pop\n        /* \"#utility.yul\":2318:2351   */\n      tag_373\n        /* \"#utility.yul\":2345:2350   */\n      dup2\n        /* \"#utility.yul\":2318:2351   */\n      tag_306\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2218:2357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2363:2837   */\n    tag_36:\n        /* \"#utility.yul\":2431:2437   */\n      0x00\n        /* \"#utility.yul\":2439:2445   */\n      0x00\n        /* \"#utility.yul\":2488:2490   */\n      0x40\n        /* \"#utility.yul\":2476:2485   */\n      dup4\n        /* \"#utility.yul\":2467:2474   */\n      dup6\n        /* \"#utility.yul\":2463:2486   */\n      sub\n        /* \"#utility.yul\":2459:2491   */\n      slt\n        /* \"#utility.yul\":2456:2575   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2494:2573   */\n      tag_376\n      tag_296\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2456:2575   */\n    tag_375:\n        /* \"#utility.yul\":2614:2615   */\n      0x00\n        /* \"#utility.yul\":2639:2692   */\n      tag_377\n        /* \"#utility.yul\":2684:2691   */\n      dup6\n        /* \"#utility.yul\":2675:2681   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup7\n        /* \"#utility.yul\":2660:2682   */\n      add\n        /* \"#utility.yul\":2639:2692   */\n      tag_307\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2629:2692   */\n      swap3\n      pop\n        /* \"#utility.yul\":2585:2702   */\n      pop\n        /* \"#utility.yul\":2741:2743   */\n      0x20\n        /* \"#utility.yul\":2767:2820   */\n      tag_378\n        /* \"#utility.yul\":2812:2819   */\n      dup6\n        /* \"#utility.yul\":2803:2809   */\n      dup3\n        /* \"#utility.yul\":2792:2801   */\n      dup7\n        /* \"#utility.yul\":2788:2810   */\n      add\n        /* \"#utility.yul\":2767:2820   */\n      tag_300\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2757:2820   */\n      swap2\n      pop\n        /* \"#utility.yul\":2712:2830   */\n      pop\n        /* \"#utility.yul\":2363:2837   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2843:2961   */\n    tag_308:\n        /* \"#utility.yul\":2930:2954   */\n      tag_380\n        /* \"#utility.yul\":2948:2953   */\n      dup2\n        /* \"#utility.yul\":2930:2954   */\n      tag_298\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2925:2928   */\n      dup3\n        /* \"#utility.yul\":2918:2955   */\n      mstore\n        /* \"#utility.yul\":2843:2961   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2967:3189   */\n    tag_39:\n        /* \"#utility.yul\":3060:3064   */\n      0x00\n        /* \"#utility.yul\":3098:3100   */\n      0x20\n        /* \"#utility.yul\":3087:3096   */\n      dup3\n        /* \"#utility.yul\":3083:3101   */\n      add\n        /* \"#utility.yul\":3075:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":3111:3182   */\n      tag_382\n        /* \"#utility.yul\":3179:3180   */\n      0x00\n        /* \"#utility.yul\":3168:3177   */\n      dup4\n        /* \"#utility.yul\":3164:3181   */\n      add\n        /* \"#utility.yul\":3155:3161   */\n      dup5\n        /* \"#utility.yul\":3111:3182   */\n      tag_308\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2967:3189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3195:3313   */\n    tag_309:\n        /* \"#utility.yul\":3282:3306   */\n      tag_384\n        /* \"#utility.yul\":3300:3305   */\n      dup2\n        /* \"#utility.yul\":3282:3306   */\n      tag_305\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3277:3280   */\n      dup3\n        /* \"#utility.yul\":3270:3307   */\n      mstore\n        /* \"#utility.yul\":3195:3313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3319:3428   */\n    tag_310:\n        /* \"#utility.yul\":3400:3421   */\n      tag_386\n        /* \"#utility.yul\":3415:3420   */\n      dup2\n        /* \"#utility.yul\":3400:3421   */\n      tag_301\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3395:3398   */\n      dup3\n        /* \"#utility.yul\":3388:3422   */\n      mstore\n        /* \"#utility.yul\":3319:3428   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3434:4086   */\n    tag_47:\n        /* \"#utility.yul\":3633:3637   */\n      0x00\n        /* \"#utility.yul\":3671:3674   */\n      0xa0\n        /* \"#utility.yul\":3660:3669   */\n      dup3\n        /* \"#utility.yul\":3656:3675   */\n      add\n        /* \"#utility.yul\":3648:3675   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3756   */\n      tag_388\n        /* \"#utility.yul\":3753:3754   */\n      0x00\n        /* \"#utility.yul\":3742:3751   */\n      dup4\n        /* \"#utility.yul\":3738:3755   */\n      add\n        /* \"#utility.yul\":3729:3735   */\n      dup9\n        /* \"#utility.yul\":3685:3756   */\n      tag_309\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3766:3838   */\n      tag_389\n        /* \"#utility.yul\":3834:3836   */\n      0x20\n        /* \"#utility.yul\":3823:3832   */\n      dup4\n        /* \"#utility.yul\":3819:3837   */\n      add\n        /* \"#utility.yul\":3810:3816   */\n      dup8\n        /* \"#utility.yul\":3766:3838   */\n      tag_308\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3848:3920   */\n      tag_390\n        /* \"#utility.yul\":3916:3918   */\n      0x40\n        /* \"#utility.yul\":3905:3914   */\n      dup4\n        /* \"#utility.yul\":3901:3919   */\n      add\n        /* \"#utility.yul\":3892:3898   */\n      dup7\n        /* \"#utility.yul\":3848:3920   */\n      tag_308\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3930:4002   */\n      tag_391\n        /* \"#utility.yul\":3998:4000   */\n      0x60\n        /* \"#utility.yul\":3987:3996   */\n      dup4\n        /* \"#utility.yul\":3983:4001   */\n      add\n        /* \"#utility.yul\":3974:3980   */\n      dup6\n        /* \"#utility.yul\":3930:4002   */\n      tag_308\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4012:4079   */\n      tag_392\n        /* \"#utility.yul\":4074:4077   */\n      0x80\n        /* \"#utility.yul\":4063:4072   */\n      dup4\n        /* \"#utility.yul\":4059:4078   */\n      add\n        /* \"#utility.yul\":4050:4056   */\n      dup5\n        /* \"#utility.yul\":4012:4079   */\n      tag_310\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3434:4086   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4092:4314   */\n    tag_51:\n        /* \"#utility.yul\":4185:4189   */\n      0x00\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4212:4221   */\n      dup3\n        /* \"#utility.yul\":4208:4226   */\n      add\n        /* \"#utility.yul\":4200:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4236:4307   */\n      tag_394\n        /* \"#utility.yul\":4304:4305   */\n      0x00\n        /* \"#utility.yul\":4293:4302   */\n      dup4\n        /* \"#utility.yul\":4289:4306   */\n      add\n        /* \"#utility.yul\":4280:4286   */\n      dup5\n        /* \"#utility.yul\":4236:4307   */\n      tag_309\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4092:4314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4320:4380   */\n    tag_311:\n        /* \"#utility.yul\":4348:4351   */\n      0x00\n        /* \"#utility.yul\":4369:4374   */\n      dup2\n        /* \"#utility.yul\":4362:4374   */\n      swap1\n      pop\n        /* \"#utility.yul\":4320:4380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4528   */\n    tag_312:\n        /* \"#utility.yul\":4436:4445   */\n      0x00\n        /* \"#utility.yul\":4469:4522   */\n      tag_397\n        /* \"#utility.yul\":4487:4521   */\n      tag_398\n        /* \"#utility.yul\":4496:4520   */\n      tag_399\n        /* \"#utility.yul\":4514:4519   */\n      dup5\n        /* \"#utility.yul\":4496:4520   */\n      tag_304\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4487:4521   */\n      tag_311\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4469:4522   */\n      tag_304\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4456:4522   */\n      swap1\n      pop\n        /* \"#utility.yul\":4386:4528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4534:4660   */\n    tag_313:\n        /* \"#utility.yul\":4584:4593   */\n      0x00\n        /* \"#utility.yul\":4617:4654   */\n      tag_401\n        /* \"#utility.yul\":4648:4653   */\n      dup3\n        /* \"#utility.yul\":4617:4654   */\n      tag_312\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4604:4654   */\n      swap1\n      pop\n        /* \"#utility.yul\":4534:4660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4666:4806   */\n    tag_314:\n        /* \"#utility.yul\":4730:4739   */\n      0x00\n        /* \"#utility.yul\":4763:4800   */\n      tag_403\n        /* \"#utility.yul\":4794:4799   */\n      dup3\n        /* \"#utility.yul\":4763:4800   */\n      tag_313\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4750:4800   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4812:4971   */\n    tag_315:\n        /* \"#utility.yul\":4913:4964   */\n      tag_405\n        /* \"#utility.yul\":4958:4963   */\n      dup2\n        /* \"#utility.yul\":4913:4964   */\n      tag_314\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4908:4911   */\n      dup3\n        /* \"#utility.yul\":4901:4965   */\n      mstore\n        /* \"#utility.yul\":4812:4971   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4977:5227   */\n    tag_57:\n        /* \"#utility.yul\":5084:5088   */\n      0x00\n        /* \"#utility.yul\":5122:5124   */\n      0x20\n        /* \"#utility.yul\":5111:5120   */\n      dup3\n        /* \"#utility.yul\":5107:5125   */\n      add\n        /* \"#utility.yul\":5099:5125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5135:5220   */\n      tag_407\n        /* \"#utility.yul\":5217:5218   */\n      0x00\n        /* \"#utility.yul\":5206:5215   */\n      dup4\n        /* \"#utility.yul\":5202:5219   */\n      add\n        /* \"#utility.yul\":5193:5199   */\n      dup5\n        /* \"#utility.yul\":5135:5220   */\n      tag_315\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4977:5227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5233:5707   */\n    tag_60:\n        /* \"#utility.yul\":5301:5307   */\n      0x00\n        /* \"#utility.yul\":5309:5315   */\n      0x00\n        /* \"#utility.yul\":5358:5360   */\n      0x40\n        /* \"#utility.yul\":5346:5355   */\n      dup4\n        /* \"#utility.yul\":5337:5344   */\n      dup6\n        /* \"#utility.yul\":5333:5356   */\n      sub\n        /* \"#utility.yul\":5329:5361   */\n      slt\n        /* \"#utility.yul\":5326:5445   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":5364:5443   */\n      tag_410\n      tag_296\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5326:5445   */\n    tag_409:\n        /* \"#utility.yul\":5484:5485   */\n      0x00\n        /* \"#utility.yul\":5509:5562   */\n      tag_411\n        /* \"#utility.yul\":5554:5561   */\n      dup6\n        /* \"#utility.yul\":5545:5551   */\n      dup3\n        /* \"#utility.yul\":5534:5543   */\n      dup7\n        /* \"#utility.yul\":5530:5552   */\n      add\n        /* \"#utility.yul\":5509:5562   */\n      tag_300\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5499:5562   */\n      swap3\n      pop\n        /* \"#utility.yul\":5455:5572   */\n      pop\n        /* \"#utility.yul\":5611:5613   */\n      0x20\n        /* \"#utility.yul\":5637:5690   */\n      tag_412\n        /* \"#utility.yul\":5682:5689   */\n      dup6\n        /* \"#utility.yul\":5673:5679   */\n      dup3\n        /* \"#utility.yul\":5662:5671   */\n      dup7\n        /* \"#utility.yul\":5658:5680   */\n      add\n        /* \"#utility.yul\":5637:5690   */\n      tag_300\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5627:5690   */\n      swap2\n      pop\n        /* \"#utility.yul\":5582:5700   */\n      pop\n        /* \"#utility.yul\":5233:5707   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5713:6042   */\n    tag_75:\n        /* \"#utility.yul\":5772:5778   */\n      0x00\n        /* \"#utility.yul\":5821:5823   */\n      0x20\n        /* \"#utility.yul\":5809:5818   */\n      dup3\n        /* \"#utility.yul\":5800:5807   */\n      dup5\n        /* \"#utility.yul\":5796:5819   */\n      sub\n        /* \"#utility.yul\":5792:5824   */\n      slt\n        /* \"#utility.yul\":5789:5908   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5827:5906   */\n      tag_415\n      tag_296\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5789:5908   */\n    tag_414:\n        /* \"#utility.yul\":5947:5948   */\n      0x00\n        /* \"#utility.yul\":5972:6025   */\n      tag_416\n        /* \"#utility.yul\":6017:6024   */\n      dup5\n        /* \"#utility.yul\":6008:6014   */\n      dup3\n        /* \"#utility.yul\":5997:6006   */\n      dup6\n        /* \"#utility.yul\":5993:6015   */\n      add\n        /* \"#utility.yul\":5972:6025   */\n      tag_307\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5962:6025   */\n      swap2\n      pop\n        /* \"#utility.yul\":5918:6035   */\n      pop\n        /* \"#utility.yul\":5713:6042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6048:6700   */\n    tag_84:\n        /* \"#utility.yul\":6247:6251   */\n      0x00\n        /* \"#utility.yul\":6285:6288   */\n      0xa0\n        /* \"#utility.yul\":6274:6283   */\n      dup3\n        /* \"#utility.yul\":6270:6289   */\n      add\n        /* \"#utility.yul\":6262:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6299:6370   */\n      tag_418\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6356:6365   */\n      dup4\n        /* \"#utility.yul\":6352:6369   */\n      add\n        /* \"#utility.yul\":6343:6349   */\n      dup9\n        /* \"#utility.yul\":6299:6370   */\n      tag_308\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6380:6452   */\n      tag_419\n        /* \"#utility.yul\":6448:6450   */\n      0x20\n        /* \"#utility.yul\":6437:6446   */\n      dup4\n        /* \"#utility.yul\":6433:6451   */\n      add\n        /* \"#utility.yul\":6424:6430   */\n      dup8\n        /* \"#utility.yul\":6380:6452   */\n      tag_308\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6462:6534   */\n      tag_420\n        /* \"#utility.yul\":6530:6532   */\n      0x40\n        /* \"#utility.yul\":6519:6528   */\n      dup4\n        /* \"#utility.yul\":6515:6533   */\n      add\n        /* \"#utility.yul\":6506:6512   */\n      dup7\n        /* \"#utility.yul\":6462:6534   */\n      tag_308\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6544:6616   */\n      tag_421\n        /* \"#utility.yul\":6612:6614   */\n      0x60\n        /* \"#utility.yul\":6601:6610   */\n      dup4\n        /* \"#utility.yul\":6597:6615   */\n      add\n        /* \"#utility.yul\":6588:6594   */\n      dup6\n        /* \"#utility.yul\":6544:6616   */\n      tag_308\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6626:6693   */\n      tag_422\n        /* \"#utility.yul\":6688:6691   */\n      0x80\n        /* \"#utility.yul\":6677:6686   */\n      dup4\n        /* \"#utility.yul\":6673:6692   */\n      add\n        /* \"#utility.yul\":6664:6670   */\n      dup5\n        /* \"#utility.yul\":6626:6693   */\n      tag_310\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6048:6700   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6706:7471   */\n    tag_93:\n        /* \"#utility.yul\":6792:6798   */\n      0x00\n        /* \"#utility.yul\":6800:6806   */\n      0x00\n        /* \"#utility.yul\":6808:6814   */\n      0x00\n        /* \"#utility.yul\":6816:6822   */\n      0x00\n        /* \"#utility.yul\":6865:6868   */\n      0x80\n        /* \"#utility.yul\":6853:6862   */\n      dup6\n        /* \"#utility.yul\":6844:6851   */\n      dup8\n        /* \"#utility.yul\":6840:6863   */\n      sub\n        /* \"#utility.yul\":6836:6869   */\n      slt\n        /* \"#utility.yul\":6833:6953   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6872:6951   */\n      tag_425\n      tag_296\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6833:6953   */\n    tag_424:\n        /* \"#utility.yul\":6992:6993   */\n      0x00\n        /* \"#utility.yul\":7017:7070   */\n      tag_426\n        /* \"#utility.yul\":7062:7069   */\n      dup8\n        /* \"#utility.yul\":7053:7059   */\n      dup3\n        /* \"#utility.yul\":7042:7051   */\n      dup9\n        /* \"#utility.yul\":7038:7060   */\n      add\n        /* \"#utility.yul\":7017:7070   */\n      tag_307\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7007:7070   */\n      swap5\n      pop\n        /* \"#utility.yul\":6963:7080   */\n      pop\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7145:7198   */\n      tag_427\n        /* \"#utility.yul\":7190:7197   */\n      dup8\n        /* \"#utility.yul\":7181:7187   */\n      dup3\n        /* \"#utility.yul\":7170:7179   */\n      dup9\n        /* \"#utility.yul\":7166:7188   */\n      add\n        /* \"#utility.yul\":7145:7198   */\n      tag_300\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7135:7198   */\n      swap4\n      pop\n        /* \"#utility.yul\":7090:7208   */\n      pop\n        /* \"#utility.yul\":7247:7249   */\n      0x40\n        /* \"#utility.yul\":7273:7326   */\n      tag_428\n        /* \"#utility.yul\":7318:7325   */\n      dup8\n        /* \"#utility.yul\":7309:7315   */\n      dup3\n        /* \"#utility.yul\":7298:7307   */\n      dup9\n        /* \"#utility.yul\":7294:7316   */\n      add\n        /* \"#utility.yul\":7273:7326   */\n      tag_300\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7263:7326   */\n      swap3\n      pop\n        /* \"#utility.yul\":7218:7336   */\n      pop\n        /* \"#utility.yul\":7375:7377   */\n      0x60\n        /* \"#utility.yul\":7401:7454   */\n      tag_429\n        /* \"#utility.yul\":7446:7453   */\n      dup8\n        /* \"#utility.yul\":7437:7443   */\n      dup3\n        /* \"#utility.yul\":7426:7435   */\n      dup9\n        /* \"#utility.yul\":7422:7444   */\n      add\n        /* \"#utility.yul\":7401:7454   */\n      tag_300\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7391:7454   */\n      swap2\n      pop\n        /* \"#utility.yul\":7346:7464   */\n      pop\n        /* \"#utility.yul\":6706:7471   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7477:7646   */\n    tag_316:\n        /* \"#utility.yul\":7561:7572   */\n      0x00\n        /* \"#utility.yul\":7595:7601   */\n      dup3\n        /* \"#utility.yul\":7590:7593   */\n      dup3\n        /* \"#utility.yul\":7583:7602   */\n      mstore\n        /* \"#utility.yul\":7635:7639   */\n      0x20\n        /* \"#utility.yul\":7630:7633   */\n      dup3\n        /* \"#utility.yul\":7626:7640   */\n      add\n        /* \"#utility.yul\":7611:7640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7477:7646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:7820   */\n    tag_317:\n        /* \"#utility.yul\":7792:7812   */\n      0x496e76616c6964207061636b6167652049440000000000000000000000000000\n        /* \"#utility.yul\":7788:7789   */\n      0x00\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7776:7790   */\n      add\n        /* \"#utility.yul\":7769:7813   */\n      mstore\n        /* \"#utility.yul\":7652:7820   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7826:8192   */\n    tag_318:\n        /* \"#utility.yul\":7968:7971   */\n      0x00\n        /* \"#utility.yul\":7989:8056   */\n      tag_433\n        /* \"#utility.yul\":8053:8055   */\n      0x12\n        /* \"#utility.yul\":8048:8051   */\n      dup4\n        /* \"#utility.yul\":7989:8056   */\n      tag_316\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7982:8056   */\n      swap2\n      pop\n        /* \"#utility.yul\":8065:8158   */\n      tag_434\n        /* \"#utility.yul\":8154:8157   */\n      dup3\n        /* \"#utility.yul\":8065:8158   */\n      tag_317\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8183:8185   */\n      0x20\n        /* \"#utility.yul\":8178:8181   */\n      dup3\n        /* \"#utility.yul\":8174:8186   */\n      add\n        /* \"#utility.yul\":8167:8186   */\n      swap1\n      pop\n        /* \"#utility.yul\":7826:8192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8198:8617   */\n    tag_104:\n        /* \"#utility.yul\":8364:8368   */\n      0x00\n        /* \"#utility.yul\":8402:8404   */\n      0x20\n        /* \"#utility.yul\":8391:8400   */\n      dup3\n        /* \"#utility.yul\":8387:8405   */\n      add\n        /* \"#utility.yul\":8379:8405   */\n      swap1\n      pop\n        /* \"#utility.yul\":8451:8460   */\n      dup2\n        /* \"#utility.yul\":8445:8449   */\n      dup2\n        /* \"#utility.yul\":8441:8461   */\n      sub\n        /* \"#utility.yul\":8437:8438   */\n      0x00\n        /* \"#utility.yul\":8426:8435   */\n      dup4\n        /* \"#utility.yul\":8422:8439   */\n      add\n        /* \"#utility.yul\":8415:8462   */\n      mstore\n        /* \"#utility.yul\":8479:8610   */\n      tag_436\n        /* \"#utility.yul\":8605:8609   */\n      dup2\n        /* \"#utility.yul\":8479:8610   */\n      tag_318\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8471:8610   */\n      swap1\n      pop\n        /* \"#utility.yul\":8198:8617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8623:8803   */\n    tag_107:\n        /* \"#utility.yul\":8671:8748   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8668:8669   */\n      0x00\n        /* \"#utility.yul\":8661:8749   */\n      mstore\n        /* \"#utility.yul\":8768:8772   */\n      0x32\n        /* \"#utility.yul\":8765:8766   */\n      0x04\n        /* \"#utility.yul\":8758:8773   */\n      mstore\n        /* \"#utility.yul\":8792:8796   */\n      0x24\n        /* \"#utility.yul\":8789:8790   */\n      0x00\n        /* \"#utility.yul\":8782:8797   */\n      revert\n        /* \"#utility.yul\":8809:8973   */\n    tag_319:\n        /* \"#utility.yul\":8949:8965   */\n      0x4d61782066656520697320313025000000000000000000000000000000000000\n        /* \"#utility.yul\":8945:8946   */\n      0x00\n        /* \"#utility.yul\":8937:8943   */\n      dup3\n        /* \"#utility.yul\":8933:8947   */\n      add\n        /* \"#utility.yul\":8926:8966   */\n      mstore\n        /* \"#utility.yul\":8809:8973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8979:9345   */\n    tag_320:\n        /* \"#utility.yul\":9121:9124   */\n      0x00\n        /* \"#utility.yul\":9142:9209   */\n      tag_440\n        /* \"#utility.yul\":9206:9208   */\n      0x0e\n        /* \"#utility.yul\":9201:9204   */\n      dup4\n        /* \"#utility.yul\":9142:9209   */\n      tag_316\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9135:9209   */\n      swap2\n      pop\n        /* \"#utility.yul\":9218:9311   */\n      tag_441\n        /* \"#utility.yul\":9307:9310   */\n      dup3\n        /* \"#utility.yul\":9218:9311   */\n      tag_319\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9336:9338   */\n      0x20\n        /* \"#utility.yul\":9331:9334   */\n      dup3\n        /* \"#utility.yul\":9327:9339   */\n      add\n        /* \"#utility.yul\":9320:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":8979:9345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9351:9770   */\n    tag_114:\n        /* \"#utility.yul\":9517:9521   */\n      0x00\n        /* \"#utility.yul\":9555:9557   */\n      0x20\n        /* \"#utility.yul\":9544:9553   */\n      dup3\n        /* \"#utility.yul\":9540:9558   */\n      add\n        /* \"#utility.yul\":9532:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9604:9613   */\n      dup2\n        /* \"#utility.yul\":9598:9602   */\n      dup2\n        /* \"#utility.yul\":9594:9614   */\n      sub\n        /* \"#utility.yul\":9590:9591   */\n      0x00\n        /* \"#utility.yul\":9579:9588   */\n      dup4\n        /* \"#utility.yul\":9575:9592   */\n      add\n        /* \"#utility.yul\":9568:9615   */\n      mstore\n        /* \"#utility.yul\":9632:9763   */\n      tag_443\n        /* \"#utility.yul\":9758:9762   */\n      dup2\n        /* \"#utility.yul\":9632:9763   */\n      tag_320\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9624:9763   */\n      swap1\n      pop\n        /* \"#utility.yul\":9351:9770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9776:9956   */\n    tag_321:\n        /* \"#utility.yul\":9824:9901   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9821:9822   */\n      0x00\n        /* \"#utility.yul\":9814:9902   */\n      mstore\n        /* \"#utility.yul\":9921:9925   */\n      0x11\n        /* \"#utility.yul\":9918:9919   */\n      0x04\n        /* \"#utility.yul\":9911:9926   */\n      mstore\n        /* \"#utility.yul\":9945:9949   */\n      0x24\n        /* \"#utility.yul\":9942:9943   */\n      0x00\n        /* \"#utility.yul\":9935:9950   */\n      revert\n        /* \"#utility.yul\":9962:10156   */\n    tag_124:\n        /* \"#utility.yul\":10002:10006   */\n      0x00\n        /* \"#utility.yul\":10022:10042   */\n      tag_446\n        /* \"#utility.yul\":10040:10041   */\n      dup3\n        /* \"#utility.yul\":10022:10042   */\n      tag_298\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10017:10042   */\n      swap2\n      pop\n        /* \"#utility.yul\":10056:10076   */\n      tag_447\n        /* \"#utility.yul\":10074:10075   */\n      dup4\n        /* \"#utility.yul\":10056:10076   */\n      tag_298\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10051:10076   */\n      swap3\n      pop\n        /* \"#utility.yul\":10100:10101   */\n      dup3\n        /* \"#utility.yul\":10097:10098   */\n      dup3\n        /* \"#utility.yul\":10093:10102   */\n      sub\n        /* \"#utility.yul\":10085:10102   */\n      swap1\n      pop\n        /* \"#utility.yul\":10124:10125   */\n      dup2\n        /* \"#utility.yul\":10118:10122   */\n      dup2\n        /* \"#utility.yul\":10115:10126   */\n      gt\n        /* \"#utility.yul\":10112:10149   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":10129:10147   */\n      tag_449\n      tag_321\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10112:10149   */\n    tag_448:\n        /* \"#utility.yul\":9962:10156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10162:10572   */\n    tag_126:\n        /* \"#utility.yul\":10202:10209   */\n      0x00\n        /* \"#utility.yul\":10225:10245   */\n      tag_451\n        /* \"#utility.yul\":10243:10244   */\n      dup3\n        /* \"#utility.yul\":10225:10245   */\n      tag_298\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10220:10245   */\n      swap2\n      pop\n        /* \"#utility.yul\":10259:10279   */\n      tag_452\n        /* \"#utility.yul\":10277:10278   */\n      dup4\n        /* \"#utility.yul\":10259:10279   */\n      tag_298\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10254:10279   */\n      swap3\n      pop\n        /* \"#utility.yul\":10314:10315   */\n      dup3\n        /* \"#utility.yul\":10311:10312   */\n      dup3\n        /* \"#utility.yul\":10307:10316   */\n      mul\n        /* \"#utility.yul\":10336:10366   */\n      tag_453\n        /* \"#utility.yul\":10354:10365   */\n      dup2\n        /* \"#utility.yul\":10336:10366   */\n      tag_298\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10325:10366   */\n      swap2\n      pop\n        /* \"#utility.yul\":10515:10516   */\n      dup3\n        /* \"#utility.yul\":10506:10513   */\n      dup3\n        /* \"#utility.yul\":10502:10517   */\n      div\n        /* \"#utility.yul\":10499:10500   */\n      dup5\n        /* \"#utility.yul\":10496:10518   */\n      eq\n        /* \"#utility.yul\":10476:10477   */\n      dup4\n        /* \"#utility.yul\":10469:10478   */\n      iszero\n        /* \"#utility.yul\":10449:10532   */\n      or\n        /* \"#utility.yul\":10426:10565   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":10545:10563   */\n      tag_455\n      tag_321\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10426:10565   */\n    tag_454:\n        /* \"#utility.yul\":10210:10572   */\n      pop\n        /* \"#utility.yul\":10162:10572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10578:10758   */\n    tag_322:\n        /* \"#utility.yul\":10626:10703   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10623:10624   */\n      0x00\n        /* \"#utility.yul\":10616:10704   */\n      mstore\n        /* \"#utility.yul\":10723:10727   */\n      0x12\n        /* \"#utility.yul\":10720:10721   */\n      0x04\n        /* \"#utility.yul\":10713:10728   */\n      mstore\n        /* \"#utility.yul\":10747:10751   */\n      0x24\n        /* \"#utility.yul\":10744:10745   */\n      0x00\n        /* \"#utility.yul\":10737:10752   */\n      revert\n        /* \"#utility.yul\":10764:10949   */\n    tag_128:\n        /* \"#utility.yul\":10804:10805   */\n      0x00\n        /* \"#utility.yul\":10821:10841   */\n      tag_458\n        /* \"#utility.yul\":10839:10840   */\n      dup3\n        /* \"#utility.yul\":10821:10841   */\n      tag_298\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10816:10841   */\n      swap2\n      pop\n        /* \"#utility.yul\":10855:10875   */\n      tag_459\n        /* \"#utility.yul\":10873:10874   */\n      dup4\n        /* \"#utility.yul\":10855:10875   */\n      tag_298\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10850:10875   */\n      swap3\n      pop\n        /* \"#utility.yul\":10894:10895   */\n      dup3\n        /* \"#utility.yul\":10884:10919   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10899:10917   */\n      tag_461\n      tag_322\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10884:10919   */\n    tag_460:\n        /* \"#utility.yul\":10941:10942   */\n      dup3\n        /* \"#utility.yul\":10938:10939   */\n      dup3\n        /* \"#utility.yul\":10934:10943   */\n      div\n        /* \"#utility.yul\":10929:10943   */\n      swap1\n      pop\n        /* \"#utility.yul\":10764:10949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10955:11122   */\n    tag_323:\n        /* \"#utility.yul\":11095:11114   */\n      0x4f6e6c7920454f412063616e2063616c6c000000000000000000000000000000\n        /* \"#utility.yul\":11091:11092   */\n      0x00\n        /* \"#utility.yul\":11083:11089   */\n      dup3\n        /* \"#utility.yul\":11079:11093   */\n      add\n        /* \"#utility.yul\":11072:11115   */\n      mstore\n        /* \"#utility.yul\":10955:11122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11128:11494   */\n    tag_324:\n        /* \"#utility.yul\":11270:11273   */\n      0x00\n        /* \"#utility.yul\":11291:11358   */\n      tag_464\n        /* \"#utility.yul\":11355:11357   */\n      0x11\n        /* \"#utility.yul\":11350:11353   */\n      dup4\n        /* \"#utility.yul\":11291:11358   */\n      tag_316\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11284:11358   */\n      swap2\n      pop\n        /* \"#utility.yul\":11367:11460   */\n      tag_465\n        /* \"#utility.yul\":11456:11459   */\n      dup3\n        /* \"#utility.yul\":11367:11460   */\n      tag_323\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11485:11487   */\n      0x20\n        /* \"#utility.yul\":11480:11483   */\n      dup3\n        /* \"#utility.yul\":11476:11488   */\n      add\n        /* \"#utility.yul\":11469:11488   */\n      swap1\n      pop\n        /* \"#utility.yul\":11128:11494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11500:11919   */\n    tag_137:\n        /* \"#utility.yul\":11666:11670   */\n      0x00\n        /* \"#utility.yul\":11704:11706   */\n      0x20\n        /* \"#utility.yul\":11693:11702   */\n      dup3\n        /* \"#utility.yul\":11689:11707   */\n      add\n        /* \"#utility.yul\":11681:11707   */\n      swap1\n      pop\n        /* \"#utility.yul\":11753:11762   */\n      dup2\n        /* \"#utility.yul\":11747:11751   */\n      dup2\n        /* \"#utility.yul\":11743:11763   */\n      sub\n        /* \"#utility.yul\":11739:11740   */\n      0x00\n        /* \"#utility.yul\":11728:11737   */\n      dup4\n        /* \"#utility.yul\":11724:11741   */\n      add\n        /* \"#utility.yul\":11717:11764   */\n      mstore\n        /* \"#utility.yul\":11781:11912   */\n      tag_467\n        /* \"#utility.yul\":11907:11911   */\n      dup2\n        /* \"#utility.yul\":11781:11912   */\n      tag_324\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11773:11912   */\n      swap1\n      pop\n        /* \"#utility.yul\":11500:11919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11925:12090   */\n    tag_325:\n        /* \"#utility.yul\":12065:12082   */\n      0x4e6f20616374697665207374616b650000000000000000000000000000000000\n        /* \"#utility.yul\":12061:12062   */\n      0x00\n        /* \"#utility.yul\":12053:12059   */\n      dup3\n        /* \"#utility.yul\":12049:12063   */\n      add\n        /* \"#utility.yul\":12042:12083   */\n      mstore\n        /* \"#utility.yul\":11925:12090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12096:12462   */\n    tag_326:\n        /* \"#utility.yul\":12238:12241   */\n      0x00\n        /* \"#utility.yul\":12259:12326   */\n      tag_470\n        /* \"#utility.yul\":12323:12325   */\n      0x0f\n        /* \"#utility.yul\":12318:12321   */\n      dup4\n        /* \"#utility.yul\":12259:12326   */\n      tag_316\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12252:12326   */\n      swap2\n      pop\n        /* \"#utility.yul\":12335:12428   */\n      tag_471\n        /* \"#utility.yul\":12424:12427   */\n      dup3\n        /* \"#utility.yul\":12335:12428   */\n      tag_325\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12453:12455   */\n      0x20\n        /* \"#utility.yul\":12448:12451   */\n      dup3\n        /* \"#utility.yul\":12444:12456   */\n      add\n        /* \"#utility.yul\":12437:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12096:12462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12468:12887   */\n    tag_144:\n        /* \"#utility.yul\":12634:12638   */\n      0x00\n        /* \"#utility.yul\":12672:12674   */\n      0x20\n        /* \"#utility.yul\":12661:12670   */\n      dup3\n        /* \"#utility.yul\":12657:12675   */\n      add\n        /* \"#utility.yul\":12649:12675   */\n      swap1\n      pop\n        /* \"#utility.yul\":12721:12730   */\n      dup2\n        /* \"#utility.yul\":12715:12719   */\n      dup2\n        /* \"#utility.yul\":12711:12731   */\n      sub\n        /* \"#utility.yul\":12707:12708   */\n      0x00\n        /* \"#utility.yul\":12696:12705   */\n      dup4\n        /* \"#utility.yul\":12692:12709   */\n      add\n        /* \"#utility.yul\":12685:12732   */\n      mstore\n        /* \"#utility.yul\":12749:12880   */\n      tag_473\n        /* \"#utility.yul\":12875:12879   */\n      dup2\n        /* \"#utility.yul\":12749:12880   */\n      tag_326\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12741:12880   */\n      swap1\n      pop\n        /* \"#utility.yul\":12468:12887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12893:13084   */\n    tag_149:\n        /* \"#utility.yul\":12933:12936   */\n      0x00\n        /* \"#utility.yul\":12952:12972   */\n      tag_475\n        /* \"#utility.yul\":12970:12971   */\n      dup3\n        /* \"#utility.yul\":12952:12972   */\n      tag_298\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12947:12972   */\n      swap2\n      pop\n        /* \"#utility.yul\":12986:13006   */\n      tag_476\n        /* \"#utility.yul\":13004:13005   */\n      dup4\n        /* \"#utility.yul\":12986:13006   */\n      tag_298\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12981:13006   */\n      swap3\n      pop\n        /* \"#utility.yul\":13029:13030   */\n      dup3\n        /* \"#utility.yul\":13026:13027   */\n      dup3\n        /* \"#utility.yul\":13022:13031   */\n      add\n        /* \"#utility.yul\":13015:13031   */\n      swap1\n      pop\n        /* \"#utility.yul\":13050:13053   */\n      dup1\n        /* \"#utility.yul\":13047:13048   */\n      dup3\n        /* \"#utility.yul\":13044:13054   */\n      gt\n        /* \"#utility.yul\":13041:13077   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":13057:13075   */\n      tag_478\n      tag_321\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13041:13077   */\n    tag_477:\n        /* \"#utility.yul\":12893:13084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13090:13252   */\n    tag_327:\n        /* \"#utility.yul\":13230:13244   */\n      0x5374696c6c206c6f636b65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":13226:13227   */\n      0x00\n        /* \"#utility.yul\":13218:13224   */\n      dup3\n        /* \"#utility.yul\":13214:13228   */\n      add\n        /* \"#utility.yul\":13207:13245   */\n      mstore\n        /* \"#utility.yul\":13090:13252   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13258:13624   */\n    tag_328:\n        /* \"#utility.yul\":13400:13403   */\n      0x00\n        /* \"#utility.yul\":13421:13488   */\n      tag_481\n        /* \"#utility.yul\":13485:13487   */\n      0x0c\n        /* \"#utility.yul\":13480:13483   */\n      dup4\n        /* \"#utility.yul\":13421:13488   */\n      tag_316\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":13414:13488   */\n      swap2\n      pop\n        /* \"#utility.yul\":13497:13590   */\n      tag_482\n        /* \"#utility.yul\":13586:13589   */\n      dup3\n        /* \"#utility.yul\":13497:13590   */\n      tag_327\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13615:13617   */\n      0x20\n        /* \"#utility.yul\":13610:13613   */\n      dup3\n        /* \"#utility.yul\":13606:13618   */\n      add\n        /* \"#utility.yul\":13599:13618   */\n      swap1\n      pop\n        /* \"#utility.yul\":13258:13624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13630:14049   */\n    tag_152:\n        /* \"#utility.yul\":13796:13800   */\n      0x00\n        /* \"#utility.yul\":13834:13836   */\n      0x20\n        /* \"#utility.yul\":13823:13832   */\n      dup3\n        /* \"#utility.yul\":13819:13837   */\n      add\n        /* \"#utility.yul\":13811:13837   */\n      swap1\n      pop\n        /* \"#utility.yul\":13883:13892   */\n      dup2\n        /* \"#utility.yul\":13877:13881   */\n      dup2\n        /* \"#utility.yul\":13873:13893   */\n      sub\n        /* \"#utility.yul\":13869:13870   */\n      0x00\n        /* \"#utility.yul\":13858:13867   */\n      dup4\n        /* \"#utility.yul\":13854:13871   */\n      add\n        /* \"#utility.yul\":13847:13894   */\n      mstore\n        /* \"#utility.yul\":13911:14042   */\n      tag_484\n        /* \"#utility.yul\":14037:14041   */\n      dup2\n        /* \"#utility.yul\":13911:14042   */\n      tag_328\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13903:14042   */\n      swap1\n      pop\n        /* \"#utility.yul\":13630:14049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14055:14497   */\n    tag_162:\n        /* \"#utility.yul\":14204:14208   */\n      0x00\n        /* \"#utility.yul\":14242:14244   */\n      0x60\n        /* \"#utility.yul\":14231:14240   */\n      dup3\n        /* \"#utility.yul\":14227:14245   */\n      add\n        /* \"#utility.yul\":14219:14245   */\n      swap1\n      pop\n        /* \"#utility.yul\":14255:14326   */\n      tag_486\n        /* \"#utility.yul\":14323:14324   */\n      0x00\n        /* \"#utility.yul\":14312:14321   */\n      dup4\n        /* \"#utility.yul\":14308:14325   */\n      add\n        /* \"#utility.yul\":14299:14305   */\n      dup7\n        /* \"#utility.yul\":14255:14326   */\n      tag_308\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14336:14408   */\n      tag_487\n        /* \"#utility.yul\":14404:14406   */\n      0x20\n        /* \"#utility.yul\":14393:14402   */\n      dup4\n        /* \"#utility.yul\":14389:14407   */\n      add\n        /* \"#utility.yul\":14380:14386   */\n      dup6\n        /* \"#utility.yul\":14336:14408   */\n      tag_308\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14418:14490   */\n      tag_488\n        /* \"#utility.yul\":14486:14488   */\n      0x40\n        /* \"#utility.yul\":14475:14484   */\n      dup4\n        /* \"#utility.yul\":14471:14489   */\n      add\n        /* \"#utility.yul\":14462:14468   */\n      dup5\n        /* \"#utility.yul\":14418:14490   */\n      tag_308\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14055:14497   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14503:14672   */\n    tag_329:\n        /* \"#utility.yul\":14643:14664   */\n      0x4e6f206665657320746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":14639:14640   */\n      0x00\n        /* \"#utility.yul\":14631:14637   */\n      dup3\n        /* \"#utility.yul\":14627:14641   */\n      add\n        /* \"#utility.yul\":14620:14665   */\n      mstore\n        /* \"#utility.yul\":14503:14672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14678:15044   */\n    tag_330:\n        /* \"#utility.yul\":14820:14823   */\n      0x00\n        /* \"#utility.yul\":14841:14908   */\n      tag_491\n        /* \"#utility.yul\":14905:14907   */\n      0x13\n        /* \"#utility.yul\":14900:14903   */\n      dup4\n        /* \"#utility.yul\":14841:14908   */\n      tag_316\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14834:14908   */\n      swap2\n      pop\n        /* \"#utility.yul\":14917:15010   */\n      tag_492\n        /* \"#utility.yul\":15006:15009   */\n      dup3\n        /* \"#utility.yul\":14917:15010   */\n      tag_329\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15035:15037   */\n      0x20\n        /* \"#utility.yul\":15030:15033   */\n      dup3\n        /* \"#utility.yul\":15026:15038   */\n      add\n        /* \"#utility.yul\":15019:15038   */\n      swap1\n      pop\n        /* \"#utility.yul\":14678:15044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15050:15469   */\n    tag_172:\n        /* \"#utility.yul\":15216:15220   */\n      0x00\n        /* \"#utility.yul\":15254:15256   */\n      0x20\n        /* \"#utility.yul\":15243:15252   */\n      dup3\n        /* \"#utility.yul\":15239:15257   */\n      add\n        /* \"#utility.yul\":15231:15257   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15312   */\n      dup2\n        /* \"#utility.yul\":15297:15301   */\n      dup2\n        /* \"#utility.yul\":15293:15313   */\n      sub\n        /* \"#utility.yul\":15289:15290   */\n      0x00\n        /* \"#utility.yul\":15278:15287   */\n      dup4\n        /* \"#utility.yul\":15274:15291   */\n      add\n        /* \"#utility.yul\":15267:15314   */\n      mstore\n        /* \"#utility.yul\":15331:15462   */\n      tag_494\n        /* \"#utility.yul\":15457:15461   */\n      dup2\n        /* \"#utility.yul\":15331:15462   */\n      tag_330\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15323:15462   */\n      swap1\n      pop\n        /* \"#utility.yul\":15050:15469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15475:15643   */\n    tag_331:\n        /* \"#utility.yul\":15615:15635   */\n      0x5061636b616765206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":15611:15612   */\n      0x00\n        /* \"#utility.yul\":15603:15609   */\n      dup3\n        /* \"#utility.yul\":15599:15613   */\n      add\n        /* \"#utility.yul\":15592:15636   */\n      mstore\n        /* \"#utility.yul\":15475:15643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15649:16015   */\n    tag_332:\n        /* \"#utility.yul\":15791:15794   */\n      0x00\n        /* \"#utility.yul\":15812:15879   */\n      tag_497\n        /* \"#utility.yul\":15876:15878   */\n      0x12\n        /* \"#utility.yul\":15871:15874   */\n      dup4\n        /* \"#utility.yul\":15812:15879   */\n      tag_316\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15805:15879   */\n      swap2\n      pop\n        /* \"#utility.yul\":15888:15981   */\n      tag_498\n        /* \"#utility.yul\":15977:15980   */\n      dup3\n        /* \"#utility.yul\":15888:15981   */\n      tag_331\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":16006:16008   */\n      0x20\n        /* \"#utility.yul\":16001:16004   */\n      dup3\n        /* \"#utility.yul\":15997:16009   */\n      add\n        /* \"#utility.yul\":15990:16009   */\n      swap1\n      pop\n        /* \"#utility.yul\":15649:16015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16021:16440   */\n    tag_199:\n        /* \"#utility.yul\":16187:16191   */\n      0x00\n        /* \"#utility.yul\":16225:16227   */\n      0x20\n        /* \"#utility.yul\":16214:16223   */\n      dup3\n        /* \"#utility.yul\":16210:16228   */\n      add\n        /* \"#utility.yul\":16202:16228   */\n      swap1\n      pop\n        /* \"#utility.yul\":16274:16283   */\n      dup2\n        /* \"#utility.yul\":16268:16272   */\n      dup2\n        /* \"#utility.yul\":16264:16284   */\n      sub\n        /* \"#utility.yul\":16260:16261   */\n      0x00\n        /* \"#utility.yul\":16249:16258   */\n      dup4\n        /* \"#utility.yul\":16245:16262   */\n      add\n        /* \"#utility.yul\":16238:16285   */\n      mstore\n        /* \"#utility.yul\":16302:16433   */\n      tag_500\n        /* \"#utility.yul\":16428:16432   */\n      dup2\n        /* \"#utility.yul\":16302:16433   */\n      tag_332\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16294:16433   */\n      swap1\n      pop\n        /* \"#utility.yul\":16021:16440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16446:16610   */\n    tag_333:\n        /* \"#utility.yul\":16586:16602   */\n      0x416d6f756e7420746f6f206c6f77000000000000000000000000000000000000\n        /* \"#utility.yul\":16582:16583   */\n      0x00\n        /* \"#utility.yul\":16574:16580   */\n      dup3\n        /* \"#utility.yul\":16570:16584   */\n      add\n        /* \"#utility.yul\":16563:16603   */\n      mstore\n        /* \"#utility.yul\":16446:16610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16616:16982   */\n    tag_334:\n        /* \"#utility.yul\":16758:16761   */\n      0x00\n        /* \"#utility.yul\":16779:16846   */\n      tag_503\n        /* \"#utility.yul\":16843:16845   */\n      0x0e\n        /* \"#utility.yul\":16838:16841   */\n      dup4\n        /* \"#utility.yul\":16779:16846   */\n      tag_316\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":16772:16846   */\n      swap2\n      pop\n        /* \"#utility.yul\":16855:16948   */\n      tag_504\n        /* \"#utility.yul\":16944:16947   */\n      dup3\n        /* \"#utility.yul\":16855:16948   */\n      tag_333\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16973:16975   */\n      0x20\n        /* \"#utility.yul\":16968:16971   */\n      dup3\n        /* \"#utility.yul\":16964:16976   */\n      add\n        /* \"#utility.yul\":16957:16976   */\n      swap1\n      pop\n        /* \"#utility.yul\":16616:16982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16988:17407   */\n    tag_202:\n        /* \"#utility.yul\":17154:17158   */\n      0x00\n        /* \"#utility.yul\":17192:17194   */\n      0x20\n        /* \"#utility.yul\":17181:17190   */\n      dup3\n        /* \"#utility.yul\":17177:17195   */\n      add\n        /* \"#utility.yul\":17169:17195   */\n      swap1\n      pop\n        /* \"#utility.yul\":17241:17250   */\n      dup2\n        /* \"#utility.yul\":17235:17239   */\n      dup2\n        /* \"#utility.yul\":17231:17251   */\n      sub\n        /* \"#utility.yul\":17227:17228   */\n      0x00\n        /* \"#utility.yul\":17216:17225   */\n      dup4\n        /* \"#utility.yul\":17212:17229   */\n      add\n        /* \"#utility.yul\":17205:17252   */\n      mstore\n        /* \"#utility.yul\":17269:17400   */\n      tag_506\n        /* \"#utility.yul\":17395:17399   */\n      dup2\n        /* \"#utility.yul\":17269:17400   */\n      tag_334\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17261:17400   */\n      swap1\n      pop\n        /* \"#utility.yul\":16988:17407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17413:17745   */\n    tag_207:\n        /* \"#utility.yul\":17534:17538   */\n      0x00\n        /* \"#utility.yul\":17572:17574   */\n      0x40\n        /* \"#utility.yul\":17561:17570   */\n      dup3\n        /* \"#utility.yul\":17557:17575   */\n      add\n        /* \"#utility.yul\":17549:17575   */\n      swap1\n      pop\n        /* \"#utility.yul\":17585:17656   */\n      tag_508\n        /* \"#utility.yul\":17653:17654   */\n      0x00\n        /* \"#utility.yul\":17642:17651   */\n      dup4\n        /* \"#utility.yul\":17638:17655   */\n      add\n        /* \"#utility.yul\":17629:17635   */\n      dup6\n        /* \"#utility.yul\":17585:17656   */\n      tag_308\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":17666:17738   */\n      tag_509\n        /* \"#utility.yul\":17734:17736   */\n      0x20\n        /* \"#utility.yul\":17723:17732   */\n      dup4\n        /* \"#utility.yul\":17719:17737   */\n      add\n        /* \"#utility.yul\":17710:17716   */\n      dup5\n        /* \"#utility.yul\":17666:17738   */\n      tag_308\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":17413:17745   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17751:18071   */\n    tag_222:\n        /* \"#utility.yul\":17866:17870   */\n      0x00\n        /* \"#utility.yul\":17904:17906   */\n      0x40\n        /* \"#utility.yul\":17893:17902   */\n      dup3\n        /* \"#utility.yul\":17889:17907   */\n      add\n        /* \"#utility.yul\":17881:17907   */\n      swap1\n      pop\n        /* \"#utility.yul\":17917:17988   */\n      tag_511\n        /* \"#utility.yul\":17985:17986   */\n      0x00\n        /* \"#utility.yul\":17974:17983   */\n      dup4\n        /* \"#utility.yul\":17970:17987   */\n      add\n        /* \"#utility.yul\":17961:17967   */\n      dup6\n        /* \"#utility.yul\":17917:17988   */\n      tag_308\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":17998:18064   */\n      tag_512\n        /* \"#utility.yul\":18060:18062   */\n      0x20\n        /* \"#utility.yul\":18049:18058   */\n      dup4\n        /* \"#utility.yul\":18045:18063   */\n      add\n        /* \"#utility.yul\":18036:18042   */\n      dup5\n        /* \"#utility.yul\":17998:18064   */\n      tag_310\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17751:18071   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18077:18251   */\n    tag_335:\n        /* \"#utility.yul\":18217:18243   */\n      0x5a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000\n        /* \"#utility.yul\":18213:18214   */\n      0x00\n        /* \"#utility.yul\":18205:18211   */\n      dup3\n        /* \"#utility.yul\":18201:18215   */\n      add\n        /* \"#utility.yul\":18194:18244   */\n      mstore\n        /* \"#utility.yul\":18077:18251   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18257:18623   */\n    tag_336:\n        /* \"#utility.yul\":18399:18402   */\n      0x00\n        /* \"#utility.yul\":18420:18487   */\n      tag_515\n        /* \"#utility.yul\":18484:18486   */\n      0x18\n        /* \"#utility.yul\":18479:18482   */\n      dup4\n        /* \"#utility.yul\":18420:18487   */\n      tag_316\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18413:18487   */\n      swap2\n      pop\n        /* \"#utility.yul\":18496:18589   */\n      tag_516\n        /* \"#utility.yul\":18585:18588   */\n      dup3\n        /* \"#utility.yul\":18496:18589   */\n      tag_335\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18614:18616   */\n      0x20\n        /* \"#utility.yul\":18609:18612   */\n      dup3\n        /* \"#utility.yul\":18605:18617   */\n      add\n        /* \"#utility.yul\":18598:18617   */\n      swap1\n      pop\n        /* \"#utility.yul\":18257:18623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18629:19048   */\n    tag_229:\n        /* \"#utility.yul\":18795:18799   */\n      0x00\n        /* \"#utility.yul\":18833:18835   */\n      0x20\n        /* \"#utility.yul\":18822:18831   */\n      dup3\n        /* \"#utility.yul\":18818:18836   */\n      add\n        /* \"#utility.yul\":18810:18836   */\n      swap1\n      pop\n        /* \"#utility.yul\":18882:18891   */\n      dup2\n        /* \"#utility.yul\":18876:18880   */\n      dup2\n        /* \"#utility.yul\":18872:18892   */\n      sub\n        /* \"#utility.yul\":18868:18869   */\n      0x00\n        /* \"#utility.yul\":18857:18866   */\n      dup4\n        /* \"#utility.yul\":18853:18870   */\n      add\n        /* \"#utility.yul\":18846:18893   */\n      mstore\n        /* \"#utility.yul\":18910:19041   */\n      tag_518\n        /* \"#utility.yul\":19036:19040   */\n      dup2\n        /* \"#utility.yul\":18910:19041   */\n      tag_336\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":18902:19041   */\n      swap1\n      pop\n        /* \"#utility.yul\":18629:19048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19054:19222   */\n    tag_337:\n        /* \"#utility.yul\":19194:19214   */\n      0x4e6f2072657761726420746f20636c61696d0000000000000000000000000000\n        /* \"#utility.yul\":19190:19191   */\n      0x00\n        /* \"#utility.yul\":19182:19188   */\n      dup3\n        /* \"#utility.yul\":19178:19192   */\n      add\n        /* \"#utility.yul\":19171:19215   */\n      mstore\n        /* \"#utility.yul\":19054:19222   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19228:19594   */\n    tag_338:\n        /* \"#utility.yul\":19370:19373   */\n      0x00\n        /* \"#utility.yul\":19391:19458   */\n      tag_521\n        /* \"#utility.yul\":19455:19457   */\n      0x12\n        /* \"#utility.yul\":19450:19453   */\n      dup4\n        /* \"#utility.yul\":19391:19458   */\n      tag_316\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":19384:19458   */\n      swap2\n      pop\n        /* \"#utility.yul\":19467:19560   */\n      tag_522\n        /* \"#utility.yul\":19556:19559   */\n      dup3\n        /* \"#utility.yul\":19467:19560   */\n      tag_337\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":19585:19587   */\n      0x20\n        /* \"#utility.yul\":19580:19583   */\n      dup3\n        /* \"#utility.yul\":19576:19588   */\n      add\n        /* \"#utility.yul\":19569:19588   */\n      swap1\n      pop\n        /* \"#utility.yul\":19228:19594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19600:20019   */\n    tag_244:\n        /* \"#utility.yul\":19766:19770   */\n      0x00\n        /* \"#utility.yul\":19804:19806   */\n      0x20\n        /* \"#utility.yul\":19793:19802   */\n      dup3\n        /* \"#utility.yul\":19789:19807   */\n      add\n        /* \"#utility.yul\":19781:19807   */\n      swap1\n      pop\n        /* \"#utility.yul\":19853:19862   */\n      dup2\n        /* \"#utility.yul\":19847:19851   */\n      dup2\n        /* \"#utility.yul\":19843:19863   */\n      sub\n        /* \"#utility.yul\":19839:19840   */\n      0x00\n        /* \"#utility.yul\":19828:19837   */\n      dup4\n        /* \"#utility.yul\":19824:19841   */\n      add\n        /* \"#utility.yul\":19817:19864   */\n      mstore\n        /* \"#utility.yul\":19881:20012   */\n      tag_524\n        /* \"#utility.yul\":20007:20011   */\n      dup2\n        /* \"#utility.yul\":19881:20012   */\n      tag_338\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":19873:20012   */\n      swap1\n      pop\n        /* \"#utility.yul\":19600:20019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20025:20788   */\n    tag_259:\n        /* \"#utility.yul\":20252:20256   */\n      0x00\n        /* \"#utility.yul\":20290:20293   */\n      0xc0\n        /* \"#utility.yul\":20279:20288   */\n      dup3\n        /* \"#utility.yul\":20275:20294   */\n      add\n        /* \"#utility.yul\":20267:20294   */\n      swap1\n      pop\n        /* \"#utility.yul\":20304:20375   */\n      tag_526\n        /* \"#utility.yul\":20372:20373   */\n      0x00\n        /* \"#utility.yul\":20361:20370   */\n      dup4\n        /* \"#utility.yul\":20357:20374   */\n      add\n        /* \"#utility.yul\":20348:20354   */\n      dup10\n        /* \"#utility.yul\":20304:20375   */\n      tag_308\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":20385:20457   */\n      tag_527\n        /* \"#utility.yul\":20453:20455   */\n      0x20\n        /* \"#utility.yul\":20442:20451   */\n      dup4\n        /* \"#utility.yul\":20438:20456   */\n      add\n        /* \"#utility.yul\":20429:20435   */\n      dup9\n        /* \"#utility.yul\":20385:20457   */\n      tag_309\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":20467:20539   */\n      tag_528\n        /* \"#utility.yul\":20535:20537   */\n      0x40\n        /* \"#utility.yul\":20524:20533   */\n      dup4\n        /* \"#utility.yul\":20520:20538   */\n      add\n        /* \"#utility.yul\":20511:20517   */\n      dup8\n        /* \"#utility.yul\":20467:20539   */\n      tag_308\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20549:20621   */\n      tag_529\n        /* \"#utility.yul\":20617:20619   */\n      0x60\n        /* \"#utility.yul\":20606:20615   */\n      dup4\n        /* \"#utility.yul\":20602:20620   */\n      add\n        /* \"#utility.yul\":20593:20599   */\n      dup7\n        /* \"#utility.yul\":20549:20621   */\n      tag_308\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":20631:20704   */\n      tag_530\n        /* \"#utility.yul\":20699:20702   */\n      0x80\n        /* \"#utility.yul\":20688:20697   */\n      dup4\n        /* \"#utility.yul\":20684:20703   */\n      add\n        /* \"#utility.yul\":20675:20681   */\n      dup6\n        /* \"#utility.yul\":20631:20704   */\n      tag_308\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":20714:20781   */\n      tag_531\n        /* \"#utility.yul\":20776:20779   */\n      0xa0\n        /* \"#utility.yul\":20765:20774   */\n      dup4\n        /* \"#utility.yul\":20761:20780   */\n      add\n        /* \"#utility.yul\":20752:20758   */\n      dup5\n        /* \"#utility.yul\":20714:20781   */\n      tag_310\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":20025:20788   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20794:20975   */\n    tag_339:\n        /* \"#utility.yul\":20934:20967   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20930:20931   */\n      0x00\n        /* \"#utility.yul\":20922:20928   */\n      dup3\n        /* \"#utility.yul\":20918:20932   */\n      add\n        /* \"#utility.yul\":20911:20968   */\n      mstore\n        /* \"#utility.yul\":20794:20975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20981:21347   */\n    tag_340:\n        /* \"#utility.yul\":21123:21126   */\n      0x00\n        /* \"#utility.yul\":21144:21211   */\n      tag_534\n        /* \"#utility.yul\":21208:21210   */\n      0x1f\n        /* \"#utility.yul\":21203:21206   */\n      dup4\n        /* \"#utility.yul\":21144:21211   */\n      tag_316\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21137:21211   */\n      swap2\n      pop\n        /* \"#utility.yul\":21220:21313   */\n      tag_535\n        /* \"#utility.yul\":21309:21312   */\n      dup3\n        /* \"#utility.yul\":21220:21313   */\n      tag_339\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":21338:21340   */\n      0x20\n        /* \"#utility.yul\":21333:21336   */\n      dup3\n        /* \"#utility.yul\":21329:21341   */\n      add\n        /* \"#utility.yul\":21322:21341   */\n      swap1\n      pop\n        /* \"#utility.yul\":20981:21347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21353:21772   */\n    tag_276:\n        /* \"#utility.yul\":21519:21523   */\n      0x00\n        /* \"#utility.yul\":21557:21559   */\n      0x20\n        /* \"#utility.yul\":21546:21555   */\n      dup3\n        /* \"#utility.yul\":21542:21560   */\n      add\n        /* \"#utility.yul\":21534:21560   */\n      swap1\n      pop\n        /* \"#utility.yul\":21606:21615   */\n      dup2\n        /* \"#utility.yul\":21600:21604   */\n      dup2\n        /* \"#utility.yul\":21596:21616   */\n      sub\n        /* \"#utility.yul\":21592:21593   */\n      0x00\n        /* \"#utility.yul\":21581:21590   */\n      dup4\n        /* \"#utility.yul\":21577:21594   */\n      add\n        /* \"#utility.yul\":21570:21617   */\n      mstore\n        /* \"#utility.yul\":21634:21765   */\n      tag_537\n        /* \"#utility.yul\":21760:21764   */\n      dup2\n        /* \"#utility.yul\":21634:21765   */\n      tag_340\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":21626:21765   */\n      swap1\n      pop\n        /* \"#utility.yul\":21353:21772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21778:22110   */\n    tag_280:\n        /* \"#utility.yul\":21899:21903   */\n      0x00\n        /* \"#utility.yul\":21937:21939   */\n      0x40\n        /* \"#utility.yul\":21926:21935   */\n      dup3\n        /* \"#utility.yul\":21922:21940   */\n      add\n        /* \"#utility.yul\":21914:21940   */\n      swap1\n      pop\n        /* \"#utility.yul\":21950:22021   */\n      tag_539\n        /* \"#utility.yul\":22018:22019   */\n      0x00\n        /* \"#utility.yul\":22007:22016   */\n      dup4\n        /* \"#utility.yul\":22003:22020   */\n      add\n        /* \"#utility.yul\":21994:22000   */\n      dup6\n        /* \"#utility.yul\":21950:22021   */\n      tag_309\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":22031:22103   */\n      tag_540\n        /* \"#utility.yul\":22099:22101   */\n      0x20\n        /* \"#utility.yul\":22088:22097   */\n      dup4\n        /* \"#utility.yul\":22084:22102   */\n      add\n        /* \"#utility.yul\":22075:22081   */\n      dup5\n        /* \"#utility.yul\":22031:22103   */\n      tag_308\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":21778:22110   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22116:22558   */\n    tag_287:\n        /* \"#utility.yul\":22265:22269   */\n      0x00\n        /* \"#utility.yul\":22303:22305   */\n      0x60\n        /* \"#utility.yul\":22292:22301   */\n      dup3\n        /* \"#utility.yul\":22288:22306   */\n      add\n        /* \"#utility.yul\":22280:22306   */\n      swap1\n      pop\n        /* \"#utility.yul\":22316:22387   */\n      tag_542\n        /* \"#utility.yul\":22384:22385   */\n      0x00\n        /* \"#utility.yul\":22373:22382   */\n      dup4\n        /* \"#utility.yul\":22369:22386   */\n      add\n        /* \"#utility.yul\":22360:22366   */\n      dup7\n        /* \"#utility.yul\":22316:22387   */\n      tag_309\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":22397:22469   */\n      tag_543\n        /* \"#utility.yul\":22465:22467   */\n      0x20\n        /* \"#utility.yul\":22454:22463   */\n      dup4\n        /* \"#utility.yul\":22450:22468   */\n      add\n        /* \"#utility.yul\":22441:22447   */\n      dup6\n        /* \"#utility.yul\":22397:22469   */\n      tag_309\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":22479:22551   */\n      tag_544\n        /* \"#utility.yul\":22547:22549   */\n      0x40\n        /* \"#utility.yul\":22536:22545   */\n      dup4\n        /* \"#utility.yul\":22532:22550   */\n      add\n        /* \"#utility.yul\":22523:22529   */\n      dup5\n        /* \"#utility.yul\":22479:22551   */\n      tag_308\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":22116:22558   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f55a8caa7105627505ba64834cec6b2b89bb7c04747b02264d5e91365e6a4ab64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1048": {
									"entryPoint": null,
									"id": 1048,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 534,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3985:10",
										"nodeType": "YulBlock",
										"src": "0:3985:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "956:552:10",
													"nodeType": "YulBlock",
													"src": "956:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:10",
																"nodeType": "YulBlock",
																"src": "1002:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:10"
																			},
																			"nativeSrc": "1004:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:10"
																		},
																		"nativeSrc": "1004:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:10"
																		},
																		"nativeSrc": "973:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:10"
																},
																"nativeSrc": "969:32:10",
																"nodeType": "YulFunctionCall",
																"src": "969:32:10"
															},
															"nativeSrc": "966:119:10",
															"nodeType": "YulIf",
															"src": "966:119:10"
														},
														{
															"nativeSrc": "1095:128:10",
															"nodeType": "YulBlock",
															"src": "1095:128:10",
															"statements": [
																{
																	"nativeSrc": "1110:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:10"
																				},
																				"nativeSrc": "1181:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:10"
																		},
																		"nativeSrc": "1149:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:10",
															"nodeType": "YulBlock",
															"src": "1233:129:10",
															"statements": [
																{
																	"nativeSrc": "1248:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:10"
																				},
																				"nativeSrc": "1320:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:10"
																		},
																		"nativeSrc": "1288:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:10",
															"nodeType": "YulBlock",
															"src": "1372:129:10",
															"statements": [
																{
																	"nativeSrc": "1387:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:10"
																				},
																				"nativeSrc": "1459:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:10"
																		},
																		"nativeSrc": "1427:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:10",
														"nodeType": "YulTypedName",
														"src": "910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:10",
														"nodeType": "YulTypedName",
														"src": "921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:10",
														"nodeType": "YulTypedName",
														"src": "933:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:10",
														"nodeType": "YulTypedName",
														"src": "941:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:10",
														"nodeType": "YulTypedName",
														"src": "949:6:10",
														"type": ""
													}
												],
												"src": "845:663:10"
											},
											{
												"body": {
													"nativeSrc": "1579:53:10",
													"nodeType": "YulBlock",
													"src": "1579:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:10"
																		},
																		"nativeSrc": "1601:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																},
																"nativeSrc": "1589:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:10"
															},
															"nativeSrc": "1589:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:10",
														"nodeType": "YulTypedName",
														"src": "1567:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:10",
														"nodeType": "YulTypedName",
														"src": "1574:3:10",
														"type": ""
													}
												],
												"src": "1514:118:10"
											},
											{
												"body": {
													"nativeSrc": "1736:124:10",
													"nodeType": "YulBlock",
													"src": "1736:124:10",
													"statements": [
														{
															"nativeSrc": "1746:26:10",
															"nodeType": "YulAssignment",
															"src": "1746:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:10"
																},
																"nativeSrc": "1754:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:10"
																		},
																		"nativeSrc": "1835:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:10"
																},
																"nativeSrc": "1782:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:10"
															},
															"nativeSrc": "1782:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:10",
														"nodeType": "YulTypedName",
														"src": "1708:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:10",
														"nodeType": "YulTypedName",
														"src": "1720:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:10",
														"nodeType": "YulTypedName",
														"src": "1731:4:10",
														"type": ""
													}
												],
												"src": "1638:222:10"
											},
											{
												"body": {
													"nativeSrc": "1962:73:10",
													"nodeType": "YulBlock",
													"src": "1962:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1979:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1979:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1984:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:10"
																},
																"nativeSrc": "1972:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1972:19:10"
															},
															"nativeSrc": "1972:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1972:19:10"
														},
														{
															"nativeSrc": "2000:29:10",
															"nodeType": "YulAssignment",
															"src": "2000:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2019:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2015:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:10"
																},
																"nativeSrc": "2015:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2015:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2000:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2000:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1866:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1934:3:10",
														"nodeType": "YulTypedName",
														"src": "1934:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1939:6:10",
														"nodeType": "YulTypedName",
														"src": "1939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1950:11:10",
														"nodeType": "YulTypedName",
														"src": "1950:11:10",
														"type": ""
													}
												],
												"src": "1866:169:10"
											},
											{
												"body": {
													"nativeSrc": "2147:62:10",
													"nodeType": "YulBlock",
													"src": "2147:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2169:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2177:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2177:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:10"
																		},
																		"nativeSrc": "2165:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2165:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964204341464920746f6b656e",
																		"kind": "string",
																		"nativeSrc": "2181:20:10",
																		"nodeType": "YulLiteral",
																		"src": "2181:20:10",
																		"type": "",
																		"value": "Invalid CAFI token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2158:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:10"
																},
																"nativeSrc": "2158:44:10",
																"nodeType": "YulFunctionCall",
																"src": "2158:44:10"
															},
															"nativeSrc": "2158:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "2158:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27",
												"nativeSrc": "2041:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2139:6:10",
														"nodeType": "YulTypedName",
														"src": "2139:6:10",
														"type": ""
													}
												],
												"src": "2041:168:10"
											},
											{
												"body": {
													"nativeSrc": "2361:220:10",
													"nodeType": "YulBlock",
													"src": "2361:220:10",
													"statements": [
														{
															"nativeSrc": "2371:74:10",
															"nodeType": "YulAssignment",
															"src": "2371:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2437:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2437:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2442:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2442:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2378:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2378:58:10"
																},
																"nativeSrc": "2378:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2378:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2371:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2543:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27",
																	"nativeSrc": "2454:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2454:88:10"
																},
																"nativeSrc": "2454:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2454:93:10"
															},
															"nativeSrc": "2454:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2454:93:10"
														},
														{
															"nativeSrc": "2556:19:10",
															"nodeType": "YulAssignment",
															"src": "2556:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2567:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2567:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2572:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2563:3:10"
																},
																"nativeSrc": "2563:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2563:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2556:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2556:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2215:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2349:3:10",
														"nodeType": "YulTypedName",
														"src": "2349:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2357:3:10",
														"nodeType": "YulTypedName",
														"src": "2357:3:10",
														"type": ""
													}
												],
												"src": "2215:366:10"
											},
											{
												"body": {
													"nativeSrc": "2758:248:10",
													"nodeType": "YulBlock",
													"src": "2758:248:10",
													"statements": [
														{
															"nativeSrc": "2768:26:10",
															"nodeType": "YulAssignment",
															"src": "2768:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2780:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2780:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2791:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2776:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:10"
																},
																"nativeSrc": "2776:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2776:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2768:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2815:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2815:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2826:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2826:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2811:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:10"
																		},
																		"nativeSrc": "2811:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2811:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2834:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2834:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2840:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2830:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2830:3:10"
																		},
																		"nativeSrc": "2830:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2830:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2804:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2804:6:10"
																},
																"nativeSrc": "2804:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2804:47:10"
															},
															"nativeSrc": "2804:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2804:47:10"
														},
														{
															"nativeSrc": "2860:139:10",
															"nodeType": "YulAssignment",
															"src": "2860:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2994:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2994:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2868:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2868:124:10"
																},
																"nativeSrc": "2868:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2868:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2860:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2860:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2587:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2738:9:10",
														"nodeType": "YulTypedName",
														"src": "2738:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2753:4:10",
														"nodeType": "YulTypedName",
														"src": "2753:4:10",
														"type": ""
													}
												],
												"src": "2587:419:10"
											},
											{
												"body": {
													"nativeSrc": "3118:67:10",
													"nodeType": "YulBlock",
													"src": "3118:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3140:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3140:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3148:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3148:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3136:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3136:3:10"
																		},
																		"nativeSrc": "3136:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3136:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "3152:25:10",
																		"nodeType": "YulLiteral",
																		"src": "3152:25:10",
																		"type": "",
																		"value": "Invalid treasury wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3129:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3129:6:10"
																},
																"nativeSrc": "3129:49:10",
																"nodeType": "YulFunctionCall",
																"src": "3129:49:10"
															},
															"nativeSrc": "3129:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "3129:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
												"nativeSrc": "3012:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3110:6:10",
														"nodeType": "YulTypedName",
														"src": "3110:6:10",
														"type": ""
													}
												],
												"src": "3012:173:10"
											},
											{
												"body": {
													"nativeSrc": "3337:220:10",
													"nodeType": "YulBlock",
													"src": "3337:220:10",
													"statements": [
														{
															"nativeSrc": "3347:74:10",
															"nodeType": "YulAssignment",
															"src": "3347:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3418:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3418:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3354:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3354:58:10"
																},
																"nativeSrc": "3354:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3354:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3347:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3519:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3519:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																	"nativeSrc": "3430:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3430:88:10"
																},
																"nativeSrc": "3430:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3430:93:10"
															},
															"nativeSrc": "3430:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3430:93:10"
														},
														{
															"nativeSrc": "3532:19:10",
															"nodeType": "YulAssignment",
															"src": "3532:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:10"
																},
																"nativeSrc": "3539:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3539:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3532:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3191:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3325:3:10",
														"nodeType": "YulTypedName",
														"src": "3325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3333:3:10",
														"nodeType": "YulTypedName",
														"src": "3333:3:10",
														"type": ""
													}
												],
												"src": "3191:366:10"
											},
											{
												"body": {
													"nativeSrc": "3734:248:10",
													"nodeType": "YulBlock",
													"src": "3734:248:10",
													"statements": [
														{
															"nativeSrc": "3744:26:10",
															"nodeType": "YulAssignment",
															"src": "3744:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3756:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3756:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3767:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3752:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:10"
																},
																"nativeSrc": "3752:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3752:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3744:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3744:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3791:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3802:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3802:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:10"
																		},
																		"nativeSrc": "3787:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3810:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3810:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3816:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3816:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:10"
																		},
																		"nativeSrc": "3806:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:10"
																},
																"nativeSrc": "3780:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3780:47:10"
															},
															"nativeSrc": "3780:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3780:47:10"
														},
														{
															"nativeSrc": "3836:139:10",
															"nodeType": "YulAssignment",
															"src": "3836:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3970:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3970:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3844:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3844:124:10"
																},
																"nativeSrc": "3844:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3844:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3836:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3563:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3714:9:10",
														"nodeType": "YulTypedName",
														"src": "3714:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3729:4:10",
														"nodeType": "YulTypedName",
														"src": "3729:4:10",
														"type": ""
													}
												],
												"src": "3563:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid CAFI token\")\n\n    }\n\n    function abi_encode_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid treasury wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526032600555348015610014575f5ffd5b506040516129c43803806129c483398181016040528101906100369190610335565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009e9190610394565b60405180910390fd5b6100b68161021660201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610407565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361019a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101919061046f565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061048d565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610304826102db565b9050919050565b610314816102fa565b811461031e575f5ffd5b50565b5f8151905061032f8161030b565b92915050565b5f5f5f6060848603121561034c5761034b6102d7565b5b5f61035986828701610321565b935050602061036a86828701610321565b925050604061037b86828701610321565b9150509250925092565b61038e816102fa565b82525050565b5f6020820190506103a75f830184610385565b92915050565b5f82825260208201905092915050565b7f496e76616c6964204341464920746f6b656e00000000000000000000000000005f82015250565b5f6103f16012836103ad565b91506103fc826103bd565b602082019050919050565b5f6020820190508181035f83015261041e816103e5565b9050919050565b7f496e76616c69642074726561737572792077616c6c65740000000000000000005f82015250565b5f6104596017836103ad565b915061046482610425565b602082019050919050565b5f6020820190508181035f8301526104868161044d565b9050919050565b60805161250a6104ba5f395f818161095201528181610b0801528181610b5101526113e8015261250a5ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c80637b0472f0116100ab578063b5d5b5fa1161006f578063b5d5b5fa146102e0578063cb8f63f614610314578063d96acc7214610332578063eb16975d14610350578063f2fde38b1461036c5761012a565b80637b0472f0146102525780638da5cb5b1461026e578063a6fdc26c1461028c578063a8602fea146102a8578063ae169a50146102c45761012a565b80634626402b116100f25780634626402b146101e6578063476343ee1461020457806358a0bde31461020e5780635acd2e4c1461022c578063715018a6146102485761012a565b80630a34cc121461012e578063181d06a91461014a5780631852e8d9146101665780632e17de7814610196578063407bb09d146101b2575b5f5ffd5b61014860048036038101906101439190611a6d565b610388565b005b610164600480360381019061015f9190611aab565b610415565b005b610180600480360381019061017b9190611b30565b61046c565b60405161018d9190611b7d565b60405180910390f35b6101b060048036038101906101ab9190611aab565b610647565b005b6101cc60048036038101906101c79190611aab565b6109f8565b6040516101dd959493929190611bb4565b60405180910390f35b6101ee610a64565b6040516101fb9190611c05565b60405180910390f35b61020c610a89565b005b610216610b4f565b6040516102239190611c79565b60405180910390f35b61024660048036038101906102419190611c92565b610b73565b005b610250610c37565b005b61026c60048036038101906102679190611c92565b610c4a565b005b610276610f65565b6040516102839190611c05565b60405180910390f35b6102a660048036038101906102a19190611aab565b610f8c565b005b6102c260048036038101906102bd9190611cd0565b61113e565b005b6102de60048036038101906102d99190611aab565b61123a565b005b6102fa60048036038101906102f59190611b30565b61148a565b60405161030b959493929190611cfb565b60405180910390f35b61031c6114e2565b6040516103299190611b7d565b60405180910390f35b61033a6114e8565b6040516103479190611b7d565b60405180910390f35b61036a60048036038101906103659190611d4c565b6114ee565b005b61038660048036038101906103819190611cd0565b61163a565b005b6103906116be565b60028054905082106103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90611e0a565b60405180910390fd5b80600283815481106103ec576103eb611e28565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055505050565b61041d6116be565b6103e8811115610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990611e9f565b60405180910390fd5b8060058190555050565b5f5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106104bd576104bc611e28565b5b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f81602001510361052b575f915050610641565b5f6002825f01518154811061054357610542611e28565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f8260600151426105f99190611eea565b90505f612710836040015185602001516106139190611f1d565b61061d9190611f8b565b90506301e1338082826106309190611f1d565b61063a9190611f8b565b9450505050505b92915050565b61064f611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b490612005565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061070d5761070c611e28565b5b905f5260205f20906005020190505f816001015411610761576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107589061206d565b60405180910390fd5b5f6002825f01548154811061077957610778611e28565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050905080602001518260020154610832919061208b565b421015610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90612108565b60405180910390fd5b5f61087f338561046c565b90505f8360010154905060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2085815481106108d8576108d7611e28565b5b905f5260205f2090600502015f5f82015f9055600182015f9055600282015f9055600382015f9055600482015f6101000a81549060ff021916905550506109433382855f015173ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b5f8211156109975761099633837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167f204fccf0d92ed8d48f204adb39b2e81e92bad0dedb93f5716ca9478cfb57de008683856040516109e193929190612126565b60405180910390a2505050506109f5611813565b50565b60028181548110610a07575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a916116be565b5f60045490505f8111610ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad0906121a5565b60405180910390fd5b5f600481905550610b4c60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b7b6116be565b6002805490508210610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb990611e0a565b60405180910390fd5b5f60028381548110610bd757610bd6611e28565b5b905f5260205f20906005020190505f816002015490508282600201819055507f447f7585030d3ef3a73db720f6082f657781a4a8657461796b868687caaea1e2848285604051610c2993929190612126565b60405180910390a150505050565b610c3f6116be565b610c485f61181c565b565b610c52611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb790612005565b60405180910390fd5b5f60028381548110610cd557610cd4611e28565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090508060800151610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db59061220d565b60405180910390fd5b8060600151821015610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90612275565b60405180910390fd5b610e35333084845f015173ffffffffffffffffffffffffffffffffffffffff166118dd909392919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808581526020018481526020014281526020014281526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908484604051610f50929190612293565b60405180910390a250610f61611813565b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f94611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990612005565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061105257611051611e28565b5b905f5260205f20906005020190505f8160010154116110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d9061206d565b60405180910390fd5b806004015f9054906101000a900460ff1615816004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f31a69d42a6f751ecfc0dbb2406339aec90a8398da52cec9760a134a10d430c0283836004015f9054906101000a900460ff1660405161112a9291906122ba565b60405180910390a25061113b611813565b50565b6111466116be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061232b565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee60405160405180910390a250565b611242611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790612005565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611300576112ff611e28565b5b905f5260205f20906005020190505f816001015411611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b9061206d565b60405180910390fd5b5f61135f338461046c565b90505f81116113a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139a90612393565b60405180910390fd5b428260030181905550816004015f9054906101000a900460ff16156113e15780826001015f8282546113d5919061208b565b9250508190555061142d565b61142c33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e27317438483604051611475929190612293565b60405180910390a25050611487611813565b50565b6003602052815f5260405f2081815481106114a3575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60045481565b60055481565b6114f66116be565b60026040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200160011515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050507f449d6803fbc50a1b24602b1756ef38e10c1fb9c7f3d93da3e69263670258554860016002805490506116149190611eea565b85858585600160405161162c969594939291906123b1565b60405180910390a150505050565b6116426116be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116b2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116a99190611c05565b60405180910390fd5b6116bb8161181c565b50565b6116c661195f565b73ffffffffffffffffffffffffffffffffffffffff166116e4610f65565b73ffffffffffffffffffffffffffffffffffffffff16146117435761170761195f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161173a9190611c05565b60405180910390fd5b565b60026001540361178a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117819061245a565b60405180910390fd5b6002600181905550565b61180e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016117c7929190612478565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611966565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611959848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016119129392919061249f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611966565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180611985576040513d5f823e3d81fd5b3d92505f519150505f821461199e5760018114156119b9565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156119fb57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119f29190611c05565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b611a1781611a05565b8114611a21575f5ffd5b50565b5f81359050611a3281611a0e565b92915050565b5f8115159050919050565b611a4c81611a38565b8114611a56575f5ffd5b50565b5f81359050611a6781611a43565b92915050565b5f5f60408385031215611a8357611a82611a01565b5b5f611a9085828601611a24565b9250506020611aa185828601611a59565b9150509250929050565b5f60208284031215611ac057611abf611a01565b5b5f611acd84828501611a24565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aff82611ad6565b9050919050565b611b0f81611af5565b8114611b19575f5ffd5b50565b5f81359050611b2a81611b06565b92915050565b5f5f60408385031215611b4657611b45611a01565b5b5f611b5385828601611b1c565b9250506020611b6485828601611a24565b9150509250929050565b611b7781611a05565b82525050565b5f602082019050611b905f830184611b6e565b92915050565b611b9f81611af5565b82525050565b611bae81611a38565b82525050565b5f60a082019050611bc75f830188611b96565b611bd46020830187611b6e565b611be16040830186611b6e565b611bee6060830185611b6e565b611bfb6080830184611ba5565b9695505050505050565b5f602082019050611c185f830184611b96565b92915050565b5f819050919050565b5f611c41611c3c611c3784611ad6565b611c1e565b611ad6565b9050919050565b5f611c5282611c27565b9050919050565b5f611c6382611c48565b9050919050565b611c7381611c59565b82525050565b5f602082019050611c8c5f830184611c6a565b92915050565b5f5f60408385031215611ca857611ca7611a01565b5b5f611cb585828601611a24565b9250506020611cc685828601611a24565b9150509250929050565b5f60208284031215611ce557611ce4611a01565b5b5f611cf284828501611b1c565b91505092915050565b5f60a082019050611d0e5f830188611b6e565b611d1b6020830187611b6e565b611d286040830186611b6e565b611d356060830185611b6e565b611d426080830184611ba5565b9695505050505050565b5f5f5f5f60808587031215611d6457611d63611a01565b5b5f611d7187828801611b1c565b9450506020611d8287828801611a24565b9350506040611d9387828801611a24565b9250506060611da487828801611a24565b91505092959194509250565b5f82825260208201905092915050565b7f496e76616c6964207061636b61676520494400000000000000000000000000005f82015250565b5f611df4601283611db0565b9150611dff82611dc0565b602082019050919050565b5f6020820190508181035f830152611e2181611de8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4d617820666565206973203130250000000000000000000000000000000000005f82015250565b5f611e89600e83611db0565b9150611e9482611e55565b602082019050919050565b5f6020820190508181035f830152611eb681611e7d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ef482611a05565b9150611eff83611a05565b9250828203905081811115611f1757611f16611ebd565b5b92915050565b5f611f2782611a05565b9150611f3283611a05565b9250828202611f4081611a05565b91508282048414831517611f5757611f56611ebd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f9582611a05565b9150611fa083611a05565b925082611fb057611faf611f5e565b5b828204905092915050565b7f4f6e6c7920454f412063616e2063616c6c0000000000000000000000000000005f82015250565b5f611fef601183611db0565b9150611ffa82611fbb565b602082019050919050565b5f6020820190508181035f83015261201c81611fe3565b9050919050565b7f4e6f20616374697665207374616b6500000000000000000000000000000000005f82015250565b5f612057600f83611db0565b915061206282612023565b602082019050919050565b5f6020820190508181035f8301526120848161204b565b9050919050565b5f61209582611a05565b91506120a083611a05565b92508282019050808211156120b8576120b7611ebd565b5b92915050565b7f5374696c6c206c6f636b656400000000000000000000000000000000000000005f82015250565b5f6120f2600c83611db0565b91506120fd826120be565b602082019050919050565b5f6020820190508181035f83015261211f816120e6565b9050919050565b5f6060820190506121395f830186611b6e565b6121466020830185611b6e565b6121536040830184611b6e565b949350505050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f61218f601383611db0565b915061219a8261215b565b602082019050919050565b5f6020820190508181035f8301526121bc81612183565b9050919050565b7f5061636b616765206e6f742061637469766500000000000000000000000000005f82015250565b5f6121f7601283611db0565b9150612202826121c3565b602082019050919050565b5f6020820190508181035f830152612224816121eb565b9050919050565b7f416d6f756e7420746f6f206c6f770000000000000000000000000000000000005f82015250565b5f61225f600e83611db0565b915061226a8261222b565b602082019050919050565b5f6020820190508181035f83015261228c81612253565b9050919050565b5f6040820190506122a65f830185611b6e565b6122b36020830184611b6e565b9392505050565b5f6040820190506122cd5f830185611b6e565b6122da6020830184611ba5565b9392505050565b7f5a65726f2061646472657373206e6f7420616c6c6f77656400000000000000005f82015250565b5f612315601883611db0565b9150612320826122e1565b602082019050919050565b5f6020820190508181035f83015261234281612309565b9050919050565b7f4e6f2072657761726420746f20636c61696d00000000000000000000000000005f82015250565b5f61237d601283611db0565b915061238882612349565b602082019050919050565b5f6020820190508181035f8301526123aa81612371565b9050919050565b5f60c0820190506123c45f830189611b6e565b6123d16020830188611b96565b6123de6040830187611b6e565b6123eb6060830186611b6e565b6123f86080830185611b6e565b61240560a0830184611ba5565b979650505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612444601f83611db0565b915061244f82612410565b602082019050919050565b5f6020820190508181035f83015261247181612438565b9050919050565b5f60408201905061248b5f830185611b96565b6124986020830184611b6e565b9392505050565b5f6060820190506124b25f830186611b96565b6124bf6020830185611b96565b6124cc6040830184611b6e565b94935050505056fea26469706673582212206f55a8caa7105627505ba64834cec6b2b89bb7c04747b02264d5e91365e6a4ab64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x29C4 CODESIZE SUB DUP1 PUSH2 0x29C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x335 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6 DUP2 PUSH2 0x216 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x48D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x304 DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x314 DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP2 EQ PUSH2 0x31E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x32F DUP2 PUSH2 0x30B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34C JUMPI PUSH2 0x34B PUSH2 0x2D7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x359 DUP7 DUP3 DUP8 ADD PUSH2 0x321 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36A DUP7 DUP3 DUP8 ADD PUSH2 0x321 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x37B DUP7 DUP3 DUP8 ADD PUSH2 0x321 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964204341464920746F6B656E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3F1 PUSH1 0x12 DUP4 PUSH2 0x3AD JUMP JUMPDEST SWAP2 POP PUSH2 0x3FC DUP3 PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x41E DUP2 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642074726561737572792077616C6C6574000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x459 PUSH1 0x17 DUP4 PUSH2 0x3AD JUMP JUMPDEST SWAP2 POP PUSH2 0x464 DUP3 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x486 DUP2 PUSH2 0x44D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x250A PUSH2 0x4BA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x952 ADD MSTORE DUP2 DUP2 PUSH2 0xB08 ADD MSTORE DUP2 DUP2 PUSH2 0xB51 ADD MSTORE PUSH2 0x13E8 ADD MSTORE PUSH2 0x250A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB5D5B5FA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xCB8F63F6 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xD96ACC72 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xEB16975D EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xA6FDC26C EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x2C4 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x4626402B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x58A0BDE3 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x5ACD2E4C EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0xA34CC12 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x181D06A9 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x407BB09D EQ PUSH2 0x1B2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0xA89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0xC37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xF8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0x113E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x123A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x14EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0x163A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x390 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x52B JUMPI PUSH0 SWAP2 POP POP PUSH2 0x641 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x543 JUMPI PUSH2 0x542 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP4 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 DUP3 DUP3 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64F PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x70D JUMPI PUSH2 0x70C PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x779 JUMPI PUSH2 0x778 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x87F CALLER DUP6 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x8D8 JUMPI PUSH2 0x8D7 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x943 CALLER DUP3 DUP6 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x204FCCF0D92ED8D48F204ADB39B2E81E92BAD0DEDB93F5716CA9478CFB57DE00 DUP7 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x9F5 PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA07 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA91 PUSH2 0x16BE JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD0 SWAP1 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xB4C PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x447F7585030D3EF3A73DB720F6082F657781A4A8657461796B868687CAAEA1E2 DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xC3F PUSH2 0x16BE JUMP JUMPDEST PUSH2 0xC48 PUSH0 PUSH2 0x181C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB7 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB5 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP3 LT ISZERO PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE35 CALLER ADDRESS DUP5 DUP5 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18DD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP3 SWAP2 SWAP1 PUSH2 0x2293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xF61 PUSH2 0x1813 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF94 PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1052 JUMPI PUSH2 0x1051 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109D SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x31A69D42A6F751ECFC0DBB2406339AEC90A8398DA52CEC9760A134A10D430C02 DUP4 DUP4 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x112A SWAP3 SWAP2 SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x113B PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1146 PUSH2 0x16BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1242 PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1300 JUMPI PUSH2 0x12FF PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134B SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x135F CALLER DUP5 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x13A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139A SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E1 JUMPI DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13D5 SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x142D JUMP JUMPDEST PUSH2 0x142C CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1475 SWAP3 SWAP2 SWAP1 PUSH2 0x2293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1487 PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F6 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x449D6803FBC50A1B24602B1756EF38E10C1FB9C7F3D93DA3E692636702585548 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x162C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1642 PUSH2 0x16BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16BB DUP2 PUSH2 0x181C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16C6 PUSH2 0x195F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E4 PUSH2 0xF65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1743 JUMPI PUSH2 0x1707 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x178A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1781 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x180E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17C7 SWAP3 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1966 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1959 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1912 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1966 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x199E JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x19B9 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x19FB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A17 DUP2 PUSH2 0x1A05 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A21 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A32 DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4C DUP2 PUSH2 0x1A38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A67 DUP2 PUSH2 0x1A43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A83 JUMPI PUSH2 0x1A82 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A90 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1A59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1ABF PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACD DUP5 DUP3 DUP6 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF DUP3 PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0F DUP2 PUSH2 0x1AF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B19 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2A DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B53 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B64 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B77 DUP2 PUSH2 0x1A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B90 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0x1AF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BAE DUP2 PUSH2 0x1A38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BC7 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x1BD4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1BE1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1BEE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1BFB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 PUSH2 0x1C3C PUSH2 0x1C37 DUP5 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C52 DUP3 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C63 DUP3 PUSH2 0x1C48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x1C59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8C PUSH0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D0E PUSH0 DUP4 ADD DUP9 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D1B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D35 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D42 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D64 JUMPI PUSH2 0x1D63 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D71 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D82 DUP8 DUP3 DUP9 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D93 DUP8 DUP3 DUP9 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1DA4 DUP8 DUP3 DUP9 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207061636B6167652049440000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF4 PUSH1 0x12 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFF DUP3 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E21 DUP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4D61782066656520697320313025000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E89 PUSH1 0xE DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 DUP3 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB6 DUP2 PUSH2 0x1E7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EF4 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFF DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F27 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F32 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F40 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1EBD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F95 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA0 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FB0 JUMPI PUSH2 0x1FAF PUSH2 0x1F5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920454F412063616E2063616C6C000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEF PUSH1 0x11 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFA DUP3 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665207374616B650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2057 PUSH1 0xF DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2062 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2084 DUP2 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2095 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A0 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374696C6C206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20F2 PUSH1 0xC DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FD DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x211F DUP2 PUSH2 0x20E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2139 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2146 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2153 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206665657320746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x218F PUSH1 0x13 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x219A DUP3 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BC DUP2 PUSH2 0x2183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061636B616765206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F7 PUSH1 0x12 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2202 DUP3 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2224 DUP2 PUSH2 0x21EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7420746F6F206C6F77000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x225F PUSH1 0xE DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x226A DUP3 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228C DUP2 PUSH2 0x2253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22A6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x22B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22CD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x22DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2315 PUSH1 0x18 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2320 DUP3 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2342 DUP2 PUSH2 0x2309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072657761726420746F20636C61696D0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x237D PUSH1 0x12 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2388 DUP3 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23AA DUP2 PUSH2 0x2371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x23C4 PUSH0 DUP4 ADD DUP10 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x23D1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x23DE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x23EB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x23F8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2405 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2444 PUSH1 0x1F DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x244F DUP3 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2471 DUP2 PUSH2 0x2438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x248B PUSH0 DUP4 ADD DUP6 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x2498 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24B2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x24BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x24CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x55A8CAA7105627505BA64834CEC6B2B8 SWAP12 0xB7 0xC0 SELFBALANCE SELFBALANCE 0xB0 0x22 PUSH5 0xD5E91365E6 LOG4 0xAB PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "412:7481:9:-:0;;;1354:2;1322:34;;2024:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2142:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2215:1:9::2;2193:24;;:10;:24;;::::0;2185:55:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2285:1;2258:29;;:15;:29;;::::0;2250:65:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2345:10;2326:30;;;;;;;;::::0;::::2;2383:15;2366:14;;:32;;;;;;;;;;;;;;;;;;2024:381:::0;;;412:7481;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;1866:169::-;1950:11;1984:6;1979:3;1972:19;2024:4;2019:3;2015:14;2000:29;;1866:169;;;;:::o;2041:168::-;2181:20;2177:1;2169:6;2165:14;2158:44;2041:168;:::o;2215:366::-;2357:3;2378:67;2442:2;2437:3;2378:67;:::i;:::-;2371:74;;2454:93;2543:3;2454:93;:::i;:::-;2572:2;2567:3;2563:12;2556:19;;2215:366;;;:::o;2587:419::-;2753:4;2791:2;2780:9;2776:18;2768:26;;2840:9;2834:4;2830:20;2826:1;2815:9;2811:17;2804:47;2868:131;2994:4;2868:131;:::i;:::-;2860:139;;2587:419;;;:::o;3012:173::-;3152:25;3148:1;3140:6;3136:14;3129:49;3012:173;:::o;3191:366::-;3333:3;3354:67;3418:2;3413:3;3354:67;:::i;:::-;3347:74;;3430:93;3519:3;3430:93;:::i;:::-;3548:2;3543:3;3539:12;3532:19;;3191:366;;;:::o;3563:419::-;3729:4;3767:2;3756:9;3752:18;3744:26;;3816:9;3810:4;3806:20;3802:1;3791:9;3787:17;3780:47;3844:131;3970:4;3844:131;:::i;:::-;3836:139;;3563:419;;;:::o;412:7481:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_802": {
									"entryPoint": 6502,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5822,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 6495,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 6163,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 5957,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6172,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addFarmPackage_1456": {
									"entryPoint": 5358,
									"id": 1456,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@autoFarmingFee_941": {
									"entryPoint": 5352,
									"id": 941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@autoFarmingPool_938": {
									"entryPoint": 5346,
									"id": 938,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cafiToken_926": {
									"entryPoint": 2895,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateReward_1417": {
									"entryPoint": 1132,
									"id": 1417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimReward_1210": {
									"entryPoint": 4666,
									"id": 1210,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@farmPackages_930": {
									"entryPoint": 2552,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3941,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3127,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 6365,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 6036,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAPY_1525": {
									"entryPoint": 2931,
									"id": 1525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setAutoFarmingFee_1545": {
									"entryPoint": 1045,
									"id": 1545,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasuryWallet_1572": {
									"entryPoint": 4414,
									"id": 1572,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1133": {
									"entryPoint": 3146,
									"id": 1133,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@toggleAutoFarming_1356": {
									"entryPoint": 3980,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toggleFarmPackage_1482": {
									"entryPoint": 904,
									"id": 1482,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5690,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryWallet_943": {
									"entryPoint": 2660,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_1311": {
									"entryPoint": 1607,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userStakes_936": {
									"entryPoint": 5258,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFees_1601": {
									"entryPoint": 2697,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9375,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9336,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 7289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 9137,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8851,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8486,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d": {
									"entryPoint": 7616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8": {
									"entryPoint": 8929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22561:10",
										"nodeType": "YulBlock",
										"src": "0:22561:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "732:48:10",
													"nodeType": "YulBlock",
													"src": "732:48:10",
													"statements": [
														{
															"nativeSrc": "742:32:10",
															"nodeType": "YulAssignment",
															"src": "742:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "767:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "767:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "760:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "760:6:10"
																		},
																		"nativeSrc": "760:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "760:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "753:6:10"
																},
																"nativeSrc": "753:21:10",
																"nodeType": "YulFunctionCall",
																"src": "753:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "742:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "742:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "690:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "714:5:10",
														"nodeType": "YulTypedName",
														"src": "714:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "724:7:10",
														"nodeType": "YulTypedName",
														"src": "724:7:10",
														"type": ""
													}
												],
												"src": "690:90:10"
											},
											{
												"body": {
													"nativeSrc": "826:76:10",
													"nodeType": "YulBlock",
													"src": "826:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "880:16:10",
																"nodeType": "YulBlock",
																"src": "880:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "889:1:10",
																					"nodeType": "YulLiteral",
																					"src": "889:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "892:1:10",
																					"nodeType": "YulLiteral",
																					"src": "892:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "882:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "882:6:10"
																			},
																			"nativeSrc": "882:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "882:12:10"
																		},
																		"nativeSrc": "882:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "882:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "849:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "849:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "871:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "856:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "856:14:10"
																				},
																				"nativeSrc": "856:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "856:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "846:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "846:2:10"
																		},
																		"nativeSrc": "846:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "846:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "839:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "839:6:10"
																},
																"nativeSrc": "839:40:10",
																"nodeType": "YulFunctionCall",
																"src": "839:40:10"
															},
															"nativeSrc": "836:60:10",
															"nodeType": "YulIf",
															"src": "836:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "786:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "819:5:10",
														"nodeType": "YulTypedName",
														"src": "819:5:10",
														"type": ""
													}
												],
												"src": "786:116:10"
											},
											{
												"body": {
													"nativeSrc": "957:84:10",
													"nodeType": "YulBlock",
													"src": "957:84:10",
													"statements": [
														{
															"nativeSrc": "967:29:10",
															"nodeType": "YulAssignment",
															"src": "967:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "989:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "989:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "976:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "976:12:10"
																},
																"nativeSrc": "976:20:10",
																"nodeType": "YulFunctionCall",
																"src": "976:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "967:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1029:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1029:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1005:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "1005:23:10"
																},
																"nativeSrc": "1005:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1005:30:10"
															},
															"nativeSrc": "1005:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1005:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "908:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "935:6:10",
														"nodeType": "YulTypedName",
														"src": "935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "943:3:10",
														"nodeType": "YulTypedName",
														"src": "943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "951:5:10",
														"nodeType": "YulTypedName",
														"src": "951:5:10",
														"type": ""
													}
												],
												"src": "908:133:10"
											},
											{
												"body": {
													"nativeSrc": "1127:388:10",
													"nodeType": "YulBlock",
													"src": "1127:388:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1173:83:10",
																"nodeType": "YulBlock",
																"src": "1173:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1175:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1175:77:10"
																			},
																			"nativeSrc": "1175:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1175:79:10"
																		},
																		"nativeSrc": "1175:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1175:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1148:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1148:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1157:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1157:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1144:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:10"
																		},
																		"nativeSrc": "1144:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1144:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1169:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1169:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:32:10"
															},
															"nativeSrc": "1137:119:10",
															"nodeType": "YulIf",
															"src": "1137:119:10"
														},
														{
															"nativeSrc": "1266:117:10",
															"nodeType": "YulBlock",
															"src": "1266:117:10",
															"statements": [
																{
																	"nativeSrc": "1281:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1281:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1295:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1295:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1285:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1285:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1310:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1310:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1345:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1345:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1356:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1356:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1341:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1341:3:10"
																				},
																				"nativeSrc": "1341:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1341:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1365:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1365:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1320:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1320:20:10"
																		},
																		"nativeSrc": "1320:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1310:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1310:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1393:115:10",
															"nodeType": "YulBlock",
															"src": "1393:115:10",
															"statements": [
																{
																	"nativeSrc": "1408:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1408:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1422:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1412:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1412:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1438:60:10",
																	"nodeType": "YulAssignment",
																	"src": "1438:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1470:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1470:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1481:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1481:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1466:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1466:3:10"
																				},
																				"nativeSrc": "1466:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1466:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1490:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1490:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "1448:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1448:17:10"
																		},
																		"nativeSrc": "1448:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1448:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1438:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1438:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "1047:468:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1089:9:10",
														"nodeType": "YulTypedName",
														"src": "1089:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1100:7:10",
														"nodeType": "YulTypedName",
														"src": "1100:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1112:6:10",
														"nodeType": "YulTypedName",
														"src": "1112:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1120:6:10",
														"nodeType": "YulTypedName",
														"src": "1120:6:10",
														"type": ""
													}
												],
												"src": "1047:468:10"
											},
											{
												"body": {
													"nativeSrc": "1587:263:10",
													"nodeType": "YulBlock",
													"src": "1587:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1633:83:10",
																"nodeType": "YulBlock",
																"src": "1633:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1635:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1635:77:10"
																			},
																			"nativeSrc": "1635:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1635:79:10"
																		},
																		"nativeSrc": "1635:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1635:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1608:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1608:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1617:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1604:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:10"
																		},
																		"nativeSrc": "1604:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1604:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1629:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1600:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:10"
																},
																"nativeSrc": "1600:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1600:32:10"
															},
															"nativeSrc": "1597:119:10",
															"nodeType": "YulIf",
															"src": "1597:119:10"
														},
														{
															"nativeSrc": "1726:117:10",
															"nodeType": "YulBlock",
															"src": "1726:117:10",
															"statements": [
																{
																	"nativeSrc": "1741:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1741:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1755:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1745:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1745:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1770:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1770:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1805:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1805:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1816:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1816:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1801:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1801:3:10"
																				},
																				"nativeSrc": "1801:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1801:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1825:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1825:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1780:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1780:20:10"
																		},
																		"nativeSrc": "1780:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1780:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1770:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1770:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1521:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1557:9:10",
														"nodeType": "YulTypedName",
														"src": "1557:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1568:7:10",
														"nodeType": "YulTypedName",
														"src": "1568:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1580:6:10",
														"nodeType": "YulTypedName",
														"src": "1580:6:10",
														"type": ""
													}
												],
												"src": "1521:329:10"
											},
											{
												"body": {
													"nativeSrc": "1901:81:10",
													"nodeType": "YulBlock",
													"src": "1901:81:10",
													"statements": [
														{
															"nativeSrc": "1911:65:10",
															"nodeType": "YulAssignment",
															"src": "1911:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1926:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1926:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1933:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1933:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																},
																"nativeSrc": "1922:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1922:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1911:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1856:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:10",
														"nodeType": "YulTypedName",
														"src": "1883:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1893:7:10",
														"nodeType": "YulTypedName",
														"src": "1893:7:10",
														"type": ""
													}
												],
												"src": "1856:126:10"
											},
											{
												"body": {
													"nativeSrc": "2033:51:10",
													"nodeType": "YulBlock",
													"src": "2033:51:10",
													"statements": [
														{
															"nativeSrc": "2043:35:10",
															"nodeType": "YulAssignment",
															"src": "2043:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2072:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2072:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2054:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2054:17:10"
																},
																"nativeSrc": "2054:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2054:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2043:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2043:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1988:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2015:5:10",
														"nodeType": "YulTypedName",
														"src": "2015:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2025:7:10",
														"nodeType": "YulTypedName",
														"src": "2025:7:10",
														"type": ""
													}
												],
												"src": "1988:96:10"
											},
											{
												"body": {
													"nativeSrc": "2133:79:10",
													"nodeType": "YulBlock",
													"src": "2133:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2190:16:10",
																"nodeType": "YulBlock",
																"src": "2190:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2199:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2199:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2202:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2192:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2192:6:10"
																			},
																			"nativeSrc": "2192:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2192:12:10"
																		},
																		"nativeSrc": "2192:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2192:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2156:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2156:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2181:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2181:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2163:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2163:17:10"
																				},
																				"nativeSrc": "2163:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2163:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2153:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2153:2:10"
																		},
																		"nativeSrc": "2153:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2153:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2146:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:10"
																},
																"nativeSrc": "2146:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2146:43:10"
															},
															"nativeSrc": "2143:63:10",
															"nodeType": "YulIf",
															"src": "2143:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2090:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2126:5:10",
														"nodeType": "YulTypedName",
														"src": "2126:5:10",
														"type": ""
													}
												],
												"src": "2090:122:10"
											},
											{
												"body": {
													"nativeSrc": "2270:87:10",
													"nodeType": "YulBlock",
													"src": "2270:87:10",
													"statements": [
														{
															"nativeSrc": "2280:29:10",
															"nodeType": "YulAssignment",
															"src": "2280:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2302:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2289:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2289:12:10"
																},
																"nativeSrc": "2289:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2289:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2280:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2318:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2318:26:10"
																},
																"nativeSrc": "2318:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2318:33:10"
															},
															"nativeSrc": "2318:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2318:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2218:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2248:6:10",
														"nodeType": "YulTypedName",
														"src": "2248:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2256:3:10",
														"nodeType": "YulTypedName",
														"src": "2256:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2264:5:10",
														"nodeType": "YulTypedName",
														"src": "2264:5:10",
														"type": ""
													}
												],
												"src": "2218:139:10"
											},
											{
												"body": {
													"nativeSrc": "2446:391:10",
													"nodeType": "YulBlock",
													"src": "2446:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2492:83:10",
																"nodeType": "YulBlock",
																"src": "2492:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2494:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2494:77:10"
																			},
																			"nativeSrc": "2494:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2494:79:10"
																		},
																		"nativeSrc": "2494:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2467:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2467:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2476:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2476:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2463:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:10"
																		},
																		"nativeSrc": "2463:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2463:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2488:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2459:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:10"
																},
																"nativeSrc": "2459:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2459:32:10"
															},
															"nativeSrc": "2456:119:10",
															"nodeType": "YulIf",
															"src": "2456:119:10"
														},
														{
															"nativeSrc": "2585:117:10",
															"nodeType": "YulBlock",
															"src": "2585:117:10",
															"statements": [
																{
																	"nativeSrc": "2600:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2600:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2614:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2614:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2604:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2604:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2629:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2629:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2664:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2664:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2675:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2675:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2660:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2660:3:10"
																				},
																				"nativeSrc": "2660:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2660:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2684:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2684:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2639:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:20:10"
																		},
																		"nativeSrc": "2639:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2629:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2629:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2712:118:10",
															"nodeType": "YulBlock",
															"src": "2712:118:10",
															"statements": [
																{
																	"nativeSrc": "2727:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2727:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2741:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2741:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2731:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2731:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2757:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2757:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2792:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2792:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2803:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2803:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2788:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2788:3:10"
																				},
																				"nativeSrc": "2788:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2767:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2767:20:10"
																		},
																		"nativeSrc": "2767:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2757:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2757:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2363:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2408:9:10",
														"nodeType": "YulTypedName",
														"src": "2408:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2419:7:10",
														"nodeType": "YulTypedName",
														"src": "2419:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2431:6:10",
														"nodeType": "YulTypedName",
														"src": "2431:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2439:6:10",
														"nodeType": "YulTypedName",
														"src": "2439:6:10",
														"type": ""
													}
												],
												"src": "2363:474:10"
											},
											{
												"body": {
													"nativeSrc": "2908:53:10",
													"nodeType": "YulBlock",
													"src": "2908:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2925:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2925:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2948:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2948:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2930:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2930:17:10"
																		},
																		"nativeSrc": "2930:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2930:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2918:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2918:6:10"
																},
																"nativeSrc": "2918:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2918:37:10"
															},
															"nativeSrc": "2918:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2918:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2843:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2896:5:10",
														"nodeType": "YulTypedName",
														"src": "2896:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2903:3:10",
														"nodeType": "YulTypedName",
														"src": "2903:3:10",
														"type": ""
													}
												],
												"src": "2843:118:10"
											},
											{
												"body": {
													"nativeSrc": "3065:124:10",
													"nodeType": "YulBlock",
													"src": "3065:124:10",
													"statements": [
														{
															"nativeSrc": "3075:26:10",
															"nodeType": "YulAssignment",
															"src": "3075:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3087:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3087:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3098:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3098:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3083:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3083:3:10"
																},
																"nativeSrc": "3083:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3083:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3075:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3075:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3155:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3168:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3168:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3179:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3179:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3164:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:10"
																		},
																		"nativeSrc": "3164:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3164:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3111:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3111:43:10"
																},
																"nativeSrc": "3111:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3111:71:10"
															},
															"nativeSrc": "3111:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3111:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2967:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3037:9:10",
														"nodeType": "YulTypedName",
														"src": "3037:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3049:6:10",
														"nodeType": "YulTypedName",
														"src": "3049:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3060:4:10",
														"nodeType": "YulTypedName",
														"src": "3060:4:10",
														"type": ""
													}
												],
												"src": "2967:222:10"
											},
											{
												"body": {
													"nativeSrc": "3260:53:10",
													"nodeType": "YulBlock",
													"src": "3260:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3277:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3277:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3300:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3300:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3282:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3282:17:10"
																		},
																		"nativeSrc": "3282:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:10"
																},
																"nativeSrc": "3270:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3270:37:10"
															},
															"nativeSrc": "3270:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3270:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3195:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3248:5:10",
														"nodeType": "YulTypedName",
														"src": "3248:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3255:3:10",
														"nodeType": "YulTypedName",
														"src": "3255:3:10",
														"type": ""
													}
												],
												"src": "3195:118:10"
											},
											{
												"body": {
													"nativeSrc": "3378:50:10",
													"nodeType": "YulBlock",
													"src": "3378:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3395:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3395:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3415:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3415:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3400:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3400:14:10"
																		},
																		"nativeSrc": "3400:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3400:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3388:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:10"
																},
																"nativeSrc": "3388:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3388:34:10"
															},
															"nativeSrc": "3388:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3388:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3319:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3366:5:10",
														"nodeType": "YulTypedName",
														"src": "3366:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3373:3:10",
														"nodeType": "YulTypedName",
														"src": "3373:3:10",
														"type": ""
													}
												],
												"src": "3319:109:10"
											},
											{
												"body": {
													"nativeSrc": "3638:448:10",
													"nodeType": "YulBlock",
													"src": "3638:448:10",
													"statements": [
														{
															"nativeSrc": "3648:27:10",
															"nodeType": "YulAssignment",
															"src": "3648:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3660:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3671:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3671:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:10"
																},
																"nativeSrc": "3656:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3656:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3648:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3648:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3729:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3729:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3742:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3742:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3753:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3753:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3738:3:10"
																		},
																		"nativeSrc": "3738:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3738:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3685:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3685:43:10"
																},
																"nativeSrc": "3685:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3685:71:10"
															},
															"nativeSrc": "3685:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3685:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3810:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3810:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3823:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3823:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3834:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3834:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3819:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:10"
																		},
																		"nativeSrc": "3819:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3819:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3766:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3766:43:10"
																},
																"nativeSrc": "3766:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3766:72:10"
															},
															"nativeSrc": "3766:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3766:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3892:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3892:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:10"
																		},
																		"nativeSrc": "3901:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3848:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3848:43:10"
																},
																"nativeSrc": "3848:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3848:72:10"
															},
															"nativeSrc": "3848:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3848:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3974:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3974:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3987:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3998:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:10"
																		},
																		"nativeSrc": "3983:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3930:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3930:43:10"
																},
																"nativeSrc": "3930:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3930:72:10"
															},
															"nativeSrc": "3930:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3930:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4050:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4063:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4063:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4074:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4074:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4059:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:10"
																		},
																		"nativeSrc": "4059:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4059:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4012:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "4012:37:10"
																},
																"nativeSrc": "4012:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4012:67:10"
															},
															"nativeSrc": "4012:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4012:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3434:652:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3578:9:10",
														"nodeType": "YulTypedName",
														"src": "3578:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3590:6:10",
														"nodeType": "YulTypedName",
														"src": "3590:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3598:6:10",
														"nodeType": "YulTypedName",
														"src": "3598:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3606:6:10",
														"nodeType": "YulTypedName",
														"src": "3606:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3614:6:10",
														"nodeType": "YulTypedName",
														"src": "3614:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3622:6:10",
														"nodeType": "YulTypedName",
														"src": "3622:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3633:4:10",
														"nodeType": "YulTypedName",
														"src": "3633:4:10",
														"type": ""
													}
												],
												"src": "3434:652:10"
											},
											{
												"body": {
													"nativeSrc": "4190:124:10",
													"nodeType": "YulBlock",
													"src": "4190:124:10",
													"statements": [
														{
															"nativeSrc": "4200:26:10",
															"nodeType": "YulAssignment",
															"src": "4200:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4212:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4212:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4223:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4223:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4208:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:10"
																},
																"nativeSrc": "4208:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4208:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4200:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4200:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4280:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4280:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4293:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4293:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4304:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4304:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4289:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:10"
																		},
																		"nativeSrc": "4289:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4236:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4236:43:10"
																},
																"nativeSrc": "4236:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4236:71:10"
															},
															"nativeSrc": "4236:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4236:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4092:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4162:9:10",
														"nodeType": "YulTypedName",
														"src": "4162:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4174:6:10",
														"nodeType": "YulTypedName",
														"src": "4174:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4185:4:10",
														"nodeType": "YulTypedName",
														"src": "4185:4:10",
														"type": ""
													}
												],
												"src": "4092:222:10"
											},
											{
												"body": {
													"nativeSrc": "4352:28:10",
													"nodeType": "YulBlock",
													"src": "4352:28:10",
													"statements": [
														{
															"nativeSrc": "4362:12:10",
															"nodeType": "YulAssignment",
															"src": "4362:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4369:5:10",
																"nodeType": "YulIdentifier",
																"src": "4369:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4362:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4362:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4320:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4338:5:10",
														"nodeType": "YulTypedName",
														"src": "4338:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4348:3:10",
														"nodeType": "YulTypedName",
														"src": "4348:3:10",
														"type": ""
													}
												],
												"src": "4320:60:10"
											},
											{
												"body": {
													"nativeSrc": "4446:82:10",
													"nodeType": "YulBlock",
													"src": "4446:82:10",
													"statements": [
														{
															"nativeSrc": "4456:66:10",
															"nodeType": "YulAssignment",
															"src": "4456:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4514:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4514:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4496:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4496:17:10"
																				},
																				"nativeSrc": "4496:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4496:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4487:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4487:8:10"
																		},
																		"nativeSrc": "4487:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4487:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4469:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4469:17:10"
																},
																"nativeSrc": "4469:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4469:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4456:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4456:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4386:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4426:5:10",
														"nodeType": "YulTypedName",
														"src": "4426:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4436:9:10",
														"nodeType": "YulTypedName",
														"src": "4436:9:10",
														"type": ""
													}
												],
												"src": "4386:142:10"
											},
											{
												"body": {
													"nativeSrc": "4594:66:10",
													"nodeType": "YulBlock",
													"src": "4594:66:10",
													"statements": [
														{
															"nativeSrc": "4604:50:10",
															"nodeType": "YulAssignment",
															"src": "4604:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4648:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4648:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4617:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4617:30:10"
																},
																"nativeSrc": "4617:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4617:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4604:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4604:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4534:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4574:5:10",
														"nodeType": "YulTypedName",
														"src": "4574:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4584:9:10",
														"nodeType": "YulTypedName",
														"src": "4584:9:10",
														"type": ""
													}
												],
												"src": "4534:126:10"
											},
											{
												"body": {
													"nativeSrc": "4740:66:10",
													"nodeType": "YulBlock",
													"src": "4740:66:10",
													"statements": [
														{
															"nativeSrc": "4750:50:10",
															"nodeType": "YulAssignment",
															"src": "4750:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4794:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4794:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4763:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4763:30:10"
																},
																"nativeSrc": "4763:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4763:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4750:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4750:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "4666:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4720:5:10",
														"nodeType": "YulTypedName",
														"src": "4720:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4730:9:10",
														"nodeType": "YulTypedName",
														"src": "4730:9:10",
														"type": ""
													}
												],
												"src": "4666:140:10"
											},
											{
												"body": {
													"nativeSrc": "4891:80:10",
													"nodeType": "YulBlock",
													"src": "4891:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4908:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4908:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4958:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4958:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "4913:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "4913:44:10"
																		},
																		"nativeSrc": "4913:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4901:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:10"
																},
																"nativeSrc": "4901:64:10",
																"nodeType": "YulFunctionCall",
																"src": "4901:64:10"
															},
															"nativeSrc": "4901:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "4901:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "4812:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4879:5:10",
														"nodeType": "YulTypedName",
														"src": "4879:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4886:3:10",
														"nodeType": "YulTypedName",
														"src": "4886:3:10",
														"type": ""
													}
												],
												"src": "4812:159:10"
											},
											{
												"body": {
													"nativeSrc": "5089:138:10",
													"nodeType": "YulBlock",
													"src": "5089:138:10",
													"statements": [
														{
															"nativeSrc": "5099:26:10",
															"nodeType": "YulAssignment",
															"src": "5099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5111:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5111:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5122:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5107:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5107:3:10"
																},
																"nativeSrc": "5107:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5107:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5099:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5099:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5193:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5193:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5206:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5217:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5217:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5202:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5202:3:10"
																		},
																		"nativeSrc": "5202:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5202:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "5135:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "5135:57:10"
																},
																"nativeSrc": "5135:85:10",
																"nodeType": "YulFunctionCall",
																"src": "5135:85:10"
															},
															"nativeSrc": "5135:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "5135:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "4977:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5061:9:10",
														"nodeType": "YulTypedName",
														"src": "5061:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5073:6:10",
														"nodeType": "YulTypedName",
														"src": "5073:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5084:4:10",
														"nodeType": "YulTypedName",
														"src": "5084:4:10",
														"type": ""
													}
												],
												"src": "4977:250:10"
											},
											{
												"body": {
													"nativeSrc": "5316:391:10",
													"nodeType": "YulBlock",
													"src": "5316:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5362:83:10",
																"nodeType": "YulBlock",
																"src": "5362:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5364:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5364:77:10"
																			},
																			"nativeSrc": "5364:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5364:79:10"
																		},
																		"nativeSrc": "5364:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5364:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5337:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5337:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5346:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:10"
																		},
																		"nativeSrc": "5333:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5333:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:10"
																},
																"nativeSrc": "5329:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5329:32:10"
															},
															"nativeSrc": "5326:119:10",
															"nodeType": "YulIf",
															"src": "5326:119:10"
														},
														{
															"nativeSrc": "5455:117:10",
															"nodeType": "YulBlock",
															"src": "5455:117:10",
															"statements": [
																{
																	"nativeSrc": "5470:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5470:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5484:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5484:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5474:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5474:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5499:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5499:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5534:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5534:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5545:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5545:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5530:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5530:3:10"
																				},
																				"nativeSrc": "5530:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5530:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5554:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5554:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5509:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5509:20:10"
																		},
																		"nativeSrc": "5509:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5499:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5499:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5582:118:10",
															"nodeType": "YulBlock",
															"src": "5582:118:10",
															"statements": [
																{
																	"nativeSrc": "5597:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5597:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5611:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5611:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5601:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5601:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5627:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5627:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5662:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5662:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5673:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5673:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5658:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5658:3:10"
																				},
																				"nativeSrc": "5658:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5658:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5682:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5682:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5637:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5637:20:10"
																		},
																		"nativeSrc": "5637:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5637:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5627:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5627:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5233:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5278:9:10",
														"nodeType": "YulTypedName",
														"src": "5278:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5289:7:10",
														"nodeType": "YulTypedName",
														"src": "5289:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5301:6:10",
														"nodeType": "YulTypedName",
														"src": "5301:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5309:6:10",
														"nodeType": "YulTypedName",
														"src": "5309:6:10",
														"type": ""
													}
												],
												"src": "5233:474:10"
											},
											{
												"body": {
													"nativeSrc": "5779:263:10",
													"nodeType": "YulBlock",
													"src": "5779:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5825:83:10",
																"nodeType": "YulBlock",
																"src": "5825:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5827:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5827:77:10"
																			},
																			"nativeSrc": "5827:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5827:79:10"
																		},
																		"nativeSrc": "5827:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5827:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5800:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5800:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5809:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5809:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5796:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:10"
																		},
																		"nativeSrc": "5796:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5796:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5821:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5821:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5792:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5792:3:10"
																},
																"nativeSrc": "5792:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5792:32:10"
															},
															"nativeSrc": "5789:119:10",
															"nodeType": "YulIf",
															"src": "5789:119:10"
														},
														{
															"nativeSrc": "5918:117:10",
															"nodeType": "YulBlock",
															"src": "5918:117:10",
															"statements": [
																{
																	"nativeSrc": "5933:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5933:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5947:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5947:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5937:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5937:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5962:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5962:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5997:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5997:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6008:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6008:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5993:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5993:3:10"
																				},
																				"nativeSrc": "5993:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5993:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6017:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6017:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5972:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5972:20:10"
																		},
																		"nativeSrc": "5972:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5972:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5962:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5962:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5713:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5749:9:10",
														"nodeType": "YulTypedName",
														"src": "5749:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5760:7:10",
														"nodeType": "YulTypedName",
														"src": "5760:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5772:6:10",
														"nodeType": "YulTypedName",
														"src": "5772:6:10",
														"type": ""
													}
												],
												"src": "5713:329:10"
											},
											{
												"body": {
													"nativeSrc": "6252:448:10",
													"nodeType": "YulBlock",
													"src": "6252:448:10",
													"statements": [
														{
															"nativeSrc": "6262:27:10",
															"nodeType": "YulAssignment",
															"src": "6262:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6274:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6274:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6285:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6285:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6270:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6270:3:10"
																},
																"nativeSrc": "6270:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6270:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6262:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6262:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6343:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6343:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6356:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6356:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6367:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6367:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6352:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6352:3:10"
																		},
																		"nativeSrc": "6352:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6352:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6299:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6299:43:10"
																},
																"nativeSrc": "6299:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6299:71:10"
															},
															"nativeSrc": "6299:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6299:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6424:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6424:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6437:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6448:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6448:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6433:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6433:3:10"
																		},
																		"nativeSrc": "6433:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6380:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6380:43:10"
																},
																"nativeSrc": "6380:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6380:72:10"
															},
															"nativeSrc": "6380:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6380:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6506:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6506:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6519:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6519:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6530:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6530:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6515:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:10"
																		},
																		"nativeSrc": "6515:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6515:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6462:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6462:43:10"
																},
																"nativeSrc": "6462:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6462:72:10"
															},
															"nativeSrc": "6462:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6462:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6588:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6588:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6601:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6601:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6612:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6612:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6597:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:10"
																		},
																		"nativeSrc": "6597:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6597:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6544:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6544:43:10"
																},
																"nativeSrc": "6544:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6544:72:10"
															},
															"nativeSrc": "6544:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6544:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6664:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6664:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6677:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6688:3:10",
																				"nodeType": "YulLiteral",
																				"src": "6688:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6673:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:10"
																		},
																		"nativeSrc": "6673:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6673:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6626:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "6626:37:10"
																},
																"nativeSrc": "6626:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6626:67:10"
															},
															"nativeSrc": "6626:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "6626:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6048:652:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6192:9:10",
														"nodeType": "YulTypedName",
														"src": "6192:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6204:6:10",
														"nodeType": "YulTypedName",
														"src": "6204:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6212:6:10",
														"nodeType": "YulTypedName",
														"src": "6212:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6220:6:10",
														"nodeType": "YulTypedName",
														"src": "6220:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6228:6:10",
														"nodeType": "YulTypedName",
														"src": "6228:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6236:6:10",
														"nodeType": "YulTypedName",
														"src": "6236:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6247:4:10",
														"nodeType": "YulTypedName",
														"src": "6247:4:10",
														"type": ""
													}
												],
												"src": "6048:652:10"
											},
											{
												"body": {
													"nativeSrc": "6823:648:10",
													"nodeType": "YulBlock",
													"src": "6823:648:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6870:83:10",
																"nodeType": "YulBlock",
																"src": "6870:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6872:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6872:77:10"
																			},
																			"nativeSrc": "6872:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6872:79:10"
																		},
																		"nativeSrc": "6872:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6872:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6844:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6840:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6840:3:10"
																		},
																		"nativeSrc": "6840:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6840:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6865:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6865:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6836:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:10"
																},
																"nativeSrc": "6836:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6836:33:10"
															},
															"nativeSrc": "6833:120:10",
															"nodeType": "YulIf",
															"src": "6833:120:10"
														},
														{
															"nativeSrc": "6963:117:10",
															"nodeType": "YulBlock",
															"src": "6963:117:10",
															"statements": [
																{
																	"nativeSrc": "6978:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6978:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6992:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6992:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6982:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6982:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7007:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7007:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7042:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7042:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7053:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7053:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7038:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7038:3:10"
																				},
																				"nativeSrc": "7038:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7038:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7062:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7062:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7017:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7017:20:10"
																		},
																		"nativeSrc": "7017:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7017:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7007:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7007:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7090:118:10",
															"nodeType": "YulBlock",
															"src": "7090:118:10",
															"statements": [
																{
																	"nativeSrc": "7105:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7105:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7119:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7109:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7109:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7135:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7135:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7170:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7170:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7181:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7181:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7166:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7166:3:10"
																				},
																				"nativeSrc": "7166:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7166:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7190:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7190:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7145:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7145:20:10"
																		},
																		"nativeSrc": "7145:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7145:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7135:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7135:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7218:118:10",
															"nodeType": "YulBlock",
															"src": "7218:118:10",
															"statements": [
																{
																	"nativeSrc": "7233:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7233:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7247:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7247:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7237:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7237:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7263:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7263:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7298:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7298:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7309:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7309:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7294:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7294:3:10"
																				},
																				"nativeSrc": "7294:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7294:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7318:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7318:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7273:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7273:20:10"
																		},
																		"nativeSrc": "7273:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7273:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7263:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7263:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7346:118:10",
															"nodeType": "YulBlock",
															"src": "7346:118:10",
															"statements": [
																{
																	"nativeSrc": "7361:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7361:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7375:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7375:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7365:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7365:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7391:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7391:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7426:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7426:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7437:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7437:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7422:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7422:3:10"
																				},
																				"nativeSrc": "7422:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7422:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7446:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7446:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7401:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7401:20:10"
																		},
																		"nativeSrc": "7401:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7401:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7391:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7391:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
												"nativeSrc": "6706:765:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6769:9:10",
														"nodeType": "YulTypedName",
														"src": "6769:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6780:7:10",
														"nodeType": "YulTypedName",
														"src": "6780:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6792:6:10",
														"nodeType": "YulTypedName",
														"src": "6792:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6800:6:10",
														"nodeType": "YulTypedName",
														"src": "6800:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6808:6:10",
														"nodeType": "YulTypedName",
														"src": "6808:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6816:6:10",
														"nodeType": "YulTypedName",
														"src": "6816:6:10",
														"type": ""
													}
												],
												"src": "6706:765:10"
											},
											{
												"body": {
													"nativeSrc": "7573:73:10",
													"nodeType": "YulBlock",
													"src": "7573:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7590:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7590:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7595:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7595:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7583:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7583:6:10"
																},
																"nativeSrc": "7583:19:10",
																"nodeType": "YulFunctionCall",
																"src": "7583:19:10"
															},
															"nativeSrc": "7583:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "7583:19:10"
														},
														{
															"nativeSrc": "7611:29:10",
															"nodeType": "YulAssignment",
															"src": "7611:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7630:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7630:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7635:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7635:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7626:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7626:3:10"
																},
																"nativeSrc": "7626:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7626:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7611:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "7611:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7477:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7545:3:10",
														"nodeType": "YulTypedName",
														"src": "7545:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7550:6:10",
														"nodeType": "YulTypedName",
														"src": "7550:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7561:11:10",
														"nodeType": "YulTypedName",
														"src": "7561:11:10",
														"type": ""
													}
												],
												"src": "7477:169:10"
											},
											{
												"body": {
													"nativeSrc": "7758:62:10",
													"nodeType": "YulBlock",
													"src": "7758:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7780:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7780:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7788:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7788:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7776:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7776:3:10"
																		},
																		"nativeSrc": "7776:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7776:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207061636b616765204944",
																		"kind": "string",
																		"nativeSrc": "7792:20:10",
																		"nodeType": "YulLiteral",
																		"src": "7792:20:10",
																		"type": "",
																		"value": "Invalid package ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7769:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:10"
																},
																"nativeSrc": "7769:44:10",
																"nodeType": "YulFunctionCall",
																"src": "7769:44:10"
															},
															"nativeSrc": "7769:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "7769:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
												"nativeSrc": "7652:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7750:6:10",
														"nodeType": "YulTypedName",
														"src": "7750:6:10",
														"type": ""
													}
												],
												"src": "7652:168:10"
											},
											{
												"body": {
													"nativeSrc": "7972:220:10",
													"nodeType": "YulBlock",
													"src": "7972:220:10",
													"statements": [
														{
															"nativeSrc": "7982:74:10",
															"nodeType": "YulAssignment",
															"src": "7982:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8048:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8048:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8053:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8053:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7989:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7989:58:10"
																},
																"nativeSrc": "7989:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7989:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7982:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7982:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8154:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8154:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																	"nativeSrc": "8065:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8065:88:10"
																},
																"nativeSrc": "8065:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8065:93:10"
															},
															"nativeSrc": "8065:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8065:93:10"
														},
														{
															"nativeSrc": "8167:19:10",
															"nodeType": "YulAssignment",
															"src": "8167:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8178:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8183:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8183:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8174:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8174:3:10"
																},
																"nativeSrc": "8174:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8174:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8167:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7826:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7960:3:10",
														"nodeType": "YulTypedName",
														"src": "7960:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7968:3:10",
														"nodeType": "YulTypedName",
														"src": "7968:3:10",
														"type": ""
													}
												],
												"src": "7826:366:10"
											},
											{
												"body": {
													"nativeSrc": "8369:248:10",
													"nodeType": "YulBlock",
													"src": "8369:248:10",
													"statements": [
														{
															"nativeSrc": "8379:26:10",
															"nodeType": "YulAssignment",
															"src": "8379:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8391:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8391:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8402:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8387:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8387:3:10"
																},
																"nativeSrc": "8387:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8387:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8379:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8379:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8426:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8426:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8437:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8437:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8422:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8422:3:10"
																		},
																		"nativeSrc": "8422:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8422:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8445:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8445:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8451:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8451:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8441:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8441:3:10"
																		},
																		"nativeSrc": "8441:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8441:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8415:6:10"
																},
																"nativeSrc": "8415:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8415:47:10"
															},
															"nativeSrc": "8415:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8415:47:10"
														},
														{
															"nativeSrc": "8471:139:10",
															"nodeType": "YulAssignment",
															"src": "8471:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8605:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8605:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8479:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8479:124:10"
																},
																"nativeSrc": "8479:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8479:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8471:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8471:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8198:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8349:9:10",
														"nodeType": "YulTypedName",
														"src": "8349:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8364:4:10",
														"nodeType": "YulTypedName",
														"src": "8364:4:10",
														"type": ""
													}
												],
												"src": "8198:419:10"
											},
											{
												"body": {
													"nativeSrc": "8651:152:10",
													"nodeType": "YulBlock",
													"src": "8651:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8668:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8668:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8671:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8671:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8661:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:10"
																},
																"nativeSrc": "8661:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8661:88:10"
															},
															"nativeSrc": "8661:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8661:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8765:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8765:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8768:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8768:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8758:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8758:6:10"
																},
																"nativeSrc": "8758:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8758:15:10"
															},
															"nativeSrc": "8758:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8758:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8789:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8789:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8792:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8792:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8782:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:10"
																},
																"nativeSrc": "8782:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8782:15:10"
															},
															"nativeSrc": "8782:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8782:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8623:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8623:180:10"
											},
											{
												"body": {
													"nativeSrc": "8915:58:10",
													"nodeType": "YulBlock",
													"src": "8915:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8937:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8937:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8945:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8945:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8933:3:10"
																		},
																		"nativeSrc": "8933:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8933:14:10"
																	},
																	{
																		"hexValue": "4d61782066656520697320313025",
																		"kind": "string",
																		"nativeSrc": "8949:16:10",
																		"nodeType": "YulLiteral",
																		"src": "8949:16:10",
																		"type": "",
																		"value": "Max fee is 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8926:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8926:6:10"
																},
																"nativeSrc": "8926:40:10",
																"nodeType": "YulFunctionCall",
																"src": "8926:40:10"
															},
															"nativeSrc": "8926:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "8926:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df",
												"nativeSrc": "8809:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8907:6:10",
														"nodeType": "YulTypedName",
														"src": "8907:6:10",
														"type": ""
													}
												],
												"src": "8809:164:10"
											},
											{
												"body": {
													"nativeSrc": "9125:220:10",
													"nodeType": "YulBlock",
													"src": "9125:220:10",
													"statements": [
														{
															"nativeSrc": "9135:74:10",
															"nodeType": "YulAssignment",
															"src": "9135:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9201:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9201:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9206:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9206:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9142:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9142:58:10"
																},
																"nativeSrc": "9142:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9142:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9135:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9135:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9307:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9307:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df",
																	"nativeSrc": "9218:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9218:88:10"
																},
																"nativeSrc": "9218:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9218:93:10"
															},
															"nativeSrc": "9218:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9218:93:10"
														},
														{
															"nativeSrc": "9320:19:10",
															"nodeType": "YulAssignment",
															"src": "9320:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9331:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9331:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9336:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9336:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9327:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:10"
																},
																"nativeSrc": "9327:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9327:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9320:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9320:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8979:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9113:3:10",
														"nodeType": "YulTypedName",
														"src": "9113:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9121:3:10",
														"nodeType": "YulTypedName",
														"src": "9121:3:10",
														"type": ""
													}
												],
												"src": "8979:366:10"
											},
											{
												"body": {
													"nativeSrc": "9522:248:10",
													"nodeType": "YulBlock",
													"src": "9522:248:10",
													"statements": [
														{
															"nativeSrc": "9532:26:10",
															"nodeType": "YulAssignment",
															"src": "9532:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9544:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9544:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9555:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9540:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9540:3:10"
																},
																"nativeSrc": "9540:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9540:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9532:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9532:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9579:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9579:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9590:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9590:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9575:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:10"
																		},
																		"nativeSrc": "9575:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9575:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9598:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9598:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9604:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9604:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9594:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9594:3:10"
																		},
																		"nativeSrc": "9594:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9594:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9568:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9568:6:10"
																},
																"nativeSrc": "9568:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9568:47:10"
															},
															"nativeSrc": "9568:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9568:47:10"
														},
														{
															"nativeSrc": "9624:139:10",
															"nodeType": "YulAssignment",
															"src": "9624:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9758:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9758:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9632:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9632:124:10"
																},
																"nativeSrc": "9632:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9632:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9624:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9624:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9351:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9502:9:10",
														"nodeType": "YulTypedName",
														"src": "9502:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9517:4:10",
														"nodeType": "YulTypedName",
														"src": "9517:4:10",
														"type": ""
													}
												],
												"src": "9351:419:10"
											},
											{
												"body": {
													"nativeSrc": "9804:152:10",
													"nodeType": "YulBlock",
													"src": "9804:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9821:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9821:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9824:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9824:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9814:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9814:6:10"
																},
																"nativeSrc": "9814:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9814:88:10"
															},
															"nativeSrc": "9814:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9814:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9918:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9918:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9921:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9921:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9911:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:10"
																},
																"nativeSrc": "9911:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9911:15:10"
															},
															"nativeSrc": "9911:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9911:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9942:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9942:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9945:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9945:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9935:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9935:6:10"
																},
																"nativeSrc": "9935:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9935:15:10"
															},
															"nativeSrc": "9935:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9935:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9776:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9776:180:10"
											},
											{
												"body": {
													"nativeSrc": "10007:149:10",
													"nodeType": "YulBlock",
													"src": "10007:149:10",
													"statements": [
														{
															"nativeSrc": "10017:25:10",
															"nodeType": "YulAssignment",
															"src": "10017:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10040:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10040:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10022:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10022:17:10"
																},
																"nativeSrc": "10022:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10022:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10017:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10017:1:10"
																}
															]
														},
														{
															"nativeSrc": "10051:25:10",
															"nodeType": "YulAssignment",
															"src": "10051:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10074:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10074:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10056:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10056:17:10"
																},
																"nativeSrc": "10056:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10056:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10051:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10051:1:10"
																}
															]
														},
														{
															"nativeSrc": "10085:17:10",
															"nodeType": "YulAssignment",
															"src": "10085:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10097:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10097:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10100:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10100:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10093:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:10"
																},
																"nativeSrc": "10093:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10093:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10085:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10085:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10127:22:10",
																"nodeType": "YulBlock",
																"src": "10127:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10129:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10129:16:10"
																			},
																			"nativeSrc": "10129:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10129:18:10"
																		},
																		"nativeSrc": "10129:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10129:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10118:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10118:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10124:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10124:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10115:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10115:2:10"
																},
																"nativeSrc": "10115:11:10",
																"nodeType": "YulFunctionCall",
																"src": "10115:11:10"
															},
															"nativeSrc": "10112:37:10",
															"nodeType": "YulIf",
															"src": "10112:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9962:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9993:1:10",
														"nodeType": "YulTypedName",
														"src": "9993:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9996:1:10",
														"nodeType": "YulTypedName",
														"src": "9996:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10002:4:10",
														"nodeType": "YulTypedName",
														"src": "10002:4:10",
														"type": ""
													}
												],
												"src": "9962:194:10"
											},
											{
												"body": {
													"nativeSrc": "10210:362:10",
													"nodeType": "YulBlock",
													"src": "10210:362:10",
													"statements": [
														{
															"nativeSrc": "10220:25:10",
															"nodeType": "YulAssignment",
															"src": "10220:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10243:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10243:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10225:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10225:17:10"
																},
																"nativeSrc": "10225:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10225:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10220:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10220:1:10"
																}
															]
														},
														{
															"nativeSrc": "10254:25:10",
															"nodeType": "YulAssignment",
															"src": "10254:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10277:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10277:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10259:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10259:17:10"
																},
																"nativeSrc": "10259:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10259:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10254:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10254:1:10"
																}
															]
														},
														{
															"nativeSrc": "10288:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10288:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10311:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10311:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10314:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10314:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10307:3:10"
																},
																"nativeSrc": "10307:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10307:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10292:11:10",
																	"nodeType": "YulTypedName",
																	"src": "10292:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10325:41:10",
															"nodeType": "YulAssignment",
															"src": "10325:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10354:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "10354:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10336:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10336:17:10"
																},
																"nativeSrc": "10336:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10336:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10325:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "10325:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10543:22:10",
																"nodeType": "YulBlock",
																"src": "10543:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10545:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10545:16:10"
																			},
																			"nativeSrc": "10545:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10545:18:10"
																		},
																		"nativeSrc": "10545:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10545:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10476:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10476:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10469:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10469:6:10"
																				},
																				"nativeSrc": "10469:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10469:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10499:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10499:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10506:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "10506:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10515:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "10515:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10502:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10502:3:10"
																						},
																						"nativeSrc": "10502:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10502:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10496:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10496:2:10"
																				},
																				"nativeSrc": "10496:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10496:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10449:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10449:2:10"
																		},
																		"nativeSrc": "10449:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10449:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10429:6:10"
																},
																"nativeSrc": "10429:113:10",
																"nodeType": "YulFunctionCall",
																"src": "10429:113:10"
															},
															"nativeSrc": "10426:139:10",
															"nodeType": "YulIf",
															"src": "10426:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10162:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10193:1:10",
														"nodeType": "YulTypedName",
														"src": "10193:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10196:1:10",
														"nodeType": "YulTypedName",
														"src": "10196:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10202:7:10",
														"nodeType": "YulTypedName",
														"src": "10202:7:10",
														"type": ""
													}
												],
												"src": "10162:410:10"
											},
											{
												"body": {
													"nativeSrc": "10606:152:10",
													"nodeType": "YulBlock",
													"src": "10606:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10623:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10623:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10626:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10626:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10616:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10616:6:10"
																},
																"nativeSrc": "10616:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10616:88:10"
															},
															"nativeSrc": "10616:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10616:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10720:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10720:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10723:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10723:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10713:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:10"
																},
																"nativeSrc": "10713:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10713:15:10"
															},
															"nativeSrc": "10713:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10713:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10744:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10744:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10747:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10747:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10737:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:10"
																},
																"nativeSrc": "10737:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10737:15:10"
															},
															"nativeSrc": "10737:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10737:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10578:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10578:180:10"
											},
											{
												"body": {
													"nativeSrc": "10806:143:10",
													"nodeType": "YulBlock",
													"src": "10806:143:10",
													"statements": [
														{
															"nativeSrc": "10816:25:10",
															"nodeType": "YulAssignment",
															"src": "10816:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10839:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10839:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10821:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10821:17:10"
																},
																"nativeSrc": "10821:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10821:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10816:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10816:1:10"
																}
															]
														},
														{
															"nativeSrc": "10850:25:10",
															"nodeType": "YulAssignment",
															"src": "10850:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10873:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10873:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10855:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10855:17:10"
																},
																"nativeSrc": "10855:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10855:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10850:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10850:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10897:22:10",
																"nodeType": "YulBlock",
																"src": "10897:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10899:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10899:16:10"
																			},
																			"nativeSrc": "10899:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10899:18:10"
																		},
																		"nativeSrc": "10899:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10899:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10894:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10894:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10887:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10887:6:10"
																},
																"nativeSrc": "10887:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10887:9:10"
															},
															"nativeSrc": "10884:35:10",
															"nodeType": "YulIf",
															"src": "10884:35:10"
														},
														{
															"nativeSrc": "10929:14:10",
															"nodeType": "YulAssignment",
															"src": "10929:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10938:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10938:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10941:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10941:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10934:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10934:3:10"
																},
																"nativeSrc": "10934:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10934:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10929:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10929:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10764:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10795:1:10",
														"nodeType": "YulTypedName",
														"src": "10795:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10798:1:10",
														"nodeType": "YulTypedName",
														"src": "10798:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10804:1:10",
														"nodeType": "YulTypedName",
														"src": "10804:1:10",
														"type": ""
													}
												],
												"src": "10764:185:10"
											},
											{
												"body": {
													"nativeSrc": "11061:61:10",
													"nodeType": "YulBlock",
													"src": "11061:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11083:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11083:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11091:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11091:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11079:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11079:3:10"
																		},
																		"nativeSrc": "11079:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11079:14:10"
																	},
																	{
																		"hexValue": "4f6e6c7920454f412063616e2063616c6c",
																		"kind": "string",
																		"nativeSrc": "11095:19:10",
																		"nodeType": "YulLiteral",
																		"src": "11095:19:10",
																		"type": "",
																		"value": "Only EOA can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11072:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11072:6:10"
																},
																"nativeSrc": "11072:43:10",
																"nodeType": "YulFunctionCall",
																"src": "11072:43:10"
															},
															"nativeSrc": "11072:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "11072:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
												"nativeSrc": "10955:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11053:6:10",
														"nodeType": "YulTypedName",
														"src": "11053:6:10",
														"type": ""
													}
												],
												"src": "10955:167:10"
											},
											{
												"body": {
													"nativeSrc": "11274:220:10",
													"nodeType": "YulBlock",
													"src": "11274:220:10",
													"statements": [
														{
															"nativeSrc": "11284:74:10",
															"nodeType": "YulAssignment",
															"src": "11284:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11350:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11355:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11291:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11291:58:10"
																},
																"nativeSrc": "11291:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11291:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11284:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11456:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11456:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
																	"nativeSrc": "11367:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11367:88:10"
																},
																"nativeSrc": "11367:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11367:93:10"
															},
															"nativeSrc": "11367:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11367:93:10"
														},
														{
															"nativeSrc": "11469:19:10",
															"nodeType": "YulAssignment",
															"src": "11469:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11480:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11480:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11485:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11485:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11476:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11476:3:10"
																},
																"nativeSrc": "11476:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11476:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11469:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11469:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11128:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11262:3:10",
														"nodeType": "YulTypedName",
														"src": "11262:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11270:3:10",
														"nodeType": "YulTypedName",
														"src": "11270:3:10",
														"type": ""
													}
												],
												"src": "11128:366:10"
											},
											{
												"body": {
													"nativeSrc": "11671:248:10",
													"nodeType": "YulBlock",
													"src": "11671:248:10",
													"statements": [
														{
															"nativeSrc": "11681:26:10",
															"nodeType": "YulAssignment",
															"src": "11681:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11693:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11693:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11704:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11689:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11689:3:10"
																},
																"nativeSrc": "11689:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11689:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11681:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11681:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11728:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11728:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11739:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11739:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11724:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11724:3:10"
																		},
																		"nativeSrc": "11724:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11724:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11747:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11747:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11753:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11743:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:10"
																		},
																		"nativeSrc": "11743:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11743:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11717:6:10"
																},
																"nativeSrc": "11717:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11717:47:10"
															},
															"nativeSrc": "11717:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11717:47:10"
														},
														{
															"nativeSrc": "11773:139:10",
															"nodeType": "YulAssignment",
															"src": "11773:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11907:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11907:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11781:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11781:124:10"
																},
																"nativeSrc": "11781:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11781:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11773:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11773:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11500:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11651:9:10",
														"nodeType": "YulTypedName",
														"src": "11651:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11666:4:10",
														"nodeType": "YulTypedName",
														"src": "11666:4:10",
														"type": ""
													}
												],
												"src": "11500:419:10"
											},
											{
												"body": {
													"nativeSrc": "12031:59:10",
													"nodeType": "YulBlock",
													"src": "12031:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12053:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12053:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12061:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12061:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12049:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12049:3:10"
																		},
																		"nativeSrc": "12049:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12049:14:10"
																	},
																	{
																		"hexValue": "4e6f20616374697665207374616b65",
																		"kind": "string",
																		"nativeSrc": "12065:17:10",
																		"nodeType": "YulLiteral",
																		"src": "12065:17:10",
																		"type": "",
																		"value": "No active stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12042:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:10"
																},
																"nativeSrc": "12042:41:10",
																"nodeType": "YulFunctionCall",
																"src": "12042:41:10"
															},
															"nativeSrc": "12042:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "12042:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
												"nativeSrc": "11925:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12023:6:10",
														"nodeType": "YulTypedName",
														"src": "12023:6:10",
														"type": ""
													}
												],
												"src": "11925:165:10"
											},
											{
												"body": {
													"nativeSrc": "12242:220:10",
													"nodeType": "YulBlock",
													"src": "12242:220:10",
													"statements": [
														{
															"nativeSrc": "12252:74:10",
															"nodeType": "YulAssignment",
															"src": "12252:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12318:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12318:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12323:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12323:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12259:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12259:58:10"
																},
																"nativeSrc": "12259:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12259:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12252:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12252:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12424:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12424:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																	"nativeSrc": "12335:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12335:88:10"
																},
																"nativeSrc": "12335:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12335:93:10"
															},
															"nativeSrc": "12335:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12335:93:10"
														},
														{
															"nativeSrc": "12437:19:10",
															"nodeType": "YulAssignment",
															"src": "12437:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12448:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12448:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12453:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12444:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12444:3:10"
																},
																"nativeSrc": "12444:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12444:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12437:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12437:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12096:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12230:3:10",
														"nodeType": "YulTypedName",
														"src": "12230:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12238:3:10",
														"nodeType": "YulTypedName",
														"src": "12238:3:10",
														"type": ""
													}
												],
												"src": "12096:366:10"
											},
											{
												"body": {
													"nativeSrc": "12639:248:10",
													"nodeType": "YulBlock",
													"src": "12639:248:10",
													"statements": [
														{
															"nativeSrc": "12649:26:10",
															"nodeType": "YulAssignment",
															"src": "12649:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12661:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12661:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12672:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12657:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12657:3:10"
																},
																"nativeSrc": "12657:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12657:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12649:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12649:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12696:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12707:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12707:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12692:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12692:3:10"
																		},
																		"nativeSrc": "12692:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12692:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12715:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12715:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12721:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12721:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12711:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12711:3:10"
																		},
																		"nativeSrc": "12711:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12711:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12685:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12685:6:10"
																},
																"nativeSrc": "12685:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12685:47:10"
															},
															"nativeSrc": "12685:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12685:47:10"
														},
														{
															"nativeSrc": "12741:139:10",
															"nodeType": "YulAssignment",
															"src": "12741:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12875:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12875:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12749:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12749:124:10"
																},
																"nativeSrc": "12749:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12749:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12741:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12741:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12468:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12619:9:10",
														"nodeType": "YulTypedName",
														"src": "12619:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12634:4:10",
														"nodeType": "YulTypedName",
														"src": "12634:4:10",
														"type": ""
													}
												],
												"src": "12468:419:10"
											},
											{
												"body": {
													"nativeSrc": "12937:147:10",
													"nodeType": "YulBlock",
													"src": "12937:147:10",
													"statements": [
														{
															"nativeSrc": "12947:25:10",
															"nodeType": "YulAssignment",
															"src": "12947:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12970:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12970:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12952:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12952:17:10"
																},
																"nativeSrc": "12952:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12952:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12947:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12947:1:10"
																}
															]
														},
														{
															"nativeSrc": "12981:25:10",
															"nodeType": "YulAssignment",
															"src": "12981:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13004:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13004:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12986:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12986:17:10"
																},
																"nativeSrc": "12986:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12986:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12981:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12981:1:10"
																}
															]
														},
														{
															"nativeSrc": "13015:16:10",
															"nodeType": "YulAssignment",
															"src": "13015:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13026:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13026:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13029:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13029:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13022:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13022:3:10"
																},
																"nativeSrc": "13022:9:10",
																"nodeType": "YulFunctionCall",
																"src": "13022:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13015:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13015:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13055:22:10",
																"nodeType": "YulBlock",
																"src": "13055:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13057:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13057:16:10"
																			},
																			"nativeSrc": "13057:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13057:18:10"
																		},
																		"nativeSrc": "13057:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13057:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13047:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "13047:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13050:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13050:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13044:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13044:2:10"
																},
																"nativeSrc": "13044:10:10",
																"nodeType": "YulFunctionCall",
																"src": "13044:10:10"
															},
															"nativeSrc": "13041:36:10",
															"nodeType": "YulIf",
															"src": "13041:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12893:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12924:1:10",
														"nodeType": "YulTypedName",
														"src": "12924:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12927:1:10",
														"nodeType": "YulTypedName",
														"src": "12927:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12933:3:10",
														"nodeType": "YulTypedName",
														"src": "12933:3:10",
														"type": ""
													}
												],
												"src": "12893:191:10"
											},
											{
												"body": {
													"nativeSrc": "13196:56:10",
													"nodeType": "YulBlock",
													"src": "13196:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13218:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13218:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13226:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13226:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13214:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13214:3:10"
																		},
																		"nativeSrc": "13214:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13214:14:10"
																	},
																	{
																		"hexValue": "5374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "13230:14:10",
																		"nodeType": "YulLiteral",
																		"src": "13230:14:10",
																		"type": "",
																		"value": "Still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13207:6:10"
																},
																"nativeSrc": "13207:38:10",
																"nodeType": "YulFunctionCall",
																"src": "13207:38:10"
															},
															"nativeSrc": "13207:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "13207:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
												"nativeSrc": "13090:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13188:6:10",
														"nodeType": "YulTypedName",
														"src": "13188:6:10",
														"type": ""
													}
												],
												"src": "13090:162:10"
											},
											{
												"body": {
													"nativeSrc": "13404:220:10",
													"nodeType": "YulBlock",
													"src": "13404:220:10",
													"statements": [
														{
															"nativeSrc": "13414:74:10",
															"nodeType": "YulAssignment",
															"src": "13414:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13480:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13480:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13485:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13485:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13421:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13421:58:10"
																},
																"nativeSrc": "13421:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13421:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13414:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13414:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13586:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13586:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																	"nativeSrc": "13497:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13497:88:10"
																},
																"nativeSrc": "13497:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13497:93:10"
															},
															"nativeSrc": "13497:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13497:93:10"
														},
														{
															"nativeSrc": "13599:19:10",
															"nodeType": "YulAssignment",
															"src": "13599:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13610:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13610:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13615:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13615:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13606:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13606:3:10"
																},
																"nativeSrc": "13606:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13606:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13599:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13599:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13258:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13392:3:10",
														"nodeType": "YulTypedName",
														"src": "13392:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13400:3:10",
														"nodeType": "YulTypedName",
														"src": "13400:3:10",
														"type": ""
													}
												],
												"src": "13258:366:10"
											},
											{
												"body": {
													"nativeSrc": "13801:248:10",
													"nodeType": "YulBlock",
													"src": "13801:248:10",
													"statements": [
														{
															"nativeSrc": "13811:26:10",
															"nodeType": "YulAssignment",
															"src": "13811:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13823:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13823:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13834:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13834:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13819:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13819:3:10"
																},
																"nativeSrc": "13819:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13819:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13811:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13811:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13858:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13858:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13869:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13869:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13854:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13854:3:10"
																		},
																		"nativeSrc": "13854:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13854:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13877:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13877:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13883:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13883:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13873:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13873:3:10"
																		},
																		"nativeSrc": "13873:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13873:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13847:6:10"
																},
																"nativeSrc": "13847:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13847:47:10"
															},
															"nativeSrc": "13847:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13847:47:10"
														},
														{
															"nativeSrc": "13903:139:10",
															"nodeType": "YulAssignment",
															"src": "13903:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14037:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14037:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13911:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13911:124:10"
																},
																"nativeSrc": "13911:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13911:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13903:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13903:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13630:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13781:9:10",
														"nodeType": "YulTypedName",
														"src": "13781:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13796:4:10",
														"nodeType": "YulTypedName",
														"src": "13796:4:10",
														"type": ""
													}
												],
												"src": "13630:419:10"
											},
											{
												"body": {
													"nativeSrc": "14209:288:10",
													"nodeType": "YulBlock",
													"src": "14209:288:10",
													"statements": [
														{
															"nativeSrc": "14219:26:10",
															"nodeType": "YulAssignment",
															"src": "14219:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14231:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14231:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14242:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14242:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14227:3:10"
																},
																"nativeSrc": "14227:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14227:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14219:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14219:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14308:3:10"
																		},
																		"nativeSrc": "14308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14255:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14255:43:10"
																},
																"nativeSrc": "14255:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14255:71:10"
															},
															"nativeSrc": "14255:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14255:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14380:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14380:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14393:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14393:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14404:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14404:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14389:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14389:3:10"
																		},
																		"nativeSrc": "14389:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14389:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14336:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14336:43:10"
																},
																"nativeSrc": "14336:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14336:72:10"
															},
															"nativeSrc": "14336:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14336:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14462:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14462:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14475:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14475:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14486:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14486:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14471:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14471:3:10"
																		},
																		"nativeSrc": "14471:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14471:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14418:43:10"
																},
																"nativeSrc": "14418:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14418:72:10"
															},
															"nativeSrc": "14418:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14418:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14055:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14165:9:10",
														"nodeType": "YulTypedName",
														"src": "14165:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14177:6:10",
														"nodeType": "YulTypedName",
														"src": "14177:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14185:6:10",
														"nodeType": "YulTypedName",
														"src": "14185:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14193:6:10",
														"nodeType": "YulTypedName",
														"src": "14193:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14204:4:10",
														"nodeType": "YulTypedName",
														"src": "14204:4:10",
														"type": ""
													}
												],
												"src": "14055:442:10"
											},
											{
												"body": {
													"nativeSrc": "14609:63:10",
													"nodeType": "YulBlock",
													"src": "14609:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14631:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14631:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14639:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14639:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14627:3:10"
																		},
																		"nativeSrc": "14627:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14627:14:10"
																	},
																	{
																		"hexValue": "4e6f206665657320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "14643:21:10",
																		"nodeType": "YulLiteral",
																		"src": "14643:21:10",
																		"type": "",
																		"value": "No fees to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14620:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14620:6:10"
																},
																"nativeSrc": "14620:45:10",
																"nodeType": "YulFunctionCall",
																"src": "14620:45:10"
															},
															"nativeSrc": "14620:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "14620:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
												"nativeSrc": "14503:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14601:6:10",
														"nodeType": "YulTypedName",
														"src": "14601:6:10",
														"type": ""
													}
												],
												"src": "14503:169:10"
											},
											{
												"body": {
													"nativeSrc": "14824:220:10",
													"nodeType": "YulBlock",
													"src": "14824:220:10",
													"statements": [
														{
															"nativeSrc": "14834:74:10",
															"nodeType": "YulAssignment",
															"src": "14834:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14900:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14900:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14905:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14905:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14841:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14841:58:10"
																},
																"nativeSrc": "14841:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14841:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14834:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14834:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15006:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15006:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																	"nativeSrc": "14917:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14917:88:10"
																},
																"nativeSrc": "14917:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14917:93:10"
															},
															"nativeSrc": "14917:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14917:93:10"
														},
														{
															"nativeSrc": "15019:19:10",
															"nodeType": "YulAssignment",
															"src": "15019:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15030:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15030:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15035:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15035:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15026:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15026:3:10"
																},
																"nativeSrc": "15026:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15026:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15019:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15019:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14678:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14812:3:10",
														"nodeType": "YulTypedName",
														"src": "14812:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14820:3:10",
														"nodeType": "YulTypedName",
														"src": "14820:3:10",
														"type": ""
													}
												],
												"src": "14678:366:10"
											},
											{
												"body": {
													"nativeSrc": "15221:248:10",
													"nodeType": "YulBlock",
													"src": "15221:248:10",
													"statements": [
														{
															"nativeSrc": "15231:26:10",
															"nodeType": "YulAssignment",
															"src": "15231:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15243:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15243:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15254:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15254:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15239:3:10"
																},
																"nativeSrc": "15239:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15239:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15231:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15231:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15278:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15278:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15289:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15289:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15274:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15274:3:10"
																		},
																		"nativeSrc": "15274:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15274:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15297:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15297:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15303:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15303:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15293:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15293:3:10"
																		},
																		"nativeSrc": "15293:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15293:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15267:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15267:6:10"
																},
																"nativeSrc": "15267:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15267:47:10"
															},
															"nativeSrc": "15267:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15267:47:10"
														},
														{
															"nativeSrc": "15323:139:10",
															"nodeType": "YulAssignment",
															"src": "15323:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15457:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15457:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15331:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15331:124:10"
																},
																"nativeSrc": "15331:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15331:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15323:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15323:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15050:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15201:9:10",
														"nodeType": "YulTypedName",
														"src": "15201:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15216:4:10",
														"nodeType": "YulTypedName",
														"src": "15216:4:10",
														"type": ""
													}
												],
												"src": "15050:419:10"
											},
											{
												"body": {
													"nativeSrc": "15581:62:10",
													"nodeType": "YulBlock",
													"src": "15581:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15603:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15603:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15611:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15611:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15599:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15599:3:10"
																		},
																		"nativeSrc": "15599:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15599:14:10"
																	},
																	{
																		"hexValue": "5061636b616765206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "15615:20:10",
																		"nodeType": "YulLiteral",
																		"src": "15615:20:10",
																		"type": "",
																		"value": "Package not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15592:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15592:6:10"
																},
																"nativeSrc": "15592:44:10",
																"nodeType": "YulFunctionCall",
																"src": "15592:44:10"
															},
															"nativeSrc": "15592:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "15592:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632",
												"nativeSrc": "15475:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15573:6:10",
														"nodeType": "YulTypedName",
														"src": "15573:6:10",
														"type": ""
													}
												],
												"src": "15475:168:10"
											},
											{
												"body": {
													"nativeSrc": "15795:220:10",
													"nodeType": "YulBlock",
													"src": "15795:220:10",
													"statements": [
														{
															"nativeSrc": "15805:74:10",
															"nodeType": "YulAssignment",
															"src": "15805:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15871:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15871:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15876:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15876:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15812:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15812:58:10"
																},
																"nativeSrc": "15812:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15812:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15805:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15805:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15977:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632",
																	"nativeSrc": "15888:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15888:88:10"
																},
																"nativeSrc": "15888:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15888:93:10"
															},
															"nativeSrc": "15888:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15888:93:10"
														},
														{
															"nativeSrc": "15990:19:10",
															"nodeType": "YulAssignment",
															"src": "15990:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16001:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16006:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15997:3:10"
																},
																"nativeSrc": "15997:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15997:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15990:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15649:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15783:3:10",
														"nodeType": "YulTypedName",
														"src": "15783:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15791:3:10",
														"nodeType": "YulTypedName",
														"src": "15791:3:10",
														"type": ""
													}
												],
												"src": "15649:366:10"
											},
											{
												"body": {
													"nativeSrc": "16192:248:10",
													"nodeType": "YulBlock",
													"src": "16192:248:10",
													"statements": [
														{
															"nativeSrc": "16202:26:10",
															"nodeType": "YulAssignment",
															"src": "16202:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16214:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16214:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16225:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16225:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16210:3:10"
																},
																"nativeSrc": "16210:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16210:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16202:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16202:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16249:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16249:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16260:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16260:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16245:3:10"
																		},
																		"nativeSrc": "16245:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16245:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16268:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16268:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16274:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16274:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16264:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16264:3:10"
																		},
																		"nativeSrc": "16264:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16264:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16238:6:10"
																},
																"nativeSrc": "16238:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16238:47:10"
															},
															"nativeSrc": "16238:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16238:47:10"
														},
														{
															"nativeSrc": "16294:139:10",
															"nodeType": "YulAssignment",
															"src": "16294:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16428:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16428:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16302:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16302:124:10"
																},
																"nativeSrc": "16302:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16302:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16294:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16021:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16172:9:10",
														"nodeType": "YulTypedName",
														"src": "16172:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16187:4:10",
														"nodeType": "YulTypedName",
														"src": "16187:4:10",
														"type": ""
													}
												],
												"src": "16021:419:10"
											},
											{
												"body": {
													"nativeSrc": "16552:58:10",
													"nodeType": "YulBlock",
													"src": "16552:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16574:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16574:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16582:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16582:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16570:3:10"
																		},
																		"nativeSrc": "16570:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16570:14:10"
																	},
																	{
																		"hexValue": "416d6f756e7420746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "16586:16:10",
																		"nodeType": "YulLiteral",
																		"src": "16586:16:10",
																		"type": "",
																		"value": "Amount too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16563:6:10"
																},
																"nativeSrc": "16563:40:10",
																"nodeType": "YulFunctionCall",
																"src": "16563:40:10"
															},
															"nativeSrc": "16563:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "16563:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
												"nativeSrc": "16446:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16544:6:10",
														"nodeType": "YulTypedName",
														"src": "16544:6:10",
														"type": ""
													}
												],
												"src": "16446:164:10"
											},
											{
												"body": {
													"nativeSrc": "16762:220:10",
													"nodeType": "YulBlock",
													"src": "16762:220:10",
													"statements": [
														{
															"nativeSrc": "16772:74:10",
															"nodeType": "YulAssignment",
															"src": "16772:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16838:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16838:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16843:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16843:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16779:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16779:58:10"
																},
																"nativeSrc": "16779:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16779:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16772:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16772:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16944:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16944:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
																	"nativeSrc": "16855:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16855:88:10"
																},
																"nativeSrc": "16855:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16855:93:10"
															},
															"nativeSrc": "16855:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16855:93:10"
														},
														{
															"nativeSrc": "16957:19:10",
															"nodeType": "YulAssignment",
															"src": "16957:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16968:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16968:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16973:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16973:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16964:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16964:3:10"
																},
																"nativeSrc": "16964:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16964:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16957:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16957:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16616:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16750:3:10",
														"nodeType": "YulTypedName",
														"src": "16750:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16758:3:10",
														"nodeType": "YulTypedName",
														"src": "16758:3:10",
														"type": ""
													}
												],
												"src": "16616:366:10"
											},
											{
												"body": {
													"nativeSrc": "17159:248:10",
													"nodeType": "YulBlock",
													"src": "17159:248:10",
													"statements": [
														{
															"nativeSrc": "17169:26:10",
															"nodeType": "YulAssignment",
															"src": "17169:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17181:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17181:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17192:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17192:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17177:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17177:3:10"
																},
																"nativeSrc": "17177:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17177:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17169:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17169:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17216:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17216:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17227:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17227:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17212:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17212:3:10"
																		},
																		"nativeSrc": "17212:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17212:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17235:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17235:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17241:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17241:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17231:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17231:3:10"
																		},
																		"nativeSrc": "17231:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17231:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17205:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17205:6:10"
																},
																"nativeSrc": "17205:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17205:47:10"
															},
															"nativeSrc": "17205:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17205:47:10"
														},
														{
															"nativeSrc": "17261:139:10",
															"nodeType": "YulAssignment",
															"src": "17261:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17395:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17395:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17269:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17269:124:10"
																},
																"nativeSrc": "17269:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17269:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17261:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17261:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16988:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17139:9:10",
														"nodeType": "YulTypedName",
														"src": "17139:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17154:4:10",
														"nodeType": "YulTypedName",
														"src": "17154:4:10",
														"type": ""
													}
												],
												"src": "16988:419:10"
											},
											{
												"body": {
													"nativeSrc": "17539:206:10",
													"nodeType": "YulBlock",
													"src": "17539:206:10",
													"statements": [
														{
															"nativeSrc": "17549:26:10",
															"nodeType": "YulAssignment",
															"src": "17549:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17561:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17561:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17572:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17572:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17557:3:10"
																},
																"nativeSrc": "17557:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17557:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17549:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17549:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17629:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17642:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17653:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17653:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17638:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17638:3:10"
																		},
																		"nativeSrc": "17638:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17638:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17585:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17585:43:10"
																},
																"nativeSrc": "17585:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17585:71:10"
															},
															"nativeSrc": "17585:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17585:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17710:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17710:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17723:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17723:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17734:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17734:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17719:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17719:3:10"
																		},
																		"nativeSrc": "17719:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17719:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17666:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17666:43:10"
																},
																"nativeSrc": "17666:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17666:72:10"
															},
															"nativeSrc": "17666:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17666:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17413:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17503:9:10",
														"nodeType": "YulTypedName",
														"src": "17503:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17515:6:10",
														"nodeType": "YulTypedName",
														"src": "17515:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17523:6:10",
														"nodeType": "YulTypedName",
														"src": "17523:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17534:4:10",
														"nodeType": "YulTypedName",
														"src": "17534:4:10",
														"type": ""
													}
												],
												"src": "17413:332:10"
											},
											{
												"body": {
													"nativeSrc": "17871:200:10",
													"nodeType": "YulBlock",
													"src": "17871:200:10",
													"statements": [
														{
															"nativeSrc": "17881:26:10",
															"nodeType": "YulAssignment",
															"src": "17881:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17893:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17893:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17904:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17904:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17889:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17889:3:10"
																},
																"nativeSrc": "17889:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17889:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17881:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17881:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17961:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17961:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17974:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17974:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17985:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17985:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17970:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17970:3:10"
																		},
																		"nativeSrc": "17970:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17970:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17917:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17917:43:10"
																},
																"nativeSrc": "17917:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17917:71:10"
															},
															"nativeSrc": "17917:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17917:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18036:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18036:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18049:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18049:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18060:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18060:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18045:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18045:3:10"
																		},
																		"nativeSrc": "18045:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18045:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "17998:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "17998:37:10"
																},
																"nativeSrc": "17998:66:10",
																"nodeType": "YulFunctionCall",
																"src": "17998:66:10"
															},
															"nativeSrc": "17998:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "17998:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "17751:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17835:9:10",
														"nodeType": "YulTypedName",
														"src": "17835:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17847:6:10",
														"nodeType": "YulTypedName",
														"src": "17847:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17855:6:10",
														"nodeType": "YulTypedName",
														"src": "17855:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17866:4:10",
														"nodeType": "YulTypedName",
														"src": "17866:4:10",
														"type": ""
													}
												],
												"src": "17751:320:10"
											},
											{
												"body": {
													"nativeSrc": "18183:68:10",
													"nodeType": "YulBlock",
													"src": "18183:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18205:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18205:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18213:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18213:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18201:3:10"
																		},
																		"nativeSrc": "18201:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18201:14:10"
																	},
																	{
																		"hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "18217:26:10",
																		"nodeType": "YulLiteral",
																		"src": "18217:26:10",
																		"type": "",
																		"value": "Zero address not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18194:6:10"
																},
																"nativeSrc": "18194:50:10",
																"nodeType": "YulFunctionCall",
																"src": "18194:50:10"
															},
															"nativeSrc": "18194:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "18194:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
												"nativeSrc": "18077:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18175:6:10",
														"nodeType": "YulTypedName",
														"src": "18175:6:10",
														"type": ""
													}
												],
												"src": "18077:174:10"
											},
											{
												"body": {
													"nativeSrc": "18403:220:10",
													"nodeType": "YulBlock",
													"src": "18403:220:10",
													"statements": [
														{
															"nativeSrc": "18413:74:10",
															"nodeType": "YulAssignment",
															"src": "18413:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18479:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18479:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18484:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18484:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18420:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18420:58:10"
																},
																"nativeSrc": "18420:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18420:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18413:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18413:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18585:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18585:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																	"nativeSrc": "18496:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18496:88:10"
																},
																"nativeSrc": "18496:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18496:93:10"
															},
															"nativeSrc": "18496:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18496:93:10"
														},
														{
															"nativeSrc": "18598:19:10",
															"nodeType": "YulAssignment",
															"src": "18598:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18609:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18609:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18614:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18614:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18605:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18605:3:10"
																},
																"nativeSrc": "18605:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18605:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18598:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18257:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18391:3:10",
														"nodeType": "YulTypedName",
														"src": "18391:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18399:3:10",
														"nodeType": "YulTypedName",
														"src": "18399:3:10",
														"type": ""
													}
												],
												"src": "18257:366:10"
											},
											{
												"body": {
													"nativeSrc": "18800:248:10",
													"nodeType": "YulBlock",
													"src": "18800:248:10",
													"statements": [
														{
															"nativeSrc": "18810:26:10",
															"nodeType": "YulAssignment",
															"src": "18810:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18822:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18822:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18833:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18818:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18818:3:10"
																},
																"nativeSrc": "18818:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18818:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18810:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18810:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18857:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18857:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18868:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18868:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18853:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18853:3:10"
																		},
																		"nativeSrc": "18853:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18853:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18876:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18876:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18882:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18882:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18872:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18872:3:10"
																		},
																		"nativeSrc": "18872:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18872:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18846:6:10"
																},
																"nativeSrc": "18846:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18846:47:10"
															},
															"nativeSrc": "18846:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18846:47:10"
														},
														{
															"nativeSrc": "18902:139:10",
															"nodeType": "YulAssignment",
															"src": "18902:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19036:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19036:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18910:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18910:124:10"
																},
																"nativeSrc": "18910:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18910:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18902:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18902:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18629:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18780:9:10",
														"nodeType": "YulTypedName",
														"src": "18780:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18795:4:10",
														"nodeType": "YulTypedName",
														"src": "18795:4:10",
														"type": ""
													}
												],
												"src": "18629:419:10"
											},
											{
												"body": {
													"nativeSrc": "19160:62:10",
													"nodeType": "YulBlock",
													"src": "19160:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19182:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19190:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19190:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19178:3:10"
																		},
																		"nativeSrc": "19178:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19178:14:10"
																	},
																	{
																		"hexValue": "4e6f2072657761726420746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "19194:20:10",
																		"nodeType": "YulLiteral",
																		"src": "19194:20:10",
																		"type": "",
																		"value": "No reward to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19171:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19171:6:10"
																},
																"nativeSrc": "19171:44:10",
																"nodeType": "YulFunctionCall",
																"src": "19171:44:10"
															},
															"nativeSrc": "19171:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "19171:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
												"nativeSrc": "19054:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19152:6:10",
														"nodeType": "YulTypedName",
														"src": "19152:6:10",
														"type": ""
													}
												],
												"src": "19054:168:10"
											},
											{
												"body": {
													"nativeSrc": "19374:220:10",
													"nodeType": "YulBlock",
													"src": "19374:220:10",
													"statements": [
														{
															"nativeSrc": "19384:74:10",
															"nodeType": "YulAssignment",
															"src": "19384:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19450:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19450:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19455:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19455:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19391:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19391:58:10"
																},
																"nativeSrc": "19391:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19391:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19384:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19384:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19556:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19556:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																	"nativeSrc": "19467:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19467:88:10"
																},
																"nativeSrc": "19467:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19467:93:10"
															},
															"nativeSrc": "19467:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19467:93:10"
														},
														{
															"nativeSrc": "19569:19:10",
															"nodeType": "YulAssignment",
															"src": "19569:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19580:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19576:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19576:3:10"
																},
																"nativeSrc": "19576:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19576:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19569:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19228:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19362:3:10",
														"nodeType": "YulTypedName",
														"src": "19362:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19370:3:10",
														"nodeType": "YulTypedName",
														"src": "19370:3:10",
														"type": ""
													}
												],
												"src": "19228:366:10"
											},
											{
												"body": {
													"nativeSrc": "19771:248:10",
													"nodeType": "YulBlock",
													"src": "19771:248:10",
													"statements": [
														{
															"nativeSrc": "19781:26:10",
															"nodeType": "YulAssignment",
															"src": "19781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19789:3:10"
																},
																"nativeSrc": "19789:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19828:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19828:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19839:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19839:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19824:3:10"
																		},
																		"nativeSrc": "19824:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19824:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19847:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19847:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19843:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19843:3:10"
																		},
																		"nativeSrc": "19843:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19843:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19817:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19817:6:10"
																},
																"nativeSrc": "19817:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19817:47:10"
															},
															"nativeSrc": "19817:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19817:47:10"
														},
														{
															"nativeSrc": "19873:139:10",
															"nodeType": "YulAssignment",
															"src": "19873:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20007:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20007:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19881:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19881:124:10"
																},
																"nativeSrc": "19881:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19881:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19873:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19873:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19600:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19751:9:10",
														"nodeType": "YulTypedName",
														"src": "19751:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19766:4:10",
														"nodeType": "YulTypedName",
														"src": "19766:4:10",
														"type": ""
													}
												],
												"src": "19600:419:10"
											},
											{
												"body": {
													"nativeSrc": "20257:531:10",
													"nodeType": "YulBlock",
													"src": "20257:531:10",
													"statements": [
														{
															"nativeSrc": "20267:27:10",
															"nodeType": "YulAssignment",
															"src": "20267:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20279:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20279:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20290:3:10",
																		"nodeType": "YulLiteral",
																		"src": "20290:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20275:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20275:3:10"
																},
																"nativeSrc": "20275:19:10",
																"nodeType": "YulFunctionCall",
																"src": "20275:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20267:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20267:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20348:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20348:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20361:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20361:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20372:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20372:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20357:3:10"
																		},
																		"nativeSrc": "20357:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20357:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20304:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20304:43:10"
																},
																"nativeSrc": "20304:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20304:71:10"
															},
															"nativeSrc": "20304:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20304:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20429:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20429:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20442:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20453:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20453:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20438:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20438:3:10"
																		},
																		"nativeSrc": "20438:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20438:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20385:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20385:43:10"
																},
																"nativeSrc": "20385:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20385:72:10"
															},
															"nativeSrc": "20385:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20385:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20511:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20511:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20524:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20524:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20535:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20535:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20520:3:10"
																		},
																		"nativeSrc": "20520:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20520:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20467:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20467:43:10"
																},
																"nativeSrc": "20467:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20467:72:10"
															},
															"nativeSrc": "20467:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20467:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20593:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20593:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20606:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20606:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20617:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20617:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20602:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20602:3:10"
																		},
																		"nativeSrc": "20602:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20602:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20549:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20549:43:10"
																},
																"nativeSrc": "20549:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20549:72:10"
															},
															"nativeSrc": "20549:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20549:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "20675:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20675:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20688:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20688:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20699:3:10",
																				"nodeType": "YulLiteral",
																				"src": "20699:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20684:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20684:3:10"
																		},
																		"nativeSrc": "20684:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20684:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20631:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20631:43:10"
																},
																"nativeSrc": "20631:73:10",
																"nodeType": "YulFunctionCall",
																"src": "20631:73:10"
															},
															"nativeSrc": "20631:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "20631:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "20752:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20752:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20765:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20765:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20776:3:10",
																				"nodeType": "YulLiteral",
																				"src": "20776:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20761:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20761:3:10"
																		},
																		"nativeSrc": "20761:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20761:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "20714:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "20714:37:10"
																},
																"nativeSrc": "20714:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20714:67:10"
															},
															"nativeSrc": "20714:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "20714:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "20025:763:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20189:9:10",
														"nodeType": "YulTypedName",
														"src": "20189:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "20201:6:10",
														"nodeType": "YulTypedName",
														"src": "20201:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20209:6:10",
														"nodeType": "YulTypedName",
														"src": "20209:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20217:6:10",
														"nodeType": "YulTypedName",
														"src": "20217:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20225:6:10",
														"nodeType": "YulTypedName",
														"src": "20225:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20233:6:10",
														"nodeType": "YulTypedName",
														"src": "20233:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20241:6:10",
														"nodeType": "YulTypedName",
														"src": "20241:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20252:4:10",
														"nodeType": "YulTypedName",
														"src": "20252:4:10",
														"type": ""
													}
												],
												"src": "20025:763:10"
											},
											{
												"body": {
													"nativeSrc": "20900:75:10",
													"nodeType": "YulBlock",
													"src": "20900:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20922:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20922:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20930:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20930:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20918:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20918:3:10"
																		},
																		"nativeSrc": "20918:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20918:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20934:33:10",
																		"nodeType": "YulLiteral",
																		"src": "20934:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20911:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20911:6:10"
																},
																"nativeSrc": "20911:57:10",
																"nodeType": "YulFunctionCall",
																"src": "20911:57:10"
															},
															"nativeSrc": "20911:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "20911:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20794:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20892:6:10",
														"nodeType": "YulTypedName",
														"src": "20892:6:10",
														"type": ""
													}
												],
												"src": "20794:181:10"
											},
											{
												"body": {
													"nativeSrc": "21127:220:10",
													"nodeType": "YulBlock",
													"src": "21127:220:10",
													"statements": [
														{
															"nativeSrc": "21137:74:10",
															"nodeType": "YulAssignment",
															"src": "21137:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21203:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21203:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21208:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21208:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21144:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21144:58:10"
																},
																"nativeSrc": "21144:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21144:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21137:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21137:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21309:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "21220:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21220:88:10"
																},
																"nativeSrc": "21220:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21220:93:10"
															},
															"nativeSrc": "21220:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21220:93:10"
														},
														{
															"nativeSrc": "21322:19:10",
															"nodeType": "YulAssignment",
															"src": "21322:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21333:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21333:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21338:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21338:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21329:3:10"
																},
																"nativeSrc": "21329:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21329:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21322:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20981:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21115:3:10",
														"nodeType": "YulTypedName",
														"src": "21115:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21123:3:10",
														"nodeType": "YulTypedName",
														"src": "21123:3:10",
														"type": ""
													}
												],
												"src": "20981:366:10"
											},
											{
												"body": {
													"nativeSrc": "21524:248:10",
													"nodeType": "YulBlock",
													"src": "21524:248:10",
													"statements": [
														{
															"nativeSrc": "21534:26:10",
															"nodeType": "YulAssignment",
															"src": "21534:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21546:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21546:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21542:3:10"
																},
																"nativeSrc": "21542:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21542:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21534:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21534:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21581:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21581:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21592:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21592:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21577:3:10"
																		},
																		"nativeSrc": "21577:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21577:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21600:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21600:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21606:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21606:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:10"
																		},
																		"nativeSrc": "21596:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21596:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21570:6:10"
																},
																"nativeSrc": "21570:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21570:47:10"
															},
															"nativeSrc": "21570:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21570:47:10"
														},
														{
															"nativeSrc": "21626:139:10",
															"nodeType": "YulAssignment",
															"src": "21626:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21760:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21760:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21634:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21634:124:10"
																},
																"nativeSrc": "21634:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21634:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21626:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21626:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21353:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21504:9:10",
														"nodeType": "YulTypedName",
														"src": "21504:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21519:4:10",
														"nodeType": "YulTypedName",
														"src": "21519:4:10",
														"type": ""
													}
												],
												"src": "21353:419:10"
											},
											{
												"body": {
													"nativeSrc": "21904:206:10",
													"nodeType": "YulBlock",
													"src": "21904:206:10",
													"statements": [
														{
															"nativeSrc": "21914:26:10",
															"nodeType": "YulAssignment",
															"src": "21914:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21926:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21926:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21937:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21937:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21922:3:10"
																},
																"nativeSrc": "21922:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21922:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21914:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21914:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21994:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21994:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22007:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22007:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22018:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22018:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22003:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22003:3:10"
																		},
																		"nativeSrc": "22003:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22003:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21950:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21950:43:10"
																},
																"nativeSrc": "21950:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21950:71:10"
															},
															"nativeSrc": "21950:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21950:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22075:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22075:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22088:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22088:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22099:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22099:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22084:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22084:3:10"
																		},
																		"nativeSrc": "22084:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22084:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22031:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22031:43:10"
																},
																"nativeSrc": "22031:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22031:72:10"
															},
															"nativeSrc": "22031:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22031:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21778:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21868:9:10",
														"nodeType": "YulTypedName",
														"src": "21868:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21880:6:10",
														"nodeType": "YulTypedName",
														"src": "21880:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21888:6:10",
														"nodeType": "YulTypedName",
														"src": "21888:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21899:4:10",
														"nodeType": "YulTypedName",
														"src": "21899:4:10",
														"type": ""
													}
												],
												"src": "21778:332:10"
											},
											{
												"body": {
													"nativeSrc": "22270:288:10",
													"nodeType": "YulBlock",
													"src": "22270:288:10",
													"statements": [
														{
															"nativeSrc": "22280:26:10",
															"nodeType": "YulAssignment",
															"src": "22280:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22292:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22292:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22303:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22303:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22288:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22288:3:10"
																},
																"nativeSrc": "22288:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22288:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22280:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22280:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22360:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22360:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22373:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22373:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22384:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22384:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22369:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22369:3:10"
																		},
																		"nativeSrc": "22369:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22369:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22316:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22316:43:10"
																},
																"nativeSrc": "22316:71:10",
																"nodeType": "YulFunctionCall",
																"src": "22316:71:10"
															},
															"nativeSrc": "22316:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "22316:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22441:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22441:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22454:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22454:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22465:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22465:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22450:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22450:3:10"
																		},
																		"nativeSrc": "22450:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22450:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22397:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22397:43:10"
																},
																"nativeSrc": "22397:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22397:72:10"
															},
															"nativeSrc": "22397:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22397:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22523:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22523:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22536:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22536:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22547:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22547:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22532:3:10"
																		},
																		"nativeSrc": "22532:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22532:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22479:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22479:43:10"
																},
																"nativeSrc": "22479:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22479:72:10"
															},
															"nativeSrc": "22479:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22479:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22116:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22226:9:10",
														"nodeType": "YulTypedName",
														"src": "22226:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22238:6:10",
														"nodeType": "YulTypedName",
														"src": "22238:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22246:6:10",
														"nodeType": "YulTypedName",
														"src": "22246:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22254:6:10",
														"nodeType": "YulTypedName",
														"src": "22254:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22265:4:10",
														"nodeType": "YulTypedName",
														"src": "22265:4:10",
														"type": ""
													}
												],
												"src": "22116:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid package ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max fee is 10%\")\n\n    }\n\n    function abi_encode_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only EOA can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583(memPtr) {\n\n        mstore(add(memPtr, 0), \"Still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No fees to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632(memPtr) {\n\n        mstore(add(memPtr, 0), \"Package not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reward to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"926": [
									{
										"length": 32,
										"start": 2386
									},
									{
										"length": 32,
										"start": 2824
									},
									{
										"length": 32,
										"start": 2897
									},
									{
										"length": 32,
										"start": 5096
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c80637b0472f0116100ab578063b5d5b5fa1161006f578063b5d5b5fa146102e0578063cb8f63f614610314578063d96acc7214610332578063eb16975d14610350578063f2fde38b1461036c5761012a565b80637b0472f0146102525780638da5cb5b1461026e578063a6fdc26c1461028c578063a8602fea146102a8578063ae169a50146102c45761012a565b80634626402b116100f25780634626402b146101e6578063476343ee1461020457806358a0bde31461020e5780635acd2e4c1461022c578063715018a6146102485761012a565b80630a34cc121461012e578063181d06a91461014a5780631852e8d9146101665780632e17de7814610196578063407bb09d146101b2575b5f5ffd5b61014860048036038101906101439190611a6d565b610388565b005b610164600480360381019061015f9190611aab565b610415565b005b610180600480360381019061017b9190611b30565b61046c565b60405161018d9190611b7d565b60405180910390f35b6101b060048036038101906101ab9190611aab565b610647565b005b6101cc60048036038101906101c79190611aab565b6109f8565b6040516101dd959493929190611bb4565b60405180910390f35b6101ee610a64565b6040516101fb9190611c05565b60405180910390f35b61020c610a89565b005b610216610b4f565b6040516102239190611c79565b60405180910390f35b61024660048036038101906102419190611c92565b610b73565b005b610250610c37565b005b61026c60048036038101906102679190611c92565b610c4a565b005b610276610f65565b6040516102839190611c05565b60405180910390f35b6102a660048036038101906102a19190611aab565b610f8c565b005b6102c260048036038101906102bd9190611cd0565b61113e565b005b6102de60048036038101906102d99190611aab565b61123a565b005b6102fa60048036038101906102f59190611b30565b61148a565b60405161030b959493929190611cfb565b60405180910390f35b61031c6114e2565b6040516103299190611b7d565b60405180910390f35b61033a6114e8565b6040516103479190611b7d565b60405180910390f35b61036a60048036038101906103659190611d4c565b6114ee565b005b61038660048036038101906103819190611cd0565b61163a565b005b6103906116be565b60028054905082106103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90611e0a565b60405180910390fd5b80600283815481106103ec576103eb611e28565b5b905f5260205f2090600502016004015f6101000a81548160ff0219169083151502179055505050565b61041d6116be565b6103e8811115610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990611e9f565b60405180910390fd5b8060058190555050565b5f5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106104bd576104bc611e28565b5b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f81602001510361052b575f915050610641565b5f6002825f01518154811061054357610542611e28565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f8260600151426105f99190611eea565b90505f612710836040015185602001516106139190611f1d565b61061d9190611f8b565b90506301e1338082826106309190611f1d565b61063a9190611f8b565b9450505050505b92915050565b61064f611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146106bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b490612005565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061070d5761070c611e28565b5b905f5260205f20906005020190505f816001015411610761576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107589061206d565b60405180910390fd5b5f6002825f01548154811061077957610778611e28565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050905080602001518260020154610832919061208b565b421015610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90612108565b60405180910390fd5b5f61087f338561046c565b90505f8360010154905060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2085815481106108d8576108d7611e28565b5b905f5260205f2090600502015f5f82015f9055600182015f9055600282015f9055600382015f9055600482015f6101000a81549060ff021916905550506109433382855f015173ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b5f8211156109975761099633837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167f204fccf0d92ed8d48f204adb39b2e81e92bad0dedb93f5716ca9478cfb57de008683856040516109e193929190612126565b60405180910390a2505050506109f5611813565b50565b60028181548110610a07575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a916116be565b5f60045490505f8111610ad9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad0906121a5565b60405180910390fd5b5f600481905550610b4c60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b7b6116be565b6002805490508210610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb990611e0a565b60405180910390fd5b5f60028381548110610bd757610bd6611e28565b5b905f5260205f20906005020190505f816002015490508282600201819055507f447f7585030d3ef3a73db720f6082f657781a4a8657461796b868687caaea1e2848285604051610c2993929190612126565b60405180910390a150505050565b610c3f6116be565b610c485f61181c565b565b610c52611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610cc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb790612005565b60405180910390fd5b5f60028381548110610cd557610cd4611e28565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090508060800151610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db59061220d565b60405180910390fd5b8060600151821015610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90612275565b60405180910390fd5b610e35333084845f015173ffffffffffffffffffffffffffffffffffffffff166118dd909392919063ffffffff16565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808581526020018481526020014281526020014281526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908484604051610f50929190612293565b60405180910390a250610f61611813565b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f94611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990612005565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20828154811061105257611051611e28565b5b905f5260205f20906005020190505f8160010154116110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d9061206d565b60405180910390fd5b806004015f9054906101000a900460ff1615816004015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f31a69d42a6f751ecfc0dbb2406339aec90a8398da52cec9760a134a10d430c0283836004015f9054906101000a900460ff1660405161112a9291906122ba565b60405180910390a25061113b611813565b50565b6111466116be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ab9061232b565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee60405160405180910390a250565b611242611745565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790612005565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110611300576112ff611e28565b5b905f5260205f20906005020190505f816001015411611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b9061206d565b60405180910390fd5b5f61135f338461046c565b90505f81116113a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139a90612393565b60405180910390fd5b428260030181905550816004015f9054906101000a900460ff16156113e15780826001015f8282546113d5919061208b565b9250508190555061142d565b61142c33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117949092919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e27317438483604051611475929190612293565b60405180910390a25050611487611813565b50565b6003602052815f5260405f2081815481106114a3575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60045481565b60055481565b6114f66116be565b60026040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200160011515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555050507f449d6803fbc50a1b24602b1756ef38e10c1fb9c7f3d93da3e69263670258554860016002805490506116149190611eea565b85858585600160405161162c969594939291906123b1565b60405180910390a150505050565b6116426116be565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116b2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116a99190611c05565b60405180910390fd5b6116bb8161181c565b50565b6116c661195f565b73ffffffffffffffffffffffffffffffffffffffff166116e4610f65565b73ffffffffffffffffffffffffffffffffffffffff16146117435761170761195f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161173a9190611c05565b60405180910390fd5b565b60026001540361178a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117819061245a565b60405180910390fd5b6002600181905550565b61180e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016117c7929190612478565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611966565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611959848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016119129392919061249f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611966565b50505050565b5f33905090565b5f5f60205f8451602086015f885af180611985576040513d5f823e3d81fd5b3d92505f519150505f821461199e5760018114156119b9565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156119fb57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119f29190611c05565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b611a1781611a05565b8114611a21575f5ffd5b50565b5f81359050611a3281611a0e565b92915050565b5f8115159050919050565b611a4c81611a38565b8114611a56575f5ffd5b50565b5f81359050611a6781611a43565b92915050565b5f5f60408385031215611a8357611a82611a01565b5b5f611a9085828601611a24565b9250506020611aa185828601611a59565b9150509250929050565b5f60208284031215611ac057611abf611a01565b5b5f611acd84828501611a24565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aff82611ad6565b9050919050565b611b0f81611af5565b8114611b19575f5ffd5b50565b5f81359050611b2a81611b06565b92915050565b5f5f60408385031215611b4657611b45611a01565b5b5f611b5385828601611b1c565b9250506020611b6485828601611a24565b9150509250929050565b611b7781611a05565b82525050565b5f602082019050611b905f830184611b6e565b92915050565b611b9f81611af5565b82525050565b611bae81611a38565b82525050565b5f60a082019050611bc75f830188611b96565b611bd46020830187611b6e565b611be16040830186611b6e565b611bee6060830185611b6e565b611bfb6080830184611ba5565b9695505050505050565b5f602082019050611c185f830184611b96565b92915050565b5f819050919050565b5f611c41611c3c611c3784611ad6565b611c1e565b611ad6565b9050919050565b5f611c5282611c27565b9050919050565b5f611c6382611c48565b9050919050565b611c7381611c59565b82525050565b5f602082019050611c8c5f830184611c6a565b92915050565b5f5f60408385031215611ca857611ca7611a01565b5b5f611cb585828601611a24565b9250506020611cc685828601611a24565b9150509250929050565b5f60208284031215611ce557611ce4611a01565b5b5f611cf284828501611b1c565b91505092915050565b5f60a082019050611d0e5f830188611b6e565b611d1b6020830187611b6e565b611d286040830186611b6e565b611d356060830185611b6e565b611d426080830184611ba5565b9695505050505050565b5f5f5f5f60808587031215611d6457611d63611a01565b5b5f611d7187828801611b1c565b9450506020611d8287828801611a24565b9350506040611d9387828801611a24565b9250506060611da487828801611a24565b91505092959194509250565b5f82825260208201905092915050565b7f496e76616c6964207061636b61676520494400000000000000000000000000005f82015250565b5f611df4601283611db0565b9150611dff82611dc0565b602082019050919050565b5f6020820190508181035f830152611e2181611de8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4d617820666565206973203130250000000000000000000000000000000000005f82015250565b5f611e89600e83611db0565b9150611e9482611e55565b602082019050919050565b5f6020820190508181035f830152611eb681611e7d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ef482611a05565b9150611eff83611a05565b9250828203905081811115611f1757611f16611ebd565b5b92915050565b5f611f2782611a05565b9150611f3283611a05565b9250828202611f4081611a05565b91508282048414831517611f5757611f56611ebd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f9582611a05565b9150611fa083611a05565b925082611fb057611faf611f5e565b5b828204905092915050565b7f4f6e6c7920454f412063616e2063616c6c0000000000000000000000000000005f82015250565b5f611fef601183611db0565b9150611ffa82611fbb565b602082019050919050565b5f6020820190508181035f83015261201c81611fe3565b9050919050565b7f4e6f20616374697665207374616b6500000000000000000000000000000000005f82015250565b5f612057600f83611db0565b915061206282612023565b602082019050919050565b5f6020820190508181035f8301526120848161204b565b9050919050565b5f61209582611a05565b91506120a083611a05565b92508282019050808211156120b8576120b7611ebd565b5b92915050565b7f5374696c6c206c6f636b656400000000000000000000000000000000000000005f82015250565b5f6120f2600c83611db0565b91506120fd826120be565b602082019050919050565b5f6020820190508181035f83015261211f816120e6565b9050919050565b5f6060820190506121395f830186611b6e565b6121466020830185611b6e565b6121536040830184611b6e565b949350505050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f61218f601383611db0565b915061219a8261215b565b602082019050919050565b5f6020820190508181035f8301526121bc81612183565b9050919050565b7f5061636b616765206e6f742061637469766500000000000000000000000000005f82015250565b5f6121f7601283611db0565b9150612202826121c3565b602082019050919050565b5f6020820190508181035f830152612224816121eb565b9050919050565b7f416d6f756e7420746f6f206c6f770000000000000000000000000000000000005f82015250565b5f61225f600e83611db0565b915061226a8261222b565b602082019050919050565b5f6020820190508181035f83015261228c81612253565b9050919050565b5f6040820190506122a65f830185611b6e565b6122b36020830184611b6e565b9392505050565b5f6040820190506122cd5f830185611b6e565b6122da6020830184611ba5565b9392505050565b7f5a65726f2061646472657373206e6f7420616c6c6f77656400000000000000005f82015250565b5f612315601883611db0565b9150612320826122e1565b602082019050919050565b5f6020820190508181035f83015261234281612309565b9050919050565b7f4e6f2072657761726420746f20636c61696d00000000000000000000000000005f82015250565b5f61237d601283611db0565b915061238882612349565b602082019050919050565b5f6020820190508181035f8301526123aa81612371565b9050919050565b5f60c0820190506123c45f830189611b6e565b6123d16020830188611b96565b6123de6040830187611b6e565b6123eb6060830186611b6e565b6123f86080830185611b6e565b61240560a0830184611ba5565b979650505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612444601f83611db0565b915061244f82612410565b602082019050919050565b5f6020820190508181035f83015261247181612438565b9050919050565b5f60408201905061248b5f830185611b96565b6124986020830184611b6e565b9392505050565b5f6060820190506124b25f830186611b96565b6124bf6020830185611b96565b6124cc6040830184611b6e565b94935050505056fea26469706673582212206f55a8caa7105627505ba64834cec6b2b89bb7c04747b02264d5e91365e6a4ab64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB5D5B5FA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB5D5B5FA EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xCB8F63F6 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xD96ACC72 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xEB16975D EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xA6FDC26C EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x2C4 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x4626402B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x58A0BDE3 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x5ACD2E4C EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0xA34CC12 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x181D06A9 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x407BB09D EQ PUSH2 0x1B2 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1A6D JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0xA89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0xC37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0xF8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0x113E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH2 0x123A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x14EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST PUSH2 0x163A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x390 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x459 SWAP1 PUSH2 0x1E9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x52B JUMPI PUSH0 SWAP2 POP POP PUSH2 0x641 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x543 JUMPI PUSH2 0x542 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP4 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 DUP3 DUP3 PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x64F PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B4 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x70D JUMPI PUSH2 0x70C PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x758 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 PUSH0 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x779 JUMPI PUSH2 0x778 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x87F CALLER DUP6 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x8D8 JUMPI PUSH2 0x8D7 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0x943 CALLER DUP3 DUP6 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x204FCCF0D92ED8D48F204ADB39B2E81E92BAD0DEDB93F5716CA9478CFB57DE00 DUP7 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x9F5 PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA07 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA91 PUSH2 0x16BE JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD0 SWAP1 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xB4C PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0xBC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP1 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x447F7585030D3EF3A73DB720F6082F657781A4A8657461796B868687CAAEA1E2 DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2126 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xC3F PUSH2 0x16BE JUMP JUMPDEST PUSH2 0xC48 PUSH0 PUSH2 0x181C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB7 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB5 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP3 LT ISZERO PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE35 CALLER ADDRESS DUP5 DUP5 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18DD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP3 SWAP2 SWAP1 PUSH2 0x2293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xF61 PUSH2 0x1813 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF94 PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1052 JUMPI PUSH2 0x1051 PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109D SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x31A69D42A6F751ECFC0DBB2406339AEC90A8398DA52CEC9760A134A10D430C02 DUP4 DUP4 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x112A SWAP3 SWAP2 SWAP1 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x113B PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1146 PUSH2 0x16BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1242 PUSH2 0x1745 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1300 JUMPI PUSH2 0x12FF PUSH2 0x1E28 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134B SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x135F CALLER DUP5 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x13A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139A SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E1 JUMPI DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13D5 SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x142D JUMP JUMPDEST PUSH2 0x142C CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1475 SWAP3 SWAP2 SWAP1 PUSH2 0x2293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1487 PUSH2 0x1813 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F6 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x449D6803FBC50A1B24602B1756EF38E10C1FB9C7F3D93DA3E692636702585548 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x162C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x1642 PUSH2 0x16BE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16BB DUP2 PUSH2 0x181C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16C6 PUSH2 0x195F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E4 PUSH2 0xF65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1743 JUMPI PUSH2 0x1707 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x178A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1781 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x180E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x17C7 SWAP3 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1966 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1959 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1912 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1966 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1985 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x199E JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x19B9 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x19FB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A17 DUP2 PUSH2 0x1A05 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A21 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A32 DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4C DUP2 PUSH2 0x1A38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A56 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A67 DUP2 PUSH2 0x1A43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A83 JUMPI PUSH2 0x1A82 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A90 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AA1 DUP6 DUP3 DUP7 ADD PUSH2 0x1A59 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH2 0x1ABF PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACD DUP5 DUP3 DUP6 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF DUP3 PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0F DUP2 PUSH2 0x1AF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B19 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2A DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B46 JUMPI PUSH2 0x1B45 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B53 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B64 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B77 DUP2 PUSH2 0x1A05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B90 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B9F DUP2 PUSH2 0x1AF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BAE DUP2 PUSH2 0x1A38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BC7 PUSH0 DUP4 ADD DUP9 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x1BD4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1BE1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1BEE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1BFB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C18 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 PUSH2 0x1C3C PUSH2 0x1C37 DUP5 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C52 DUP3 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C63 DUP3 PUSH2 0x1C48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C73 DUP2 PUSH2 0x1C59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8C PUSH0 DUP4 ADD DUP5 PUSH2 0x1C6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC6 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE5 JUMPI PUSH2 0x1CE4 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D0E PUSH0 DUP4 ADD DUP9 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D1B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D28 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D35 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1D42 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D64 JUMPI PUSH2 0x1D63 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D71 DUP8 DUP3 DUP9 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D82 DUP8 DUP3 DUP9 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D93 DUP8 DUP3 DUP9 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1DA4 DUP8 DUP3 DUP9 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207061636B6167652049440000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF4 PUSH1 0x12 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFF DUP3 PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E21 DUP2 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4D61782066656520697320313025000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E89 PUSH1 0xE DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E94 DUP3 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB6 DUP2 PUSH2 0x1E7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EF4 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFF DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F17 JUMPI PUSH2 0x1F16 PUSH2 0x1EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F27 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F32 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F40 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1EBD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F95 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA0 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FB0 JUMPI PUSH2 0x1FAF PUSH2 0x1F5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920454F412063616E2063616C6C000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEF PUSH1 0x11 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFA DUP3 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665207374616B650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2057 PUSH1 0xF DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2062 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2084 DUP2 PUSH2 0x204B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2095 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP2 POP PUSH2 0x20A0 DUP4 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x1EBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374696C6C206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20F2 PUSH1 0xC DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FD DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x211F DUP2 PUSH2 0x20E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2139 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2146 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2153 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206665657320746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x218F PUSH1 0x13 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x219A DUP3 PUSH2 0x215B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21BC DUP2 PUSH2 0x2183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061636B616765206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F7 PUSH1 0x12 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2202 DUP3 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2224 DUP2 PUSH2 0x21EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7420746F6F206C6F77000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x225F PUSH1 0xE DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x226A DUP3 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228C DUP2 PUSH2 0x2253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22A6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x22B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22CD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x22DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2315 PUSH1 0x18 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2320 DUP3 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2342 DUP2 PUSH2 0x2309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072657761726420746F20636C61696D0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x237D PUSH1 0x12 DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2388 DUP3 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23AA DUP2 PUSH2 0x2371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x23C4 PUSH0 DUP4 ADD DUP10 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x23D1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x23DE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x23EB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x23F8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2405 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1BA5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2444 PUSH1 0x1F DUP4 PUSH2 0x1DB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x244F DUP3 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2471 DUP2 PUSH2 0x2438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x248B PUSH0 DUP4 ADD DUP6 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x2498 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24B2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x24BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x24CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x55A8CAA7105627505BA64834CEC6B2B8 SWAP12 0xB7 0xC0 SELFBALANCE SELFBALANCE 0xB0 0x22 PUSH5 0xD5E91365E6 LOG4 0xAB PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "412:7481:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6467:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7156:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5395:483;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4066:857;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1138:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1370:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7662:229;;;:::i;:::-;;1077:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6752:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;2686:652:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4985:359:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7364:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3401:604;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1205:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1286:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1322:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5944:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6467:212:9;1531:13:0;:11;:13::i;:::-;6577:12:9::1;:19;;;;6565:9;:31;6557:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;6664:8;6629:12;6642:9;6629:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;:43;;;;;;;;;;;;;;;;;;6467:212:::0;;:::o;7156:144::-;1531:13:0;:11;:13::i;:::-;7240:4:9::1;7233:3;:11;;7225:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;7290:3;7273:14;:20;;;;7156:144:::0;:::o;5395:483::-;5475:7;5494:26;5523:10;:16;5534:4;5523:16;;;;;;;;;;;;;;;5540:10;5523:28;;;;;;;;:::i;:::-;;;;;;;;;;;;5494:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5585:1;5565:9;:16;;;:21;5561:35;;5595:1;5588:8;;;;;5561:35;5607:26;5636:12;5649:9;:19;;;5636:33;;;;;;;;:::i;:::-;;;;;;;;;;;;5607:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5679:18;5718:9;:23;;;5700:15;:41;;;;:::i;:::-;5679:62;;5751:21;5810:5;5795:7;:11;;;5776:9;:16;;;:30;;;;:::i;:::-;5775:40;;;;:::i;:::-;5751:64;;5863:8;5849:10;5833:13;:26;;;;:::i;:::-;5832:39;;;;:::i;:::-;5825:46;;;;;;5395:483;;;;;:::o;4066:857::-;2261:21:4;:19;:21::i;:::-;2553:10:9::1;2540:23;;:9;:23;;;2532:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4143:30:::2;4176:10;:22;4187:10;4176:22;;;;;;;;;;;;;;;4199:10;4176:34;;;;;;;;:::i;:::-;;;;;;;;;;;;4143:67;;4250:1;4228:12;:19;;;:23;4220:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4282:26;4311:12;4324;:22;;;4311:36;;;;;;;;:::i;:::-;;;;;;;;;;;;4282:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;4409:7;:16;;;4384:12;:22;;;:41;;;;:::i;:::-;4365:15;:60;;4357:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4453:14;4470:39;4486:10;4498;4470:15;:39::i;:::-;4453:56;;4519:19;4541:12;:19;;;4519:41;;4578:10;:22;4589:10;4578:22;;;;;;;;;;;;;;;4601:10;4578:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;4571:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4663:64;4703:10;4715:11;4670:7;:18;;;4663:39;;;;:64;;;;;:::i;:::-;4778:1;4769:6;:10;4765:83;;;4795:42;4818:10;4830:6;4795:9;:22;;;;:42;;;;;:::i;:::-;4765:83;4872:10;4863:53;;;4884:10;4896:11;4909:6;4863:53;;;;;;;;:::i;:::-;;;;;;;;4133:790;;;;2303:20:4::0;:18;:20::i;:::-;4066:857:9;:::o;1138:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1370:29::-;;;;;;;;;;;;;:::o;7662:229::-;1531:13:0;:11;:13::i;:::-;7715:14:9::1;7732:15;;7715:32;;7774:1;7765:6;:10;7757:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;7827:1;7809:15;:19;;;;7838:46;7861:14;;;;;;;;;;;7877:6;7838:9;:22;;;;:46;;;;;:::i;:::-;7705:186;7662:229::o:0;1077:33::-;;;:::o;6752:340::-;1531:13:0;:11;:13::i;:::-;6852:12:9::1;:19;;;;6840:9;:31;6832:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;6904:27;6934:12;6947:9;6934:23;;;;;;;;:::i;:::-;;;;;;;;;;;;6904:53;;6967:14;6984:7;:11;;;6967:28;;7019:6;7005:7;:11;;:20;;;;7041:44;7059:9;7070:6;7078;7041:44;;;;;;;;:::i;:::-;;;;;;;;6822:270;;6752:340:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2686:652:9:-;2261:21:4;:19;:21::i;:::-;2553:10:9::1;2540:23;;:9;:23;;;2532:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2776:26:::2;2805:12;2818:9;2805:23;;;;;;;;:::i;:::-;;;;;;;;;;;;2776:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;2846:7;:16;;;2838:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2913:7;:16;;;2903:6;:26;;2895:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2959:78;3003:10;3023:4;3030:6;2966:7;:18;;;2959:43;;;;:78;;;;;;:::i;:::-;3048:10;:22;3059:10;3048:22;;;;;;;;;;;;;;;3076:201;;;;;;;;3111:9;3076:201;;;;3142:6;3076:201;;;;3173:15;3076:201;;;;3217:15;3076:201;;;;3261:5;3076:201;;;;::::0;3048:230:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:10;3294:37;;;3313:9;3324:6;3294:37;;;;;;;:::i;:::-;;;;;;;;2766:572;2303:20:4::0;:18;:20::i;:::-;2686:652:9;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4985:359:9:-;2261:21:4;:19;:21::i;:::-;2553:10:9::1;2540:23;;:9;:23;;;2532:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5072:27:::2;5102:10;:22;5113:10;5102:22;;;;;;;;;;;;;;;5125:10;5102:34;;;;;;;;:::i;:::-;;;;;;;;;;;;5072:64;;5173:1;5154:9;:16;;;:20;5146:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5232:9;:23;;;;;;;;;;;;5231:24;5205:9;:23;;;:50;;;;;;;;;;;;;;;;;;5289:10;5270:67;;;5301:10;5313:9;:23;;;;;;;;;;;;5270:67;;;;;;;:::i;:::-;;;;;;;;5062:282;2303:20:4::0;:18;:20::i;:::-;4985:359:9;:::o;7364:222::-;1531:13:0;:11;:13::i;:::-;7468:1:9::1;7447:23;;:9;:23;;::::0;7439:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7526:9;7509:14;;:26;;;;;;;;;;;;;;;;;;7569:9;7550:29;;;;;;;;;;;;7364:222:::0;:::o;3401:604::-;2261:21:4;:19;:21::i;:::-;2553:10:9::1;2540:23;;:9;:23;;;2532:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3482:27:::2;3512:10;:22;3523:10;3512:22;;;;;;;;;;;;;;;3535:10;3512:34;;;;;;;;:::i;:::-;;;;;;;;;;;;3482:64;;3583:1;3564:9;:16;;;:20;3556:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3615:14;3632:39;3648:10;3660;3632:15;:39::i;:::-;3615:56;;3698:1;3689:6;:10;3681:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3759:15;3733:9;:23;;:41;;;;3789:9;:23;;;;;;;;;;;;3785:153;;;3848:6;3828:9;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;3785:153;;;3885:42;3908:10;3920:6;3885:9;:22;;;;:42;;;;;:::i;:::-;3785:153;3967:10;3953:45;;;3979:10;3991:6;3953:45;;;;;;;:::i;:::-;;;;;;;;3472:533;;2303:20:4::0;:18;:20::i;:::-;3401:604:9;:::o;1205:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1286:30::-;;;;:::o;1322:34::-;;;;:::o;5944:454::-;1531:13:0;:11;:13::i;:::-;6104:12:9::1;6122:173;;;;;;;;6160:10;6122:173;;;;;;6194:8;6122:173;;;;6221:3;6122:173;;;;6248:8;6122:173;;;;6280:4;6122:173;;;;::::0;6104:192:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6311:80;6346:1;6324:12;:19;;;;:23;;;;:::i;:::-;6349:10;6361:8;6371:3;6376:8;6386:4;6311:80;;;;;;;;;;;:::i;:::-;;;;;;;;5944:454:::0;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:90::-;724:7;767:5;760:13;753:21;742:32;;690:90;;;:::o;786:116::-;856:21;871:5;856:21;:::i;:::-;849:5;846:32;836:60;;892:1;889;882:12;836:60;786:116;:::o;908:133::-;951:5;989:6;976:20;967:29;;1005:30;1029:5;1005:30;:::i;:::-;908:133;;;;:::o;1047:468::-;1112:6;1120;1169:2;1157:9;1148:7;1144:23;1140:32;1137:119;;;1175:79;;:::i;:::-;1137:119;1295:1;1320:53;1365:7;1356:6;1345:9;1341:22;1320:53;:::i;:::-;1310:63;;1266:117;1422:2;1448:50;1490:7;1481:6;1470:9;1466:22;1448:50;:::i;:::-;1438:60;;1393:115;1047:468;;;;;:::o;1521:329::-;1580:6;1629:2;1617:9;1608:7;1604:23;1600:32;1597:119;;;1635:79;;:::i;:::-;1597:119;1755:1;1780:53;1825:7;1816:6;1805:9;1801:22;1780:53;:::i;:::-;1770:63;;1726:117;1521:329;;;;:::o;1856:126::-;1893:7;1933:42;1926:5;1922:54;1911:65;;1856:126;;;:::o;1988:96::-;2025:7;2054:24;2072:5;2054:24;:::i;:::-;2043:35;;1988:96;;;:::o;2090:122::-;2163:24;2181:5;2163:24;:::i;:::-;2156:5;2153:35;2143:63;;2202:1;2199;2192:12;2143:63;2090:122;:::o;2218:139::-;2264:5;2302:6;2289:20;2280:29;;2318:33;2345:5;2318:33;:::i;:::-;2218:139;;;;:::o;2363:474::-;2431:6;2439;2488:2;2476:9;2467:7;2463:23;2459:32;2456:119;;;2494:79;;:::i;:::-;2456:119;2614:1;2639:53;2684:7;2675:6;2664:9;2660:22;2639:53;:::i;:::-;2629:63;;2585:117;2741:2;2767:53;2812:7;2803:6;2792:9;2788:22;2767:53;:::i;:::-;2757:63;;2712:118;2363:474;;;;;:::o;2843:118::-;2930:24;2948:5;2930:24;:::i;:::-;2925:3;2918:37;2843:118;;:::o;2967:222::-;3060:4;3098:2;3087:9;3083:18;3075:26;;3111:71;3179:1;3168:9;3164:17;3155:6;3111:71;:::i;:::-;2967:222;;;;:::o;3195:118::-;3282:24;3300:5;3282:24;:::i;:::-;3277:3;3270:37;3195:118;;:::o;3319:109::-;3400:21;3415:5;3400:21;:::i;:::-;3395:3;3388:34;3319:109;;:::o;3434:652::-;3633:4;3671:3;3660:9;3656:19;3648:27;;3685:71;3753:1;3742:9;3738:17;3729:6;3685:71;:::i;:::-;3766:72;3834:2;3823:9;3819:18;3810:6;3766:72;:::i;:::-;3848;3916:2;3905:9;3901:18;3892:6;3848:72;:::i;:::-;3930;3998:2;3987:9;3983:18;3974:6;3930:72;:::i;:::-;4012:67;4074:3;4063:9;4059:19;4050:6;4012:67;:::i;:::-;3434:652;;;;;;;;:::o;4092:222::-;4185:4;4223:2;4212:9;4208:18;4200:26;;4236:71;4304:1;4293:9;4289:17;4280:6;4236:71;:::i;:::-;4092:222;;;;:::o;4320:60::-;4348:3;4369:5;4362:12;;4320:60;;;:::o;4386:142::-;4436:9;4469:53;4487:34;4496:24;4514:5;4496:24;:::i;:::-;4487:34;:::i;:::-;4469:53;:::i;:::-;4456:66;;4386:142;;;:::o;4534:126::-;4584:9;4617:37;4648:5;4617:37;:::i;:::-;4604:50;;4534:126;;;:::o;4666:140::-;4730:9;4763:37;4794:5;4763:37;:::i;:::-;4750:50;;4666:140;;;:::o;4812:159::-;4913:51;4958:5;4913:51;:::i;:::-;4908:3;4901:64;4812:159;;:::o;4977:250::-;5084:4;5122:2;5111:9;5107:18;5099:26;;5135:85;5217:1;5206:9;5202:17;5193:6;5135:85;:::i;:::-;4977:250;;;;:::o;5233:474::-;5301:6;5309;5358:2;5346:9;5337:7;5333:23;5329:32;5326:119;;;5364:79;;:::i;:::-;5326:119;5484:1;5509:53;5554:7;5545:6;5534:9;5530:22;5509:53;:::i;:::-;5499:63;;5455:117;5611:2;5637:53;5682:7;5673:6;5662:9;5658:22;5637:53;:::i;:::-;5627:63;;5582:118;5233:474;;;;;:::o;5713:329::-;5772:6;5821:2;5809:9;5800:7;5796:23;5792:32;5789:119;;;5827:79;;:::i;:::-;5789:119;5947:1;5972:53;6017:7;6008:6;5997:9;5993:22;5972:53;:::i;:::-;5962:63;;5918:117;5713:329;;;;:::o;6048:652::-;6247:4;6285:3;6274:9;6270:19;6262:27;;6299:71;6367:1;6356:9;6352:17;6343:6;6299:71;:::i;:::-;6380:72;6448:2;6437:9;6433:18;6424:6;6380:72;:::i;:::-;6462;6530:2;6519:9;6515:18;6506:6;6462:72;:::i;:::-;6544;6612:2;6601:9;6597:18;6588:6;6544:72;:::i;:::-;6626:67;6688:3;6677:9;6673:19;6664:6;6626:67;:::i;:::-;6048:652;;;;;;;;:::o;6706:765::-;6792:6;6800;6808;6816;6865:3;6853:9;6844:7;6840:23;6836:33;6833:120;;;6872:79;;:::i;:::-;6833:120;6992:1;7017:53;7062:7;7053:6;7042:9;7038:22;7017:53;:::i;:::-;7007:63;;6963:117;7119:2;7145:53;7190:7;7181:6;7170:9;7166:22;7145:53;:::i;:::-;7135:63;;7090:118;7247:2;7273:53;7318:7;7309:6;7298:9;7294:22;7273:53;:::i;:::-;7263:63;;7218:118;7375:2;7401:53;7446:7;7437:6;7426:9;7422:22;7401:53;:::i;:::-;7391:63;;7346:118;6706:765;;;;;;;:::o;7477:169::-;7561:11;7595:6;7590:3;7583:19;7635:4;7630:3;7626:14;7611:29;;7477:169;;;;:::o;7652:168::-;7792:20;7788:1;7780:6;7776:14;7769:44;7652:168;:::o;7826:366::-;7968:3;7989:67;8053:2;8048:3;7989:67;:::i;:::-;7982:74;;8065:93;8154:3;8065:93;:::i;:::-;8183:2;8178:3;8174:12;8167:19;;7826:366;;;:::o;8198:419::-;8364:4;8402:2;8391:9;8387:18;8379:26;;8451:9;8445:4;8441:20;8437:1;8426:9;8422:17;8415:47;8479:131;8605:4;8479:131;:::i;:::-;8471:139;;8198:419;;;:::o;8623:180::-;8671:77;8668:1;8661:88;8768:4;8765:1;8758:15;8792:4;8789:1;8782:15;8809:164;8949:16;8945:1;8937:6;8933:14;8926:40;8809:164;:::o;8979:366::-;9121:3;9142:67;9206:2;9201:3;9142:67;:::i;:::-;9135:74;;9218:93;9307:3;9218:93;:::i;:::-;9336:2;9331:3;9327:12;9320:19;;8979:366;;;:::o;9351:419::-;9517:4;9555:2;9544:9;9540:18;9532:26;;9604:9;9598:4;9594:20;9590:1;9579:9;9575:17;9568:47;9632:131;9758:4;9632:131;:::i;:::-;9624:139;;9351:419;;;:::o;9776:180::-;9824:77;9821:1;9814:88;9921:4;9918:1;9911:15;9945:4;9942:1;9935:15;9962:194;10002:4;10022:20;10040:1;10022:20;:::i;:::-;10017:25;;10056:20;10074:1;10056:20;:::i;:::-;10051:25;;10100:1;10097;10093:9;10085:17;;10124:1;10118:4;10115:11;10112:37;;;10129:18;;:::i;:::-;10112:37;9962:194;;;;:::o;10162:410::-;10202:7;10225:20;10243:1;10225:20;:::i;:::-;10220:25;;10259:20;10277:1;10259:20;:::i;:::-;10254:25;;10314:1;10311;10307:9;10336:30;10354:11;10336:30;:::i;:::-;10325:41;;10515:1;10506:7;10502:15;10499:1;10496:22;10476:1;10469:9;10449:83;10426:139;;10545:18;;:::i;:::-;10426:139;10210:362;10162:410;;;;:::o;10578:180::-;10626:77;10623:1;10616:88;10723:4;10720:1;10713:15;10747:4;10744:1;10737:15;10764:185;10804:1;10821:20;10839:1;10821:20;:::i;:::-;10816:25;;10855:20;10873:1;10855:20;:::i;:::-;10850:25;;10894:1;10884:35;;10899:18;;:::i;:::-;10884:35;10941:1;10938;10934:9;10929:14;;10764:185;;;;:::o;10955:167::-;11095:19;11091:1;11083:6;11079:14;11072:43;10955:167;:::o;11128:366::-;11270:3;11291:67;11355:2;11350:3;11291:67;:::i;:::-;11284:74;;11367:93;11456:3;11367:93;:::i;:::-;11485:2;11480:3;11476:12;11469:19;;11128:366;;;:::o;11500:419::-;11666:4;11704:2;11693:9;11689:18;11681:26;;11753:9;11747:4;11743:20;11739:1;11728:9;11724:17;11717:47;11781:131;11907:4;11781:131;:::i;:::-;11773:139;;11500:419;;;:::o;11925:165::-;12065:17;12061:1;12053:6;12049:14;12042:41;11925:165;:::o;12096:366::-;12238:3;12259:67;12323:2;12318:3;12259:67;:::i;:::-;12252:74;;12335:93;12424:3;12335:93;:::i;:::-;12453:2;12448:3;12444:12;12437:19;;12096:366;;;:::o;12468:419::-;12634:4;12672:2;12661:9;12657:18;12649:26;;12721:9;12715:4;12711:20;12707:1;12696:9;12692:17;12685:47;12749:131;12875:4;12749:131;:::i;:::-;12741:139;;12468:419;;;:::o;12893:191::-;12933:3;12952:20;12970:1;12952:20;:::i;:::-;12947:25;;12986:20;13004:1;12986:20;:::i;:::-;12981:25;;13029:1;13026;13022:9;13015:16;;13050:3;13047:1;13044:10;13041:36;;;13057:18;;:::i;:::-;13041:36;12893:191;;;;:::o;13090:162::-;13230:14;13226:1;13218:6;13214:14;13207:38;13090:162;:::o;13258:366::-;13400:3;13421:67;13485:2;13480:3;13421:67;:::i;:::-;13414:74;;13497:93;13586:3;13497:93;:::i;:::-;13615:2;13610:3;13606:12;13599:19;;13258:366;;;:::o;13630:419::-;13796:4;13834:2;13823:9;13819:18;13811:26;;13883:9;13877:4;13873:20;13869:1;13858:9;13854:17;13847:47;13911:131;14037:4;13911:131;:::i;:::-;13903:139;;13630:419;;;:::o;14055:442::-;14204:4;14242:2;14231:9;14227:18;14219:26;;14255:71;14323:1;14312:9;14308:17;14299:6;14255:71;:::i;:::-;14336:72;14404:2;14393:9;14389:18;14380:6;14336:72;:::i;:::-;14418;14486:2;14475:9;14471:18;14462:6;14418:72;:::i;:::-;14055:442;;;;;;:::o;14503:169::-;14643:21;14639:1;14631:6;14627:14;14620:45;14503:169;:::o;14678:366::-;14820:3;14841:67;14905:2;14900:3;14841:67;:::i;:::-;14834:74;;14917:93;15006:3;14917:93;:::i;:::-;15035:2;15030:3;15026:12;15019:19;;14678:366;;;:::o;15050:419::-;15216:4;15254:2;15243:9;15239:18;15231:26;;15303:9;15297:4;15293:20;15289:1;15278:9;15274:17;15267:47;15331:131;15457:4;15331:131;:::i;:::-;15323:139;;15050:419;;;:::o;15475:168::-;15615:20;15611:1;15603:6;15599:14;15592:44;15475:168;:::o;15649:366::-;15791:3;15812:67;15876:2;15871:3;15812:67;:::i;:::-;15805:74;;15888:93;15977:3;15888:93;:::i;:::-;16006:2;16001:3;15997:12;15990:19;;15649:366;;;:::o;16021:419::-;16187:4;16225:2;16214:9;16210:18;16202:26;;16274:9;16268:4;16264:20;16260:1;16249:9;16245:17;16238:47;16302:131;16428:4;16302:131;:::i;:::-;16294:139;;16021:419;;;:::o;16446:164::-;16586:16;16582:1;16574:6;16570:14;16563:40;16446:164;:::o;16616:366::-;16758:3;16779:67;16843:2;16838:3;16779:67;:::i;:::-;16772:74;;16855:93;16944:3;16855:93;:::i;:::-;16973:2;16968:3;16964:12;16957:19;;16616:366;;;:::o;16988:419::-;17154:4;17192:2;17181:9;17177:18;17169:26;;17241:9;17235:4;17231:20;17227:1;17216:9;17212:17;17205:47;17269:131;17395:4;17269:131;:::i;:::-;17261:139;;16988:419;;;:::o;17413:332::-;17534:4;17572:2;17561:9;17557:18;17549:26;;17585:71;17653:1;17642:9;17638:17;17629:6;17585:71;:::i;:::-;17666:72;17734:2;17723:9;17719:18;17710:6;17666:72;:::i;:::-;17413:332;;;;;:::o;17751:320::-;17866:4;17904:2;17893:9;17889:18;17881:26;;17917:71;17985:1;17974:9;17970:17;17961:6;17917:71;:::i;:::-;17998:66;18060:2;18049:9;18045:18;18036:6;17998:66;:::i;:::-;17751:320;;;;;:::o;18077:174::-;18217:26;18213:1;18205:6;18201:14;18194:50;18077:174;:::o;18257:366::-;18399:3;18420:67;18484:2;18479:3;18420:67;:::i;:::-;18413:74;;18496:93;18585:3;18496:93;:::i;:::-;18614:2;18609:3;18605:12;18598:19;;18257:366;;;:::o;18629:419::-;18795:4;18833:2;18822:9;18818:18;18810:26;;18882:9;18876:4;18872:20;18868:1;18857:9;18853:17;18846:47;18910:131;19036:4;18910:131;:::i;:::-;18902:139;;18629:419;;;:::o;19054:168::-;19194:20;19190:1;19182:6;19178:14;19171:44;19054:168;:::o;19228:366::-;19370:3;19391:67;19455:2;19450:3;19391:67;:::i;:::-;19384:74;;19467:93;19556:3;19467:93;:::i;:::-;19585:2;19580:3;19576:12;19569:19;;19228:366;;;:::o;19600:419::-;19766:4;19804:2;19793:9;19789:18;19781:26;;19853:9;19847:4;19843:20;19839:1;19828:9;19824:17;19817:47;19881:131;20007:4;19881:131;:::i;:::-;19873:139;;19600:419;;;:::o;20025:763::-;20252:4;20290:3;20279:9;20275:19;20267:27;;20304:71;20372:1;20361:9;20357:17;20348:6;20304:71;:::i;:::-;20385:72;20453:2;20442:9;20438:18;20429:6;20385:72;:::i;:::-;20467;20535:2;20524:9;20520:18;20511:6;20467:72;:::i;:::-;20549;20617:2;20606:9;20602:18;20593:6;20549:72;:::i;:::-;20631:73;20699:3;20688:9;20684:19;20675:6;20631:73;:::i;:::-;20714:67;20776:3;20765:9;20761:19;20752:6;20714:67;:::i;:::-;20025:763;;;;;;;;;:::o;20794:181::-;20934:33;20930:1;20922:6;20918:14;20911:57;20794:181;:::o;20981:366::-;21123:3;21144:67;21208:2;21203:3;21144:67;:::i;:::-;21137:74;;21220:93;21309:3;21220:93;:::i;:::-;21338:2;21333:3;21329:12;21322:19;;20981:366;;;:::o;21353:419::-;21519:4;21557:2;21546:9;21542:18;21534:26;;21606:9;21600:4;21596:20;21592:1;21581:9;21577:17;21570:47;21634:131;21760:4;21634:131;:::i;:::-;21626:139;;21353:419;;;:::o;21778:332::-;21899:4;21937:2;21926:9;21922:18;21914:26;;21950:71;22018:1;22007:9;22003:17;21994:6;21950:71;:::i;:::-;22031:72;22099:2;22088:9;22084:18;22075:6;22031:72;:::i;:::-;21778:332;;;;;:::o;22116:442::-;22265:4;22303:2;22292:9;22288:18;22280:26;;22316:71;22384:1;22373:9;22369:17;22360:6;22316:71;:::i;:::-;22397:72;22465:2;22454:9;22450:18;22441:6;22397:72;:::i;:::-;22479;22547:2;22536:9;22532:18;22523:6;22479:72;:::i;:::-;22116:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1896400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addFarmPackage(address,uint256,uint256,uint256)": "infinite",
								"autoFarmingFee()": "2491",
								"autoFarmingPool()": "2469",
								"cafiToken()": "infinite",
								"calculateReward(address,uint256)": "infinite",
								"claimReward(uint256)": "infinite",
								"farmPackages(uint256)": "infinite",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"setAPY(uint256,uint256)": "infinite",
								"setAutoFarmingFee(uint256)": "infinite",
								"setTreasuryWallet(address)": "infinite",
								"stake(uint256,uint256)": "infinite",
								"toggleAutoFarming(uint256)": "infinite",
								"toggleFarmPackage(uint256,bool)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasuryWallet()": "2531",
								"unstake(uint256)": "infinite",
								"userStakes(address,uint256)": "infinite",
								"withdrawFees()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1354,
									"end": 1356,
									"name": "PUSH",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1322,
									"end": 1356,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1356,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2024,
									"end": 2405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2142,
									"end": 2155,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2215,
									"end": 2216,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2193,
									"end": 2217,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2193,
									"end": 2217,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2193,
									"end": 2203,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2193,
									"end": 2217,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2193,
									"end": 2217,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2193,
									"end": 2217,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 2185,
									"end": 2240,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2185,
									"end": 2240,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2286,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2258,
									"end": 2287,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2258,
									"end": 2287,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2258,
									"end": 2273,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2258,
									"end": 2287,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2258,
									"end": 2287,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2258,
									"end": 2287,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2250,
									"end": 2315,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 2250,
									"end": 2315,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2345,
									"end": 2355,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2356,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2398,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2366,
									"end": 2380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2398,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2024,
									"end": 2405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1979,
									"end": 1982,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1991,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2024,
									"end": 2028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2022,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2015,
									"end": 2029,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2209,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2041,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964204341464920746F6B656E0000000000000000000000000000"
								},
								{
									"begin": 2177,
									"end": 2178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2165,
									"end": 2179,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2202,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2209,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2581,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2215,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2357,
									"end": 2360,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2442,
									"end": 2444,
									"name": "PUSH",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2437,
									"end": 2440,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2378,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2445,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2378,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2445,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2371,
									"end": 2445,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2454,
									"end": 2547,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2543,
									"end": 2546,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2454,
									"end": 2547,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2454,
									"end": 2547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2454,
									"end": 2547,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2454,
									"end": 2547,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2574,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2567,
									"end": 2570,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2563,
									"end": 2575,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2575,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2575,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2581,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2581,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 3006,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2587,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2753,
									"end": 2757,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2791,
									"end": 2793,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2780,
									"end": 2789,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2794,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2794,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2840,
									"end": 2849,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2834,
									"end": 2838,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2830,
									"end": 2850,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2827,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2815,
									"end": 2824,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2811,
									"end": 2828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2851,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2868,
									"end": 2999,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2994,
									"end": 2998,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2868,
									"end": 2999,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2868,
									"end": 2999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2868,
									"end": 2999,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2868,
									"end": 2999,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 2999,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2860,
									"end": 2999,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 3006,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 3006,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 3006,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2587,
									"end": 3006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3012,
									"end": 3185,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3012,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3152,
									"end": 3177,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C69642074726561737572792077616C6C6574000000000000000000"
								},
								{
									"begin": 3148,
									"end": 3149,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3146,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3136,
									"end": 3150,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3129,
									"end": 3178,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3012,
									"end": 3185,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3012,
									"end": 3185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3333,
									"end": 3336,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3418,
									"end": 3420,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3413,
									"end": 3416,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3354,
									"end": 3421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3519,
									"end": 3522,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3430,
									"end": 3523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3550,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3546,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3539,
									"end": 3551,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3767,
									"end": 3769,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3752,
									"end": 3770,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3816,
									"end": 3825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3806,
									"end": 3826,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3802,
									"end": 3803,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3787,
									"end": 3804,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3827,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3970,
									"end": 3974,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3844,
									"end": 3975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "926"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 7893,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f55a8caa7105627505ba64834cec6b2b89bb7c04747b02264d5e91365e6a4ab64736f6c634300081e0033",
									".code": [
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "7B0472F0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "B5D5B5FA"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "B5D5B5FA"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "CB8F63F6"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "D96ACC72"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "EB16975D"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "7B0472F0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "A6FDC26C"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "A8602FEA"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "AE169A50"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "4626402B"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "4626402B"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "476343EE"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "58A0BDE3"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "5ACD2E4C"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "A34CC12"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "181D06A9"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "1852E8D9"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "2E17DE78"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "407BB09D"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 7893,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6467,
											"end": 6679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6467,
											"end": 6679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7156,
											"end": 7300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7156,
											"end": 7300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 5395,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 5395,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 5395,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4066,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4066,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1138,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1138,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1138,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1370,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1370,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7662,
											"end": 7891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6752,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6752,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2686,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2686,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4985,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4985,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 7364,
											"end": 7586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 7364,
											"end": 7586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3401,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3401,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1205,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1205,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1205,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1286,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1286,
											"end": 1316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1322,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1322,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5944,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 5944,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6577,
											"end": 6596,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6596,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6574,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6596,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6557,
											"end": 6619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6557,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6642,
											"end": 6651,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6629,
											"end": 6652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6629,
											"end": 6661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6629,
											"end": 6672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6467,
											"end": 6679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 7233,
											"end": 7236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7233,
											"end": 7244,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7233,
											"end": 7244,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7225,
											"end": 7263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7225,
											"end": 7263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7290,
											"end": 7293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7273,
											"end": 7293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7293,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5539,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5550,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5523,
											"end": 5551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5565,
											"end": 5586,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 5561,
											"end": 5596,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5588,
											"end": 5596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5588,
											"end": 5596,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5596,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 5561,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5648,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5649,
											"end": 5658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5668,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5636,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5679,
											"end": 5697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5718,
											"end": 5741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5715,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5700,
											"end": 5741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5700,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5741,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5700,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5679,
											"end": 5741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5679,
											"end": 5741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5751,
											"end": 5772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5815,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 5795,
											"end": 5802,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5792,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5776,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5776,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 5775,
											"end": 5815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5775,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5775,
											"end": 5815,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 5775,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5751,
											"end": 5815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5751,
											"end": 5815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5863,
											"end": 5871,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5833,
											"end": 5859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 5833,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5859,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5833,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5832,
											"end": 5871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5832,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5832,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5871,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2549,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2532,
											"end": 2585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4186,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4197,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4198,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4209,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4176,
											"end": 4210,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4240,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4247,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4228,
											"end": 4247,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4247,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4251,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4220,
											"end": 4271,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4220,
											"end": 4271,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4324,
											"end": 4336,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4346,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4324,
											"end": 4346,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4311,
											"end": 4347,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4347,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4416,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4409,
											"end": 4425,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4396,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4384,
											"end": 4406,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4406,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4384,
											"end": 4425,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4384,
											"end": 4425,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4384,
											"end": 4425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4380,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4425,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4425,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4357,
											"end": 4442,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4357,
											"end": 4442,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4453,
											"end": 4467,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4486,
											"end": 4496,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4508,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4485,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 4470,
											"end": 4509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4470,
											"end": 4509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4453,
											"end": 4509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4453,
											"end": 4509,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4553,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4541,
											"end": 4560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4541,
											"end": 4560,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4560,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4560,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4588,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4599,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4600,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4601,
											"end": 4611,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4578,
											"end": 4612,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4578,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 4703,
											"end": 4713,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4726,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4677,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4688,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4670,
											"end": 4688,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4702,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4663,
											"end": 4702,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4702,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4663,
											"end": 4702,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 4663,
											"end": 4727,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4778,
											"end": 4779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4775,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4779,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4848,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4848,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4765,
											"end": 4848,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4818,
											"end": 4828,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4836,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4804,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "926"
										},
										{
											"begin": 4795,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4795,
											"end": 4817,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4795,
											"end": 4817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4795,
											"end": 4837,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4848,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4765,
											"end": 4848,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4882,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "204FCCF0D92ED8D48F204ADB39B2E81E92BAD0DEDB93F5716CA9478CFB57DE00"
										},
										{
											"begin": 4884,
											"end": 4894,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4907,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4915,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4863,
											"end": 4916,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4916,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4923,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4923,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4923,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4923,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1138,
											"end": 1171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7662,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7715,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7732,
											"end": 7747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7747,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7774,
											"end": 7775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7775,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7757,
											"end": 7799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7757,
											"end": 7799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7809,
											"end": 7828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7828,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7861,
											"end": 7875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7883,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7847,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "926"
										},
										{
											"begin": 7838,
											"end": 7860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7838,
											"end": 7860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7838,
											"end": 7860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7838,
											"end": 7884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7705,
											"end": 7891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "926"
										},
										{
											"begin": 1077,
											"end": 1110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6852,
											"end": 6871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6871,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6849,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 6871,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6832,
											"end": 6894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6832,
											"end": 6894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6947,
											"end": 6956,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6934,
											"end": 6957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6957,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6984,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6984,
											"end": 6995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6984,
											"end": 6995,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6967,
											"end": 6995,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7005,
											"end": 7016,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7025,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "447F7585030D3EF3A73DB720F6082F657781A4A8657461796B868687CAAEA1E2"
										},
										{
											"begin": 7059,
											"end": 7068,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7076,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7084,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7041,
											"end": 7085,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7085,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 7092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 7092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 7092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2549,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2532,
											"end": 2585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2818,
											"end": 2827,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2805,
											"end": 2828,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2805,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2853,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2862,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2846,
											"end": 2862,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2862,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2838,
											"end": 2885,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2838,
											"end": 2885,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2920,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2929,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2913,
											"end": 2929,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2929,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2909,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2929,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2895,
											"end": 2948,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2895,
											"end": 2948,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3003,
											"end": 3013,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3027,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3030,
											"end": 3036,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2973,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2984,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2984,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2984,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 3002,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2959,
											"end": 3002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2959,
											"end": 3037,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3058,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3069,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3070,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3111,
											"end": 3120,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3148,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3188,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3232,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3266,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3278,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3311,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 3313,
											"end": 3322,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3330,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3294,
											"end": 3331,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3331,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2766,
											"end": 3338,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2549,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2532,
											"end": 2585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5112,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5123,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5124,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5135,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5102,
											"end": 5136,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5102,
											"end": 5136,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5136,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5136,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5174,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5163,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5154,
											"end": 5170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5154,
											"end": 5170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5154,
											"end": 5170,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5154,
											"end": 5174,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 5146,
											"end": 5194,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5146,
											"end": 5194,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5241,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5232,
											"end": 5255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5255,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5214,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5205,
											"end": 5255,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5299,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "31A69D42A6F751ECFC0DBB2406339AEC90A8398DA52CEC9760A134A10D430C02"
										},
										{
											"begin": 5301,
											"end": 5311,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5322,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5313,
											"end": 5336,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5270,
											"end": 5337,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5337,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5344,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 5344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7447,
											"end": 7470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7447,
											"end": 7470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7470,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7439,
											"end": 7499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7439,
											"end": 7499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7509,
											"end": 7523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7535,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE"
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7550,
											"end": 7579,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2549,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2532,
											"end": 2585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2532,
											"end": 2585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3533,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3534,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3545,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3512,
											"end": 3546,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3512,
											"end": 3546,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3546,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3546,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3573,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3564,
											"end": 3580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3580,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3584,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3556,
											"end": 3604,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3556,
											"end": 3604,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3629,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3671,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3648,
											"end": 3658,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3670,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3647,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3632,
											"end": 3671,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3671,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3632,
											"end": 3671,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3671,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3671,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3695,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3689,
											"end": 3699,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3681,
											"end": 3722,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3681,
											"end": 3722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3774,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3742,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3733,
											"end": 3756,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3774,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3774,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3798,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3789,
											"end": 3812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3854,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3837,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3828,
											"end": 3844,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3828,
											"end": 3854,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3854,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3908,
											"end": 3918,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3926,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3894,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "926"
										},
										{
											"begin": 3885,
											"end": 3907,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3907,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3907,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3885,
											"end": 3907,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3885,
											"end": 3927,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3785,
											"end": 3938,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3977,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743"
										},
										{
											"begin": 3979,
											"end": 3989,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 3997,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3953,
											"end": 3998,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3998,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 4005,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 4005,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 4005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6104,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6160,
											"end": 6170,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6194,
											"end": 6202,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6221,
											"end": 6224,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6256,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6280,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "449D6803FBC50A1B24602B1756EF38E10C1FB9C7F3D93DA3E692636702585548"
										},
										{
											"begin": 6346,
											"end": 6347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6324,
											"end": 6336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6324,
											"end": 6343,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6343,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6324,
											"end": 6347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 6324,
											"end": 6347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6324,
											"end": 6347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 6324,
											"end": 6347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6359,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6361,
											"end": 6369,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6374,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6384,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 6311,
											"end": 6391,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6391,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 780,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 690,
											"end": 780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 760,
											"end": 773,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 753,
											"end": 774,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 742,
											"end": 774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 742,
											"end": 774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 690,
											"end": 780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 786,
											"end": 902,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 786,
											"end": 902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 871,
											"end": 876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 856,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 856,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 856,
											"end": 877,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 856,
											"end": 877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 849,
											"end": 854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 846,
											"end": 878,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 836,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 836,
											"end": 896,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 892,
											"end": 893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 894,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 836,
											"end": 896,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 836,
											"end": 896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 786,
											"end": 902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 786,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 951,
											"end": 956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 976,
											"end": 996,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 967,
											"end": 996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 967,
											"end": 996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1005,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1005,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 1041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 908,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1166,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1175,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1175,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1137,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1365,
											"end": 1372,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1363,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1320,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1373,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1320,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1373,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1490,
											"end": 1497,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1448,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1498,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1448,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1047,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1850,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1521,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1716,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1597,
											"end": 1716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1635,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1635,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1714,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1635,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1716,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1597,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1780,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1833,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1780,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1850,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1850,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1982,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1856,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1922,
											"end": 1976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2084,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1988,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2054,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 2163,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2187,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2163,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2188,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2143,
											"end": 2206,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2206,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2143,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2357,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2218,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2289,
											"end": 2309,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2345,
											"end": 2350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2318,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2351,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2318,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2357,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2357,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2486,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2491,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2575,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2456,
											"end": 2575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2494,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2494,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2456,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 2684,
											"end": 2691,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2639,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2692,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 2639,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2692,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2812,
											"end": 2819,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2801,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 2767,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2767,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2757,
											"end": 2820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2757,
											"end": 2820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2961,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2843,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 2930,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2918,
											"end": 2955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2843,
											"end": 2961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2967,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3083,
											"end": 3101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3177,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3164,
											"end": 3181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3111,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3182,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3111,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3189,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3313,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3195,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3300,
											"end": 3305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 3282,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3306,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3282,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3270,
											"end": 3307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3195,
											"end": 3313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3428,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 3319,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3415,
											"end": 3420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 3400,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 3400,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3388,
											"end": 3422,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3674,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 3753,
											"end": 3754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 3685,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3756,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 3685,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3766,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3838,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3766,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3916,
											"end": 3918,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3848,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3848,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 3930,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4002,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3930,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4059,
											"end": 4078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4012,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4079,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4012,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 4086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4286,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4236,
											"end": 4307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4236,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4380,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4320,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4380,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4528,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4386,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4496,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4514,
											"end": 4519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4496,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4520,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4496,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4487,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4487,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4469,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4522,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4469,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4660,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4534,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4648,
											"end": 4653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4617,
											"end": 4654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4617,
											"end": 4654,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4617,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4604,
											"end": 4654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4806,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4666,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 4794,
											"end": 4799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4763,
											"end": 4800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4800,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 4763,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4806,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4971,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4812,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4913,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4964,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 4913,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4901,
											"end": 4965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5227,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4977,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5111,
											"end": 5120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 5217,
											"end": 5218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 5135,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5220,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 5135,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5227,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5227,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 5227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5344,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5361,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5445,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5326,
											"end": 5445,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5364,
											"end": 5443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5364,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5326,
											"end": 5445,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5326,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5554,
											"end": 5561,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5530,
											"end": 5552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5509,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5562,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5509,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5562,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5455,
											"end": 5572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 5682,
											"end": 5689,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5637,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 5637,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5690,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 6042,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 5713,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5809,
											"end": 5818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5807,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5819,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5824,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5908,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 5789,
											"end": 5908,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5827,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5827,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5906,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5827,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5908,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 5789,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5947,
											"end": 5948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 6017,
											"end": 6024,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6006,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 5972,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 6025,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5972,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6025,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 6025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 6042,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 6042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 6042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 6042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 6042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6288,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6274,
											"end": 6283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6270,
											"end": 6289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6352,
											"end": 6369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6349,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6299,
											"end": 6370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6370,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6299,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6448,
											"end": 6450,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6437,
											"end": 6446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6430,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6380,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6452,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6380,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6506,
											"end": 6512,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6462,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 6462,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6594,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6544,
											"end": 6616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6544,
											"end": 6616,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6544,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6688,
											"end": 6691,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6677,
											"end": 6686,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6626,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6626,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6792,
											"end": 6798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 6863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6869,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6953,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6833,
											"end": 6953,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6872,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6872,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6833,
											"end": 6953,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6833,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 6993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7062,
											"end": 7069,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7053,
											"end": 7059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7042,
											"end": 7051,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7038,
											"end": 7060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7017,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7017,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7070,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6963,
											"end": 7080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 7190,
											"end": 7197,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7145,
											"end": 7198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 7145,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7198,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7247,
											"end": 7249,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 7318,
											"end": 7325,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7307,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7294,
											"end": 7316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7273,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 7273,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7326,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 7336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7375,
											"end": 7377,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7446,
											"end": 7453,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7435,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7401,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 7401,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7454,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 7471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7646,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7477,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7583,
											"end": 7602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7630,
											"end": 7633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7611,
											"end": 7640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7646,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7820,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7652,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7812,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964207061636B6167652049440000000000000000000000000000"
										},
										{
											"begin": 7788,
											"end": 7789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 8192,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7826,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 7971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 8053,
											"end": 8055,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 7989,
											"end": 8056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7989,
											"end": 8056,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7989,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 8056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 8056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 8154,
											"end": 8157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 8065,
											"end": 8158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8158,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 8065,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8178,
											"end": 8181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8174,
											"end": 8186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8186,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8167,
											"end": 8186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 8192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 8192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 8192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 8192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8617,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 8198,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 8404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8391,
											"end": 8400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8451,
											"end": 8460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8441,
											"end": 8461,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 8462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8479,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 8605,
											"end": 8609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8479,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8479,
											"end": 8610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8479,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 8479,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8803,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 8623,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8748,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8668,
											"end": 8669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8758,
											"end": 8773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 8796,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8789,
											"end": 8790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8797,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8973,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 8809,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8965,
											"name": "PUSH",
											"source": 10,
											"value": "4D61782066656520697320313025000000000000000000000000000000000000"
										},
										{
											"begin": 8945,
											"end": 8946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8933,
											"end": 8947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 9206,
											"end": 9208,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 9201,
											"end": 9204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9142,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 9307,
											"end": 9310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 9218,
											"end": 9311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9336,
											"end": 9338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9331,
											"end": 9334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8979,
											"end": 9345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9540,
											"end": 9558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9614,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9575,
											"end": 9592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9568,
											"end": 9615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9758,
											"end": 9762,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9632,
											"end": 9763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 9763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 9763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9776,
											"end": 9956,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9776,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9824,
											"end": 9901,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9821,
											"end": 9822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9814,
											"end": 9902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9918,
											"end": 9919,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9911,
											"end": 9926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9945,
											"end": 9949,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9942,
											"end": 9943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9950,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10156,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 9962,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10002,
											"end": 10006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10040,
											"end": 10041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10022,
											"end": 10042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10042,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10022,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10017,
											"end": 10042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10017,
											"end": 10042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 10074,
											"end": 10075,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10056,
											"end": 10076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10076,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 10056,
											"end": 10076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10100,
											"end": 10101,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10097,
											"end": 10098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10102,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10118,
											"end": 10122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10115,
											"end": 10126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10112,
											"end": 10149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10112,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10112,
											"end": 10149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 10129,
											"end": 10147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10112,
											"end": 10149,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10112,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10572,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 10162,
											"end": 10572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10202,
											"end": 10209,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 10243,
											"end": 10244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10225,
											"end": 10245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10245,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 10225,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10220,
											"end": 10245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 10277,
											"end": 10278,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10259,
											"end": 10279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10279,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10311,
											"end": 10312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10316,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 10354,
											"end": 10365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10336,
											"end": 10366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10366,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 10336,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10506,
											"end": 10513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10502,
											"end": 10517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10496,
											"end": 10518,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10476,
											"end": 10477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10532,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10426,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 10426,
											"end": 10565,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 10545,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 10545,
											"end": 10563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10545,
											"end": 10563,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 10545,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10426,
											"end": 10565,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 10426,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10572,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10572,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10758,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10578,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10703,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10616,
											"end": 10704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10723,
											"end": 10727,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10720,
											"end": 10721,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10713,
											"end": 10728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10751,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10744,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10752,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10949,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 10764,
											"end": 10949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10821,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 10821,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10816,
											"end": 10841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 10855,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10875,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 10895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10899,
											"end": 10917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 10884,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10941,
											"end": 10942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10934,
											"end": 10943,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10929,
											"end": 10943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10929,
											"end": 10943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10949,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10955,
											"end": 11122,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 10955,
											"end": 11122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11114,
											"name": "PUSH",
											"source": 10,
											"value": "4F6E6C7920454F412063616E2063616C6C000000000000000000000000000000"
										},
										{
											"begin": 11091,
											"end": 11092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11072,
											"end": 11115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10955,
											"end": 11122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10955,
											"end": 11122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 11355,
											"end": 11357,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 11291,
											"end": 11358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 11291,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11358,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 11456,
											"end": 11459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 11367,
											"end": 11460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 11367,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11485,
											"end": 11487,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11476,
											"end": 11488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11469,
											"end": 11488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11469,
											"end": 11488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11666,
											"end": 11670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11693,
											"end": 11702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 11762,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 11763,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11739,
											"end": 11740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11728,
											"end": 11737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 11764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 11907,
											"end": 11911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 11781,
											"end": 11912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 11781,
											"end": 11912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11773,
											"end": 11912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11500,
											"end": 11919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11500,
											"end": 11919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 12090,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 11925,
											"end": 12090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12065,
											"end": 12082,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F20616374697665207374616B650000000000000000000000000000000000"
										},
										{
											"begin": 12061,
											"end": 12062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12053,
											"end": 12059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12042,
											"end": 12083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 12090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 12090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12462,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12096,
											"end": 12462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12238,
											"end": 12241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12259,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12323,
											"end": 12325,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 12259,
											"end": 12326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12326,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12259,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12335,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12424,
											"end": 12427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12335,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 12335,
											"end": 12428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12335,
											"end": 12428,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12335,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12448,
											"end": 12451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12444,
											"end": 12456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12437,
											"end": 12456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12437,
											"end": 12456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12468,
											"end": 12887,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 12468,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12634,
											"end": 12638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12672,
											"end": 12674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12661,
											"end": 12670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12657,
											"end": 12675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12649,
											"end": 12675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12649,
											"end": 12675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 12730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12715,
											"end": 12719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12731,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12707,
											"end": 12708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12692,
											"end": 12709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 12875,
											"end": 12879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 12749,
											"end": 12880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12749,
											"end": 12880,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 12749,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12468,
											"end": 12887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12468,
											"end": 12887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12468,
											"end": 12887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12468,
											"end": 12887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 13084,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 12893,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12952,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 12970,
											"end": 12971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 12952,
											"end": 12972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 12972,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 12952,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 12972,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 12972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 13004,
											"end": 13005,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 12986,
											"end": 13006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12986,
											"end": 13006,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 12986,
											"end": 13006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13026,
											"end": 13027,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13015,
											"end": 13031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13044,
											"end": 13054,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13041,
											"end": 13077,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13041,
											"end": 13077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 13041,
											"end": 13077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 13057,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13041,
											"end": 13077,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 13041,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 13084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 13084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 13084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 13084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 13084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13090,
											"end": 13252,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 13090,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13230,
											"end": 13244,
											"name": "PUSH",
											"source": 10,
											"value": "5374696C6C206C6F636B65640000000000000000000000000000000000000000"
										},
										{
											"begin": 13226,
											"end": 13227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13090,
											"end": 13252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13090,
											"end": 13252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 13485,
											"end": 13487,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 13421,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 13421,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13414,
											"end": 13488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13414,
											"end": 13488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 13586,
											"end": 13589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 13497,
											"end": 13590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 13497,
											"end": 13590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13615,
											"end": 13617,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13610,
											"end": 13613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13606,
											"end": 13618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13599,
											"end": 13618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13599,
											"end": 13618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13258,
											"end": 13624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13836,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13823,
											"end": 13832,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13819,
											"end": 13837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13883,
											"end": 13892,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13877,
											"end": 13881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13869,
											"end": 13870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13858,
											"end": 13867,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13854,
											"end": 13871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 13894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 13911,
											"end": 14042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 13911,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13903,
											"end": 14042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13903,
											"end": 14042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13630,
											"end": 14049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14204,
											"end": 14208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14244,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14231,
											"end": 14240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14219,
											"end": 14245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14219,
											"end": 14245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 14323,
											"end": 14324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14312,
											"end": 14321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14308,
											"end": 14325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14305,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 14255,
											"end": 14326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 14255,
											"end": 14326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 14404,
											"end": 14406,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14393,
											"end": 14402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14380,
											"end": 14386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 14336,
											"end": 14408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 14486,
											"end": 14488,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14475,
											"end": 14484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14471,
											"end": 14489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14462,
											"end": 14468,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 14418,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14490,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 14418,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14055,
											"end": 14497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14672,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 14503,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14643,
											"end": 14664,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F206665657320746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 14639,
											"end": 14640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14631,
											"end": 14637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 14641,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 15044,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 14678,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14841,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 14905,
											"end": 14907,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 14900,
											"end": 14903,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14841,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 14841,
											"end": 14908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14841,
											"end": 14908,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 14841,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14834,
											"end": 14908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14834,
											"end": 14908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 15006,
											"end": 15009,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 14917,
											"end": 15010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15010,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 14917,
											"end": 15010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15035,
											"end": 15037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15026,
											"end": 15038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15019,
											"end": 15038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15019,
											"end": 15038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 15044,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 15044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 15044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14678,
											"end": 15044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15469,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 15050,
											"end": 15469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15254,
											"end": 15256,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15243,
											"end": 15252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15239,
											"end": 15257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15231,
											"end": 15257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15231,
											"end": 15257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15297,
											"end": 15301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15293,
											"end": 15313,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15289,
											"end": 15290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15278,
											"end": 15287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15274,
											"end": 15291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15267,
											"end": 15314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15331,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 15457,
											"end": 15461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15331,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15331,
											"end": 15462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15331,
											"end": 15462,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 15331,
											"end": 15462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15323,
											"end": 15462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15643,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 15475,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15615,
											"end": 15635,
											"name": "PUSH",
											"source": 10,
											"value": "5061636B616765206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 15611,
											"end": 15612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15599,
											"end": 15613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15592,
											"end": 15636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15791,
											"end": 15794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 15876,
											"end": 15878,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 15871,
											"end": 15874,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 15812,
											"end": 15879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15805,
											"end": 15879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 15977,
											"end": 15980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 15888,
											"end": 15981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16006,
											"end": 16008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16001,
											"end": 16004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15997,
											"end": 16009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16187,
											"end": 16191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16225,
											"end": 16227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16214,
											"end": 16223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16210,
											"end": 16228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16228,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16268,
											"end": 16272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16264,
											"end": 16284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16260,
											"end": 16261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16245,
											"end": 16262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 16428,
											"end": 16432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 16302,
											"end": 16433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16294,
											"end": 16433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16294,
											"end": 16433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16610,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 16446,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16586,
											"end": 16602,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E7420746F6F206C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 16582,
											"end": 16583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16574,
											"end": 16580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16570,
											"end": 16584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16563,
											"end": 16603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16446,
											"end": 16610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16982,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 16616,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16758,
											"end": 16761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16779,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 16843,
											"end": 16845,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 16838,
											"end": 16841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 16779,
											"end": 16846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16779,
											"end": 16846,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 16779,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16772,
											"end": 16846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16772,
											"end": 16846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 16944,
											"end": 16947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 16855,
											"end": 16948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16948,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 16855,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16973,
											"end": 16975,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16968,
											"end": 16971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 16976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 16976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 16976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16616,
											"end": 16982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17407,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 16988,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17154,
											"end": 17158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17192,
											"end": 17194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17181,
											"end": 17190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17177,
											"end": 17195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17169,
											"end": 17195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17169,
											"end": 17195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17241,
											"end": 17250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17235,
											"end": 17239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17216,
											"end": 17225,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17212,
											"end": 17229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17205,
											"end": 17252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17269,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17395,
											"end": 17399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17269,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 17269,
											"end": 17400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17269,
											"end": 17400,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17269,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17534,
											"end": 17538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17572,
											"end": 17574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17561,
											"end": 17570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17557,
											"end": 17575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 17653,
											"end": 17654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17642,
											"end": 17651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17638,
											"end": 17655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17629,
											"end": 17635,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 17585,
											"end": 17656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 17585,
											"end": 17656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 17734,
											"end": 17736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17723,
											"end": 17732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17719,
											"end": 17737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17710,
											"end": 17716,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 17666,
											"end": 17738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 17666,
											"end": 17738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17413,
											"end": 17745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17866,
											"end": 17870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17904,
											"end": 17906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17902,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17889,
											"end": 17907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17881,
											"end": 17907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17881,
											"end": 17907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17917,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 17985,
											"end": 17986,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17974,
											"end": 17983,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17970,
											"end": 17987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 17967,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17917,
											"end": 17988,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 17917,
											"end": 17988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17917,
											"end": 17988,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 17917,
											"end": 17988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17998,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 18060,
											"end": 18062,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18049,
											"end": 18058,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18036,
											"end": 18042,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17998,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 17998,
											"end": 18064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17998,
											"end": 18064,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 17998,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 18071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18077,
											"end": 18251,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 18077,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18217,
											"end": 18243,
											"name": "PUSH",
											"source": 10,
											"value": "5A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000"
										},
										{
											"begin": 18213,
											"end": 18214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18205,
											"end": 18211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18201,
											"end": 18215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18194,
											"end": 18244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18077,
											"end": 18251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18077,
											"end": 18251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18257,
											"end": 18623,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 18257,
											"end": 18623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18420,
											"end": 18487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 18484,
											"end": 18486,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 18479,
											"end": 18482,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18420,
											"end": 18487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 18420,
											"end": 18487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18420,
											"end": 18487,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 18420,
											"end": 18487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18413,
											"end": 18487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18413,
											"end": 18487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18496,
											"end": 18589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 18585,
											"end": 18588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18496,
											"end": 18589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 18496,
											"end": 18589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18496,
											"end": 18589,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 18496,
											"end": 18589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18614,
											"end": 18616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18609,
											"end": 18612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18605,
											"end": 18617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18598,
											"end": 18617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18598,
											"end": 18617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18257,
											"end": 18623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18257,
											"end": 18623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18257,
											"end": 18623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18257,
											"end": 18623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18629,
											"end": 19048,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 18629,
											"end": 19048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18795,
											"end": 18799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18833,
											"end": 18835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18822,
											"end": 18831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18818,
											"end": 18836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18810,
											"end": 18836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18882,
											"end": 18891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18876,
											"end": 18880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18872,
											"end": 18892,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18868,
											"end": 18869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18857,
											"end": 18866,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18853,
											"end": 18870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18846,
											"end": 18893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 19041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 19036,
											"end": 19040,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 19041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 18910,
											"end": 19041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18910,
											"end": 19041,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 18910,
											"end": 19041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18629,
											"end": 19048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18629,
											"end": 19048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18629,
											"end": 19048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18629,
											"end": 19048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19222,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 19054,
											"end": 19222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19214,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2072657761726420746F20636C61696D0000000000000000000000000000"
										},
										{
											"begin": 19190,
											"end": 19191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19182,
											"end": 19188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19178,
											"end": 19192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19171,
											"end": 19215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19594,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 19228,
											"end": 19594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19370,
											"end": 19373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19391,
											"end": 19458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 19455,
											"end": 19457,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 19450,
											"end": 19453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19391,
											"end": 19458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 19391,
											"end": 19458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19391,
											"end": 19458,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 19391,
											"end": 19458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19384,
											"end": 19458,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19384,
											"end": 19458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19467,
											"end": 19560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 19556,
											"end": 19559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19467,
											"end": 19560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 19467,
											"end": 19560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19467,
											"end": 19560,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 19467,
											"end": 19560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19585,
											"end": 19587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19580,
											"end": 19583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19576,
											"end": 19588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19569,
											"end": 19588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19569,
											"end": 19588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 20019,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 19600,
											"end": 20019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19766,
											"end": 19770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19804,
											"end": 19806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19793,
											"end": 19802,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19789,
											"end": 19807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19781,
											"end": 19807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19781,
											"end": 19807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19853,
											"end": 19862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19847,
											"end": 19851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19843,
											"end": 19863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19839,
											"end": 19840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19828,
											"end": 19837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19824,
											"end": 19841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19817,
											"end": 19864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19881,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 20007,
											"end": 20011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19881,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 19881,
											"end": 20012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19881,
											"end": 20012,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 19881,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19873,
											"end": 20012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19873,
											"end": 20012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 20019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 20019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 20019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 20019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20252,
											"end": 20256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20290,
											"end": 20293,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 20279,
											"end": 20288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20267,
											"end": 20294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20267,
											"end": 20294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 20372,
											"end": 20373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20361,
											"end": 20370,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20357,
											"end": 20374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20348,
											"end": 20354,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20304,
											"end": 20375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 20304,
											"end": 20375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20385,
											"end": 20457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 20453,
											"end": 20455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20442,
											"end": 20451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20438,
											"end": 20456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20429,
											"end": 20435,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 20385,
											"end": 20457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 20385,
											"end": 20457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20385,
											"end": 20457,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 20385,
											"end": 20457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20467,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 20535,
											"end": 20537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20524,
											"end": 20533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20520,
											"end": 20538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20511,
											"end": 20517,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20467,
											"end": 20539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20467,
											"end": 20539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20467,
											"end": 20539,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 20467,
											"end": 20539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 20617,
											"end": 20619,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20606,
											"end": 20615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20602,
											"end": 20620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20593,
											"end": 20599,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20549,
											"end": 20621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20621,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 20549,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20631,
											"end": 20704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 20699,
											"end": 20702,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 20688,
											"end": 20697,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20684,
											"end": 20703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20675,
											"end": 20681,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20631,
											"end": 20704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20631,
											"end": 20704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20631,
											"end": 20704,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 20631,
											"end": 20704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20714,
											"end": 20781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 20776,
											"end": 20779,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 20765,
											"end": 20774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20761,
											"end": 20780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20752,
											"end": 20758,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20714,
											"end": 20781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 20714,
											"end": 20781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20714,
											"end": 20781,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 20714,
											"end": 20781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20025,
											"end": 20788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20794,
											"end": 20975,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 20794,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20934,
											"end": 20967,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20930,
											"end": 20931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20922,
											"end": 20928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20911,
											"end": 20968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20794,
											"end": 20975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20794,
											"end": 20975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 21208,
											"end": 21210,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 21203,
											"end": 21206,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 21144,
											"end": 21211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21137,
											"end": 21211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21137,
											"end": 21211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 21309,
											"end": 21312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 21220,
											"end": 21313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21338,
											"end": 21340,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21329,
											"end": 21341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21557,
											"end": 21559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21546,
											"end": 21555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21542,
											"end": 21560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21534,
											"end": 21560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21534,
											"end": 21560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21606,
											"end": 21615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21596,
											"end": 21616,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21592,
											"end": 21593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21581,
											"end": 21590,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21577,
											"end": 21594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21570,
											"end": 21617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 21760,
											"end": 21764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 21634,
											"end": 21765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21899,
											"end": 21903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21937,
											"end": 21939,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21926,
											"end": 21935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21914,
											"end": 21940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21914,
											"end": 21940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21950,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 22018,
											"end": 22019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22007,
											"end": 22016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22003,
											"end": 22020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21994,
											"end": 22000,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21950,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 21950,
											"end": 22021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21950,
											"end": 22021,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 21950,
											"end": 22021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22031,
											"end": 22103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 22099,
											"end": 22101,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22088,
											"end": 22097,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22084,
											"end": 22102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22075,
											"end": 22081,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22031,
											"end": 22103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 22031,
											"end": 22103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22031,
											"end": 22103,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 22031,
											"end": 22103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 22110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22265,
											"end": 22269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22305,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 22292,
											"end": 22301,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22288,
											"end": 22306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22280,
											"end": 22306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22280,
											"end": 22306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22316,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 22384,
											"end": 22385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22373,
											"end": 22382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22369,
											"end": 22386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22360,
											"end": 22366,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22316,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 22316,
											"end": 22387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22316,
											"end": 22387,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 22316,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22397,
											"end": 22469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 22465,
											"end": 22467,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22454,
											"end": 22463,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22450,
											"end": 22468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22441,
											"end": 22447,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22397,
											"end": 22469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 22397,
											"end": 22469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22397,
											"end": 22469,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 22397,
											"end": 22469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22479,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 22547,
											"end": 22549,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22536,
											"end": 22545,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22532,
											"end": 22550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22523,
											"end": 22529,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22479,
											"end": 22551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 22479,
											"end": 22551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22479,
											"end": 22551,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 22479,
											"end": 22551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22116,
											"end": 22558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Farming.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addFarmPackage(address,uint256,uint256,uint256)": "eb16975d",
							"autoFarmingFee()": "d96acc72",
							"autoFarmingPool()": "cb8f63f6",
							"cafiToken()": "58a0bde3",
							"calculateReward(address,uint256)": "1852e8d9",
							"claimReward(uint256)": "ae169a50",
							"farmPackages(uint256)": "407bb09d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAPY(uint256,uint256)": "5acd2e4c",
							"setAutoFarmingFee(uint256)": "181d06a9",
							"setTreasuryWallet(address)": "a8602fea",
							"stake(uint256,uint256)": "7b0472f0",
							"toggleAutoFarming(uint256)": "a6fdc26c",
							"toggleFarmPackage(uint256,bool)": "0a34cc12",
							"transferOwnership(address)": "f2fde38b",
							"treasuryWallet()": "4626402b",
							"unstake(uint256)": "2e17de78",
							"userStakes(address,uint256)": "b5d5b5fa",
							"withdrawFees()": "476343ee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cafiToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AutoFarmingToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"FeeReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAPY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"PackageAPYUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"PackageAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStake\",\"type\":\"uint256\"}],\"name\":\"addFarmPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFarmingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFarmingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cafiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"farmPackages\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStake\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"setAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setAutoFarmingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"toggleAutoFarming\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"toggleFarmPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAutoFarming\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for farming rewards based on staking packages with adjustable APY.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CAFIFarming\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFarmPackage(address,uint256,uint256,uint256)\":{\"notice\":\"Tambahkan paket farming baru\"},\"calculateReward(address,uint256)\":{\"notice\":\"Hitung reward\"},\"claimReward(uint256)\":{\"notice\":\"Klaim reward dari farming\"},\"setAPY(uint256,uint256)\":{\"notice\":\"Atur ulang APY untuk paket tertentu\"},\"setAutoFarmingFee(uint256)\":{\"notice\":\"Set fee untuk auto farming\"},\"setTreasuryWallet(address)\":{\"notice\":\"Update wallet penerima fee\"},\"stake(uint256,uint256)\":{\"notice\":\"Stake token ke farming berdasarkan package ID\"},\"toggleAutoFarming(uint256)\":{\"notice\":\"Toggle mode auto farming\"},\"toggleFarmPackage(uint256,bool)\":{\"notice\":\"Aktif/nonaktifkan paket farming\"},\"unstake(uint256)\":{\"notice\":\"Withdraw stake + reward\"},\"withdrawFees()\":{\"notice\":\"Owner dapat menarik biaya auto farming\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farming.sol\":\"CAFIFarming\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Farming.sol\":{\"keccak256\":\"0xa47e28aea276752ac53210d4dce4167d5ec194683d4407f2964fd1c828b27913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e64233381cc18c1f89ad3c8cb39cb35b0c07becc492a342b36959296123274\",\"dweb:/ipfs/QmYpbz5q1zTxUaPiAjuhgngTwdNGYKV2v3SHkfpw3XcwKc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Farming.sol:CAFIFarming",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "Farming.sol:CAFIFarming",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 930,
								"contract": "Farming.sol:CAFIFarming",
								"label": "farmPackages",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(FarmPackage)912_storage)dyn_storage"
							},
							{
								"astId": 936,
								"contract": "Farming.sol:CAFIFarming",
								"label": "userStakes",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_array(t_struct(UserStake)923_storage)dyn_storage)"
							},
							{
								"astId": 938,
								"contract": "Farming.sol:CAFIFarming",
								"label": "autoFarmingPool",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 941,
								"contract": "Farming.sol:CAFIFarming",
								"label": "autoFarmingFee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 943,
								"contract": "Farming.sol:CAFIFarming",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(FarmPackage)912_storage)dyn_storage": {
								"base": "t_struct(FarmPackage)912_storage",
								"encoding": "dynamic_array",
								"label": "struct CAFIFarming.FarmPackage[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(UserStake)923_storage)dyn_storage": {
								"base": "t_struct(UserStake)923_storage",
								"encoding": "dynamic_array",
								"label": "struct CAFIFarming.UserStake[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(UserStake)923_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CAFIFarming.UserStake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(UserStake)923_storage)dyn_storage"
							},
							"t_struct(FarmPackage)912_storage": {
								"encoding": "inplace",
								"label": "struct CAFIFarming.FarmPackage",
								"members": [
									{
										"astId": 903,
										"contract": "Farming.sol:CAFIFarming",
										"label": "stakeToken",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 905,
										"contract": "Farming.sol:CAFIFarming",
										"label": "duration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 907,
										"contract": "Farming.sol:CAFIFarming",
										"label": "apy",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 909,
										"contract": "Farming.sol:CAFIFarming",
										"label": "minStake",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 911,
										"contract": "Farming.sol:CAFIFarming",
										"label": "isActive",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserStake)923_storage": {
								"encoding": "inplace",
								"label": "struct CAFIFarming.UserStake",
								"members": [
									{
										"astId": 914,
										"contract": "Farming.sol:CAFIFarming",
										"label": "packageId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 916,
										"contract": "Farming.sol:CAFIFarming",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 918,
										"contract": "Farming.sol:CAFIFarming",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 920,
										"contract": "Farming.sol:CAFIFarming",
										"label": "lastClaimTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 922,
										"contract": "Farming.sol:CAFIFarming",
										"label": "isAutoFarming",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addFarmPackage(address,uint256,uint256,uint256)": {
								"notice": "Tambahkan paket farming baru"
							},
							"calculateReward(address,uint256)": {
								"notice": "Hitung reward"
							},
							"claimReward(uint256)": {
								"notice": "Klaim reward dari farming"
							},
							"setAPY(uint256,uint256)": {
								"notice": "Atur ulang APY untuk paket tertentu"
							},
							"setAutoFarmingFee(uint256)": {
								"notice": "Set fee untuk auto farming"
							},
							"setTreasuryWallet(address)": {
								"notice": "Update wallet penerima fee"
							},
							"stake(uint256,uint256)": {
								"notice": "Stake token ke farming berdasarkan package ID"
							},
							"toggleAutoFarming(uint256)": {
								"notice": "Toggle mode auto farming"
							},
							"toggleFarmPackage(uint256,bool)": {
								"notice": "Aktif/nonaktifkan paket farming"
							},
							"unstake(uint256)": {
								"notice": "Withdraw stake + reward"
							},
							"withdrawFees()": {
								"notice": "Owner dapat menarik biaya auto farming"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 886,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"Farming.sol": {
				"ast": {
					"absolutePath": "Farming.sol",
					"exportedSymbols": {
						"CAFIFarming": [
							1602
						],
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 381,
							"src": "58:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 845,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 148,
							"src": "181:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 303,
							"src": "234:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 894,
										"name": "Ownable",
										"nameLocations": [
											"436:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "436:7:9"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "436:7:9"
								},
								{
									"baseName": {
										"id": 896,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"445:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "445:15:9"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "445:15:9"
								}
							],
							"canonicalName": "CAFIFarming",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "298:113:9",
								"text": " @title CAFIFarming\n @dev Contract for farming rewards based on staking packages with adjustable APY."
							},
							"fullyImplemented": true,
							"id": 1602,
							"linearizedBaseContracts": [
								1602,
								302,
								147,
								874
							],
							"name": "CAFIFarming",
							"nameLocation": "421:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 898,
										"name": "SafeERC20",
										"nameLocations": [
											"473:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "473:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "467:27:9",
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"487:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "487:6:9"
										},
										"referencedDeclaration": 380,
										"src": "487:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "CAFIFarming.FarmPackage",
									"id": 912,
									"members": [
										{
											"constant": false,
											"id": 903,
											"mutability": "mutable",
											"name": "stakeToken",
											"nameLocation": "571:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 912,
											"src": "563:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 902,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "563:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 905,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "640:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 912,
											"src": "632:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "632:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 907,
											"mutability": "mutable",
											"name": "apy",
											"nameLocation": "704:3:9",
											"nodeType": "VariableDeclaration",
											"scope": 912,
											"src": "696:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 906,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 909,
											"mutability": "mutable",
											"name": "minStake",
											"nameLocation": "781:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 912,
											"src": "773:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 908,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "773:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 911,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "835:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 912,
											"src": "830:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 910,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "830:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FarmPackage",
									"nameLocation": "541:11:9",
									"nodeType": "StructDefinition",
									"scope": 1602,
									"src": "534:316:9",
									"visibility": "public"
								},
								{
									"canonicalName": "CAFIFarming.UserStake",
									"id": 923,
									"members": [
										{
											"constant": false,
											"id": 914,
											"mutability": "mutable",
											"name": "packageId",
											"nameLocation": "922:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "914:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 913,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "914:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 916,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "949:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "941:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 915,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "941:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 918,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "973:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "965:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 917,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "965:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "lastClaimTime",
											"nameLocation": "1000:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "992:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 919,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "992:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 922,
											"mutability": "mutable",
											"name": "isAutoFarming",
											"nameLocation": "1028:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "1023:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 921,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1023:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStake",
									"nameLocation": "894:9:9",
									"nodeType": "StructDefinition",
									"scope": 1602,
									"src": "887:161:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58a0bde3",
									"id": 926,
									"mutability": "immutable",
									"name": "cafiToken",
									"nameLocation": "1101:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "1077:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 925,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 924,
											"name": "IERC20",
											"nameLocations": [
												"1077:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1077:6:9"
										},
										"referencedDeclaration": 380,
										"src": "1077:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "407bb09d",
									"id": 930,
									"mutability": "mutable",
									"name": "farmPackages",
									"nameLocation": "1159:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "1138:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
										"typeString": "struct CAFIFarming.FarmPackage[]"
									},
									"typeName": {
										"baseType": {
											"id": 928,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 927,
												"name": "FarmPackage",
												"nameLocations": [
													"1138:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 912,
												"src": "1138:11:9"
											},
											"referencedDeclaration": 912,
											"src": "1138:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
												"typeString": "struct CAFIFarming.FarmPackage"
											}
										},
										"id": 929,
										"nodeType": "ArrayTypeName",
										"src": "1138:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage_ptr",
											"typeString": "struct CAFIFarming.FarmPackage[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5d5b5fa",
									"id": 936,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "1244:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "1205:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct CAFIFarming.UserStake[])"
									},
									"typeName": {
										"id": 935,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 931,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1213:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1205:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct CAFIFarming.UserStake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 933,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 932,
													"name": "UserStake",
													"nameLocations": [
														"1224:9:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 923,
													"src": "1224:9:9"
												},
												"referencedDeclaration": 923,
												"src": "1224:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
													"typeString": "struct CAFIFarming.UserStake"
												}
											},
											"id": 934,
											"nodeType": "ArrayTypeName",
											"src": "1224:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_ptr",
												"typeString": "struct CAFIFarming.UserStake[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb8f63f6",
									"id": 938,
									"mutability": "mutable",
									"name": "autoFarmingPool",
									"nameLocation": "1301:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "1286:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1286:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d96acc72",
									"id": 941,
									"mutability": "mutable",
									"name": "autoFarmingFee",
									"nameLocation": "1337:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "1322:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 939,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1322:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 940,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1354:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 943,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "1385:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1602,
									"src": "1370:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 942,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1370:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 951,
									"name": "Staked",
									"nameLocation": "1426:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1449:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "1433:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "1463:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "1455:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1482:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "1474:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:57:9"
									},
									"src": "1420:70:9"
								},
								{
									"anonymous": false,
									"eventSelector": "204fccf0d92ed8d48f204adb39b2e81e92bad0dedb93f5716ca9478cfb57de00",
									"id": 961,
									"name": "Unstaked",
									"nameLocation": "1501:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1526:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1510:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1540:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1532:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1560:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1552:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1576:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1568:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:74:9"
									},
									"src": "1495:89:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743",
									"id": 969,
									"name": "RewardClaimed",
									"nameLocation": "1595:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1625:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1609:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1639:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1631:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1659:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1651:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:58:9"
									},
									"src": "1589:78:9"
								},
								{
									"anonymous": false,
									"eventSelector": "31a69d42a6f751ecfc0dbb2406339aec90a8398da52cec9760a134a10d430c02",
									"id": 977,
									"name": "AutoFarmingToggled",
									"nameLocation": "1678:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1713:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1697:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1727:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1719:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1744:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1739:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:55:9"
									},
									"src": "1672:80:9"
								},
								{
									"anonymous": false,
									"eventSelector": "449d6803fbc50a1b24602b1756ef38e10c1fb9c7f3d93da3e692636702585548",
									"id": 991,
									"name": "PackageAdded",
									"nameLocation": "1763:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "1784:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1776:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeToken",
												"nameLocation": "1803:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1795:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1823:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1815:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1841:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1833:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": false,
												"mutability": "mutable",
												"name": "minStake",
												"nameLocation": "1854:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1846:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "1869:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1864:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1775:103:9"
									},
									"src": "1757:122:9"
								},
								{
									"anonymous": false,
									"eventSelector": "447f7585030d3ef3a73db720f6082f657781a4a8657461796b868687caaea1e2",
									"id": 999,
									"name": "PackageAPYUpdated",
									"nameLocation": "1890:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "1916:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1908:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldAPY",
												"nameLocation": "1935:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1927:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "1951:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1943:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:51:9"
									},
									"src": "1884:75:9"
								},
								{
									"anonymous": false,
									"eventSelector": "27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee",
									"id": 1003,
									"name": "FeeReceiverUpdated",
									"nameLocation": "1970:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "2005:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1989:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:29:9"
									},
									"src": "1964:54:9"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "2175:230:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "_cafiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "2193:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2215:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2207:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1019,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2207:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2207:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2193:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204341464920746f6b656e",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27",
																"typeString": "literal_string \"Invalid CAFI token\""
															},
															"value": "Invalid CAFI token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48c0a553e5cd2e6221b99c5756c0f7629229b148e76d09d41dfbdcbbfd763a27",
																"typeString": "literal_string \"Invalid CAFI token\""
															}
														],
														"id": 1017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2185:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2185:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "_treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "2258:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2285:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2277:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2277:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2277:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2258:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792077616c6c6574",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																"typeString": "literal_string \"Invalid treasury wallet\""
															},
															"value": "Invalid treasury wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																"typeString": "literal_string \"Invalid treasury wallet\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2250:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2250:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2250:65:9"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "cafiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2326:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1039,
																"name": "_cafiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "2345:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1038,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2338:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2338:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2326:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "2326:30:9"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "2366:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1044,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "2383:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2366:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2366:32:9"
											}
										]
									},
									"id": 1048,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1012,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1009,
													"src": "2142:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1013,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1011,
												"name": "Ownable",
												"nameLocations": [
													"2134:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2134:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:22:9"
										},
										{
											"arguments": [],
											"id": 1015,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1014,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"2157:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2157:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2157:17:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_cafiToken",
												"nameLocation": "2053:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2045:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "2081:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2073:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "2114:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "2106:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:98:9"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2175:0:9"
									},
									"scope": 1602,
									"src": "2024:381:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "2522:81:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1052,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "2540:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2543:6:9",
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "2540:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1054,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2553:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2557:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2553:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2540:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920454f412063616e2063616c6c",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2565:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
																"typeString": "literal_string \"Only EOA can call\""
															},
															"value": "Only EOA can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
																"typeString": "literal_string \"Only EOA can call\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2532:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2532:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "2532:53:9"
											},
											{
												"id": 1060,
												"nodeType": "PlaceholderStatement",
												"src": "2595:1:9"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "2411:87:9",
										"text": " @notice Proteksi tambahan: hanya EOA yang boleh memanggil fungsi ini"
									},
									"id": 1062,
									"name": "onlyEOA",
									"nameLocation": "2512:7:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:2:9"
									},
									"src": "2503:100:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "2766:572:9",
										"statements": [
											{
												"assignments": [
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "2795:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "2776:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1075,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1074,
																"name": "FarmPackage",
																"nameLocations": [
																	"2776:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 912,
																"src": "2776:11:9"
															},
															"referencedDeclaration": 912,
															"src": "2776:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": {
													"baseExpression": {
														"id": 1077,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "2805:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1079,
													"indexExpression": {
														"id": 1078,
														"name": "packageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "2818:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2805:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$912_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2776:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1082,
																"name": "package",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "2846:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																	"typeString": "struct CAFIFarming.FarmPackage memory"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2854:8:9",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 911,
															"src": "2846:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061636b616765206e6f7420616374697665",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2864:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632",
																"typeString": "literal_string \"Package not active\""
															},
															"value": "Package not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4629dedafa5c12db4e5718572692100e5f59685fb2d960c719b6caa525504632",
																"typeString": "literal_string \"Package not active\""
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2838:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2838:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "2838:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "2903:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1089,
																	"name": "package",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "2913:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																		"typeString": "struct CAFIFarming.FarmPackage memory"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2921:8:9",
																"memberName": "minStake",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 909,
																"src": "2913:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2903:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7420746f6f206c6f77",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2931:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
																"typeString": "literal_string \"Amount too low\""
															},
															"value": "Amount too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eee5534c5180a89659423b418a18ff330868aefdadcdf7f0c48ca052d4e06110",
																"typeString": "literal_string \"Amount too low\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2895:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2895:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2895:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3003:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3007:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3003:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1104,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3023:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAFIFarming_$1602",
																		"typeString": "contract CAFIFarming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAFIFarming_$1602",
																		"typeString": "contract CAFIFarming"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3015:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3015:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3015:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3030:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1096,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "2966:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage memory"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2974:10:9",
																	"memberName": "stakeToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 903,
																	"src": "2966:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1095,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "2959:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2959:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2986:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "2959:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2959:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2959:78:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1115,
																	"name": "packageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "3111:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1116,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "3142:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1117,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3173:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3179:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3173:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1119,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3217:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3223:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3217:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3261:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1114,
																"name": "UserStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "3076:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_UserStake_$923_storage_ptr_$",
																	"typeString": "type(struct CAFIFarming.UserStake storage pointer)"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3100:9:9",
																"3134:6:9",
																"3162:9:9",
																"3202:13:9",
																"3246:13:9"
															],
															"names": [
																"packageId",
																"amount",
																"startTime",
																"lastClaimTime",
																"isAutoFarming"
															],
															"nodeType": "FunctionCall",
															"src": "3076:201:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1109,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "3048:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
																}
															},
															"id": 1112,
															"indexExpression": {
																"expression": {
																	"id": 1110,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3059:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3063:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3059:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3048:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage",
																"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3071:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3048:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_ptr_$_t_struct$_UserStake_$923_storage_$returns$__$attached_to$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CAFIFarming.UserStake storage ref[] storage pointer,struct CAFIFarming.UserStake storage ref)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3048:230:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "3048:230:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1126,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3301:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3305:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3301:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "packageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "3313:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1129,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3324:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "3294:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "EmitStatement",
												"src": "3289:42:9"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "2609:72:9",
										"text": " @notice Stake token ke farming berdasarkan package ID"
									},
									"functionSelector": "7b0472f0",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1070,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1069,
												"name": "nonReentrant",
												"nameLocations": [
													"2745:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2745:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2745:12:9"
										},
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyEOA",
												"nameLocations": [
													"2758:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "2758:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2758:7:9"
										}
									],
									"name": "stake",
									"nameLocation": "2695:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "2709:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2701:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2728:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2720:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:35:9"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2766:0:9"
									},
									"scope": 1602,
									"src": "2686:652:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "3472:533:9",
										"statements": [
											{
												"assignments": [
													1145
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "3500:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1209,
														"src": "3482:27:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1144,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1143,
																"name": "UserStake",
																"nameLocations": [
																	"3482:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "3482:9:9"
															},
															"referencedDeclaration": 923,
															"src": "3482:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1146,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "3512:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1149,
														"indexExpression": {
															"expression": {
																"id": 1147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3523:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3527:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3523:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3512:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1151,
													"indexExpression": {
														"id": 1150,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "3535:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3512:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$923_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3482:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1154,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "3564:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																		"typeString": "struct CAFIFarming.UserStake storage pointer"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3574:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 916,
																"src": "3564:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3583:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3564:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665207374616b65",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3586:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															},
															"value": "No active stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3556:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "3556:48:9"
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3623:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1209,
														"src": "3615:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3615:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3648:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3652:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3648:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3660:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1163,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "3632:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3632:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "3689:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3698:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3689:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3701:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3681:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3681:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "3681:41:9"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1176,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "3733:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake storage pointer"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3743:13:9",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "3733:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1179,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3759:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3765:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3759:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3733:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "3733:41:9"
											},
											{
												"condition": {
													"expression": {
														"id": 1183,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "3789:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake storage pointer"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3799:13:9",
													"memberName": "isAutoFarming",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 922,
													"src": "3789:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "3871:67:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1195,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3908:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3912:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3908:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1197,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "3920:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1192,
																		"name": "cafiToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "3885:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3895:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "3885:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3885:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1199,
															"nodeType": "ExpressionStatement",
															"src": "3885:42:9"
														}
													]
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "3785:153:9",
												"trueBody": {
													"id": 1191,
													"nodeType": "Block",
													"src": "3814:51:9",
													"statements": [
														{
															"expression": {
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1185,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "3828:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																			"typeString": "struct CAFIFarming.UserStake storage pointer"
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3838:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 916,
																	"src": "3828:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1188,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "3848:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3828:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "3828:26:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3967:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3971:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3967:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3979:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1206,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3991:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3953:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3953:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "EmitStatement",
												"src": "3948:50:9"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "3344:52:9",
										"text": " @notice Klaim reward dari farming"
									},
									"functionSelector": "ae169a50",
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1138,
												"name": "nonReentrant",
												"nameLocations": [
													"3451:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3451:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3451:12:9"
										},
										{
											"id": 1141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1140,
												"name": "onlyEOA",
												"nameLocations": [
													"3464:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "3464:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3464:7:9"
										}
									],
									"name": "claimReward",
									"nameLocation": "3410:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3430:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3422:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3421:20:9"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:9"
									},
									"scope": 1602,
									"src": "3401:604:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "4133:790:9",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"mutability": "mutable",
														"name": "currentStake",
														"nameLocation": "4161:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "4143:30:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1221,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1220,
																"name": "UserStake",
																"nameLocations": [
																	"4143:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "4143:9:9"
															},
															"referencedDeclaration": 923,
															"src": "4143:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1223,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4176:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1226,
														"indexExpression": {
															"expression": {
																"id": 1224,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4187:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4191:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4187:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4176:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1228,
													"indexExpression": {
														"id": 1227,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "4199:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4176:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$923_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4143:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1231,
																	"name": "currentStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "4228:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																		"typeString": "struct CAFIFarming.UserStake storage pointer"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4241:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 916,
																"src": "4228:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4228:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665207374616b65",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4253:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															},
															"value": "No active stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4220:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4220:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "4220:51:9"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "4301:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "4282:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1239,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1238,
																"name": "FarmPackage",
																"nameLocations": [
																	"4282:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 912,
																"src": "4282:11:9"
															},
															"referencedDeclaration": 912,
															"src": "4282:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"baseExpression": {
														"id": 1241,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "4311:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1244,
													"indexExpression": {
														"expression": {
															"id": 1242,
															"name": "currentStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "4324:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake storage pointer"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4337:9:9",
														"memberName": "packageId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 914,
														"src": "4324:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4311:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$912_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4282:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1247,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4365:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4371:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4365:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1249,
																		"name": "currentStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "4384:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																			"typeString": "struct CAFIFarming.UserStake storage pointer"
																		}
																	},
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4397:9:9",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 918,
																	"src": "4384:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1251,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "4409:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage memory"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4417:8:9",
																	"memberName": "duration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 905,
																	"src": "4409:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4384:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4365:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374696c6c206c6f636b6564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4427:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															},
															"value": "Still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4357:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4357:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "4357:85:9"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4461:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "4453:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4453:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1265,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4486:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4490:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "4498:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "4470:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4470:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4453:56:9"
											},
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "4527:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "4519:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4519:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"expression": {
														"id": 1268,
														"name": "currentStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "4541:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake storage pointer"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4554:6:9",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 916,
													"src": "4541:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4519:41:9"
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4571:41:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1271,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "4578:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
																}
															},
															"id": 1274,
															"indexExpression": {
																"expression": {
																	"id": 1272,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4589:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4593:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4589:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4578:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage",
																"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
															}
														},
														"id": 1276,
														"indexExpression": {
															"id": 1275,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "4601:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4578:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "4571:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1284,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4703:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4707:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4703:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4715:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1280,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "4670:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage memory"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4678:10:9",
																	"memberName": "stakeToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 903,
																	"src": "4670:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1279,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "4663:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4663:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4690:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4663:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4663:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "4663:64:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "4769:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4778:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4769:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "4765:83:9",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "4781:67:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1295,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4818:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4822:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4818:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "4830:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1292,
																		"name": "cafiToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "4795:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4805:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "4795:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4795:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "ExpressionStatement",
															"src": "4795:42:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4872:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4876:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4872:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "4884:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1306,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4896:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1307,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "4909:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1302,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4863:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4863:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "EmitStatement",
												"src": "4858:58:9"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "4011:50:9",
										"text": " @notice Withdraw stake + reward"
									},
									"functionSelector": "2e17de78",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1215,
												"name": "nonReentrant",
												"nameLocations": [
													"4112:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4112:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4112:12:9"
										},
										{
											"id": 1218,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1217,
												"name": "onlyEOA",
												"nameLocations": [
													"4125:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "4125:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4125:7:9"
										}
									],
									"name": "unstake",
									"nameLocation": "4075:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "4091:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "4083:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:20:9"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4133:0:9"
									},
									"scope": 1602,
									"src": "4066:857:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "5062:282:9",
										"statements": [
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "stakeData",
														"nameLocation": "5090:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "5072:27:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1322,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1321,
																"name": "UserStake",
																"nameLocations": [
																	"5072:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "5072:9:9"
															},
															"referencedDeclaration": 923,
															"src": "5072:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1324,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "5102:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1327,
														"indexExpression": {
															"expression": {
																"id": 1325,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5113:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5117:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5113:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5102:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1329,
													"indexExpression": {
														"id": 1328,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "5125:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5102:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$923_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5072:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1332,
																	"name": "stakeData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "5154:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																		"typeString": "struct CAFIFarming.UserStake storage pointer"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5164:6:9",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 916,
																"src": "5154:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5173:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5154:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665207374616b65",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5176:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															},
															"value": "No active stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26bf75596727d198a86a0519d408b9948600fd3dfea0f27516fee02ace2e3a8d",
																"typeString": "literal_string \"No active stake\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5146:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5146:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "5146:48:9"
											},
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1339,
															"name": "stakeData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "5205:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake storage pointer"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5215:13:9",
														"memberName": "isAutoFarming",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "5205:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5231:24:9",
														"subExpression": {
															"expression": {
																"id": 1342,
																"name": "stakeData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "5232:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																	"typeString": "struct CAFIFarming.UserStake storage pointer"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5242:13:9",
															"memberName": "isAutoFarming",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "5232:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5205:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "5205:50:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5289:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5293:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5289:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5301:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1351,
																"name": "stakeData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "5313:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																	"typeString": "struct CAFIFarming.UserStake storage pointer"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5323:13:9",
															"memberName": "isAutoFarming",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "5313:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1347,
														"name": "AutoFarmingToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "5270:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5270:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "EmitStatement",
												"src": "5265:72:9"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "4929:51:9",
										"text": " @notice Toggle mode auto farming"
									},
									"functionSelector": "a6fdc26c",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "nonReentrant",
												"nameLocations": [
													"5041:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5041:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5041:12:9"
										},
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyEOA",
												"nameLocations": [
													"5054:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "5054:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5054:7:9"
										}
									],
									"name": "toggleAutoFarming",
									"nameLocation": "4994:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "5020:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5012:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:20:9"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5062:0:9"
									},
									"scope": 1602,
									"src": "4985:359:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "5484:394:9",
										"statements": [
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "5511:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "5494:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1367,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1366,
																"name": "UserStake",
																"nameLocations": [
																	"5494:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "5494:9:9"
															},
															"referencedDeclaration": 923,
															"src": "5494:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1369,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "5523:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$923_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1371,
														"indexExpression": {
															"id": 1370,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "5534:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5523:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$923_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1373,
													"indexExpression": {
														"id": 1372,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "5540:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5523:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$923_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5494:57:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1375,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "5565:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5575:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 916,
														"src": "5565:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5585:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5565:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "IfStatement",
												"src": "5561:35:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5595:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1365,
													"id": 1380,
													"nodeType": "Return",
													"src": "5588:8:9"
												}
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "5626:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "5607:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1382,
																"name": "FarmPackage",
																"nameLocations": [
																	"5607:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 912,
																"src": "5607:11:9"
															},
															"referencedDeclaration": 912,
															"src": "5607:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"baseExpression": {
														"id": 1385,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "5636:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1388,
													"indexExpression": {
														"expression": {
															"id": 1386,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "5649:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5659:9:9",
														"memberName": "packageId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 914,
														"src": "5649:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5636:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$912_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5607:62:9"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "5687:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "5679:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1392,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5700:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5706:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5700:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1394,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "5718:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5728:13:9",
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "5718:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5700:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:62:9"
											},
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "rewardPerYear",
														"nameLocation": "5759:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "5751:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1400,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "5776:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStake_$923_memory_ptr",
																			"typeString": "struct CAFIFarming.UserStake memory"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5786:6:9",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 916,
																	"src": "5776:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 1402,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "5795:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage memory"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5803:3:9",
																	"memberName": "apy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 907,
																	"src": "5795:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5776:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1405,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5775:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5810:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "5775:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5751:64:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1409,
																	"name": "rewardPerYear",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "5833:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1410,
																	"name": "timeStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "5849:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5833:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1412,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5832:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5863:8:9",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "5832:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1365,
												"id": 1415,
												"nodeType": "Return",
												"src": "5825:46:9"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "5350:40:9",
										"text": " @notice Hitung reward"
									},
									"functionSelector": "1852e8d9",
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "5404:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5428:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "5420:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "5442:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "5434:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5434:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:34:9"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "5475:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5475:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5474:9:9"
									},
									"scope": 1602,
									"src": "5395:483:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "6094:304:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1435,
																	"name": "stakeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1420,
																	"src": "6160:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1436,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "6194:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1437,
																	"name": "apy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "6221:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1438,
																	"name": "minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "6248:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "74727565",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6280:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1434,
																"name": "FarmPackage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "6122:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FarmPackage_$912_storage_ptr_$",
																	"typeString": "type(struct CAFIFarming.FarmPackage storage pointer)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"6148:10:9",
																"6184:8:9",
																"6216:3:9",
																"6238:8:9",
																"6270:8:9"
															],
															"names": [
																"stakeToken",
																"duration",
																"apy",
																"minStake",
																"isActive"
															],
															"nodeType": "FunctionCall",
															"src": "6122:173:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																"typeString": "struct CAFIFarming.FarmPackage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FarmPackage_$912_memory_ptr",
																"typeString": "struct CAFIFarming.FarmPackage memory"
															}
														],
														"expression": {
															"id": 1431,
															"name": "farmPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "6104:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
																"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6117:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6104:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage_ptr_$_t_struct$_FarmPackage_$912_storage_$returns$__$attached_to$_t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CAFIFarming.FarmPackage storage ref[] storage pointer,struct CAFIFarming.FarmPackage storage ref)"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:192:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "6104:192:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1444,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6324:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6337:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6324:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6346:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6324:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1448,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "6349:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "6361:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1450,
															"name": "apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "6371:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1451,
															"name": "minStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "6376:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6386:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1443,
														"name": "PackageAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "6311:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256,bool)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6311:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "EmitStatement",
												"src": "6306:85:9"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "5884:55:9",
										"text": " @notice Tambahkan paket farming baru"
									},
									"functionSelector": "eb16975d",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1428,
												"name": "onlyOwner",
												"nameLocations": [
													"6084:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6084:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6084:9:9"
										}
									],
									"name": "addFarmPackage",
									"nameLocation": "5953:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "stakeToken",
												"nameLocation": "5985:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "5977:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "6013:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "6005:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "6039:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "6031:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6031:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "minStake",
												"nameLocation": "6060:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "6052:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6052:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5967:107:9"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6094:0:9"
									},
									"scope": 1602,
									"src": "5944:454:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "6547:132:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1467,
																"name": "packageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "6565:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1468,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6577:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6590:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6577:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6565:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207061636b616765204944",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6598:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																"typeString": "literal_string \"Invalid package ID\""
															},
															"value": "Invalid package ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																"typeString": "literal_string \"Invalid package ID\""
															}
														],
														"id": 1466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6557:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6557:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "6557:62:9"
											},
											{
												"expression": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1474,
																"name": "farmPackages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "6629:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
																	"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																}
															},
															"id": 1476,
															"indexExpression": {
																"id": 1475,
																"name": "packageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "6642:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6629:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_storage",
																"typeString": "struct CAFIFarming.FarmPackage storage ref"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6653:8:9",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "6629:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1478,
														"name": "isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "6664:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6629:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "6629:43:9"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "6404:58:9",
										"text": " @notice Aktif/nonaktifkan paket farming"
									},
									"functionSelector": "0a34cc12",
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1463,
												"name": "onlyOwner",
												"nameLocations": [
													"6537:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6537:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6537:9:9"
										}
									],
									"name": "toggleFarmPackage",
									"nameLocation": "6476:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "6502:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "6494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "6518:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "6513:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6513:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:34:9"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6547:0:9"
									},
									"scope": 1602,
									"src": "6467:212:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "6822:270:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1493,
																"name": "packageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "6840:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1494,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6852:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6865:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6852:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6840:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207061636b616765204944",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6873:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																"typeString": "literal_string \"Invalid package ID\""
															},
															"value": "Invalid package ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																"typeString": "literal_string \"Invalid package ID\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6832:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6832:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "6832:62:9"
											},
											{
												"assignments": [
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "6924:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "6904:27:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1501,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1500,
																"name": "FarmPackage",
																"nameLocations": [
																	"6904:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 912,
																"src": "6904:11:9"
															},
															"referencedDeclaration": 912,
															"src": "6904:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"baseExpression": {
														"id": 1503,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "6934:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$912_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1505,
													"indexExpression": {
														"id": 1504,
														"name": "packageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "6947:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6934:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$912_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6904:53:9"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "oldAPY",
														"nameLocation": "6975:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "6967:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6967:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"expression": {
														"id": 1509,
														"name": "package",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "6984:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
															"typeString": "struct CAFIFarming.FarmPackage storage pointer"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6992:3:9",
													"memberName": "apy",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 907,
													"src": "6984:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6967:28:9"
											},
											{
												"expression": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1512,
															"name": "package",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "7005:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$912_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage storage pointer"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7013:3:9",
														"memberName": "apy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 907,
														"src": "7005:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1515,
														"name": "newAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "7019:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7005:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "7005:20:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1519,
															"name": "packageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "7059:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1520,
															"name": "oldAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "7070:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1521,
															"name": "newAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "7078:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "PackageAPYUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "7041:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7041:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "EmitStatement",
												"src": "7036:49:9"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "6685:62:9",
										"text": " @notice Atur ulang APY untuk paket tertentu"
									},
									"functionSelector": "5acd2e4c",
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1489,
												"name": "onlyOwner",
												"nameLocations": [
													"6812:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6812:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6812:9:9"
										}
									],
									"name": "setAPY",
									"nameLocation": "6761:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "6776:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "6768:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "6795:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "6787:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:35:9"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6822:0:9"
									},
									"scope": 1602,
									"src": "6752:340:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "7215:85:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "7233:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7240:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "7233:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61782066656520697320313025",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7246:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df",
																"typeString": "literal_string \"Max fee is 10%\""
															},
															"value": "Max fee is 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5fbd7f9202e1a17d2b34e31ba12b3725cf9f5de7afd0dea293305ebf4a1968df",
																"typeString": "literal_string \"Max fee is 10%\""
															}
														],
														"id": 1533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7225:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7225:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "7225:38:9"
											},
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1540,
														"name": "autoFarmingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "7273:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1541,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "7290:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7273:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "7273:20:9"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "7098:53:9",
										"text": " @notice Set fee untuk auto farming"
									},
									"functionSelector": "181d06a9",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1530,
												"name": "onlyOwner",
												"nameLocations": [
													"7205:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7205:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7205:9:9"
										}
									],
									"name": "setAutoFarmingFee",
									"nameLocation": "7165:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "7191:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "7183:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7183:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7182:13:9"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7215:0:9"
									},
									"scope": 1602,
									"src": "7156:144:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "7429:157:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1554,
																"name": "newWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "7447:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7468:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7460:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1555,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7460:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7460:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7447:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7472:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																"typeString": "literal_string \"Zero address not allowed\""
															},
															"value": "Zero address not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																"typeString": "literal_string \"Zero address not allowed\""
															}
														],
														"id": 1553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7439:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7439:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "7439:60:9"
											},
											{
												"expression": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1563,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "7509:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1564,
														"name": "newWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "7526:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "7509:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1568,
															"name": "newWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "7569:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1567,
														"name": "FeeReceiverUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "7550:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7550:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "EmitStatement",
												"src": "7545:34:9"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "7306:53:9",
										"text": " @notice Update wallet penerima fee"
									},
									"functionSelector": "a8602fea",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1550,
												"name": "onlyOwner",
												"nameLocations": [
													"7419:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7419:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7419:9:9"
										}
									],
									"name": "setTreasuryWallet",
									"nameLocation": "7373:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "7399:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "7391:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7391:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7390:19:9"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7429:0:9"
									},
									"scope": 1602,
									"src": "7364:222:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "7705:186:9",
										"statements": [
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7723:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1600,
														"src": "7715:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7715:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"id": 1580,
													"name": "autoFarmingPool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 938,
													"src": "7732:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7715:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1583,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "7765:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7774:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7765:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206665657320746f207769746864726177",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7777:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																"typeString": "literal_string \"No fees to withdraw\""
															},
															"value": "No fees to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c",
																"typeString": "literal_string \"No fees to withdraw\""
															}
														],
														"id": 1582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7757:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7757:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "7757:42:9"
											},
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1589,
														"name": "autoFarmingPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "7809:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7827:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7809:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "7809:19:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1596,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "7861:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "7877:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1593,
															"name": "cafiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "7838:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7848:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "7838:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7838:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "7838:46:9"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "7592:65:9",
										"text": " @notice Owner dapat menarik biaya auto farming"
									},
									"functionSelector": "476343ee",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1576,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1575,
												"name": "onlyOwner",
												"nameLocations": [
													"7695:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7695:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7695:9:9"
										}
									],
									"name": "withdrawFees",
									"nameLocation": "7671:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7683:2:9"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7705:0:9"
									},
									"scope": 1602,
									"src": "7662:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1603,
							"src": "412:7481:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								951,
								961,
								969,
								977,
								991,
								999,
								1003
							]
						}
					],
					"src": "32:7861:9"
				},
				"id": 9
			}
		}
	}
}